{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"lodash\"","webpack:///external \"@grafana/ui\"","webpack:///external \"@grafana/data\"","webpack:///../node_modules/css-loader/dist/runtime/api.js","webpack:///../node_modules/style-loader/lib/addStyles.js","webpack:///external \"@grafana/runtime\"","webpack:///./components/ApplicationServiceEndpointMetrics/ApplicationBoundaryScope.css?61cc","webpack:///./components/ApplicationServiceEndpointMetrics/ApplicationBoundaryScope.css","webpack:///../node_modules/style-loader/lib/urls.js","webpack:///./components/plugin.css?fa54","webpack:///./components/plugin.css","webpack:///./instana-grafana.css?07a9","webpack:///./instana-grafana.css","webpack:///../node_modules/tslib/tslib.es6.js","webpack:///./util/request_handler.ts","webpack:///./util/target_util.ts","webpack:///./GlobalVariables.ts","webpack:///./util/time_util.ts","webpack:///./cache.ts","webpack:///./datasources/DataSource_Slo.ts","webpack:///./lists/metric_categories.ts","webpack:///./util/queryInterval_check.ts","webpack:///./lists/granularities.ts","webpack:///./lists/rollups.ts","webpack:///./util/rollup_granularity_util.ts","webpack:///./lists/max_metrics.ts","webpack:///./datasources/Datasource_Infrastructure.ts","webpack:///./util/delta_util.ts","webpack:///./util/instana_version.ts","webpack:///./util/aggregation_util.ts","webpack:///./util/analyze_util.ts","webpack:///./datasources/DataSource_Website.ts","webpack:///./lists/default_metric_catalog.ts","webpack:///./datasources/DataSource_Application.ts","webpack:///./datasources/DataSource_Service.ts","webpack:///./datasources/DataSource_Endpoint.ts","webpack:///./migration.ts","webpack:///./datasources/DataSource.ts","webpack:///./util/proxy_check.ts","webpack:///./components/ConfigEditor.tsx","webpack:///./components/ApplicationServiceEndpointMetrics/ApplicationBoundaryScope.tsx","webpack:///./components/ApplicationServiceEndpointMetrics/ApplicationServiceEndpointMetrics.tsx","webpack:///./lists/apply_call_to_entities.ts","webpack:///./components/FormField/FormWrapper.tsx","webpack:///./components/Entity/Entity.tsx","webpack:///./components/Analyze/ApplicationCallsMetrics.tsx","webpack:///./components/FormField/FormInput.tsx","webpack:///./components/Infrastructure/Custom/MetricFilter.tsx","webpack:///./components/FormField/FormSwitch.tsx","webpack:///./components/Infrastructure/Custom/FreeTextMetrics.tsx","webpack:///./lists/aggregation_function.ts","webpack:///./components/AdvancedSettings/AggregateQuery.tsx","webpack:///./components/AdvancedSettings/AdvancedSettings.tsx","webpack:///./components/FormField/FormSelect.tsx","webpack:///./components/Infrastructure/QueryType.tsx","webpack:///./components/Infrastructure/Infrastructure.tsx","webpack:///./lists/slo_specifics.ts","webpack:///./components/SLOInformation/SloInformation.tsx","webpack:///./lists/beacon_types.ts","webpack:///./components/Analyze/WebsiteMetrics.tsx","webpack:///./lists/operators.ts","webpack:///./components/Analyze/Filter.tsx","webpack:///./components/Metric/Metric.tsx","webpack:///./components/QueryEditor.tsx","webpack:///./module.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","useSourceMap","list","toString","this","map","item","content","cssMapping","btoa","sourceMapping","sourceMap","base64","unescape","encodeURIComponent","JSON","stringify","data","concat","sourceURLs","sources","source","sourceRoot","join","cssWithMappingToString","mediaQuery","dedupe","alreadyImportedModules","length","id","_i","push","fn","memo","stylesInDom","isOldIE","window","document","all","atob","apply","arguments","getTarget","target","parent","querySelector","getElement","styleTarget","HTMLIFrameElement","contentDocument","head","e","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","options","domStyle","refs","j","parts","addStyle","listToStyles","newStyles","base","part","css","media","insertStyleElement","style","insertInto","Error","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","createElement","undefined","attrs","type","nonce","getNonce","addAttrs","el","keys","forEach","setAttribute","obj","update","remove","result","transform","default","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","updateLink","href","applyToTag","newObj","DEBUG","newList","mayRemove","textStore","replaceText","index","replacement","filter","Boolean","styleSheet","cssText","cssNode","createTextNode","childNodes","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","__WEBPACK_EXTERNAL_MODULE__6__","locals","___CSS_LOADER_API_IMPORT___","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","extendStatics","b","setPrototypeOf","__proto__","Array","__extends","__","constructor","__assign","assign","__rest","getOwnPropertySymbols","propertyIsEnumerable","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","iterator","v","op","TypeError","pop","__read","ar","error","getRequest","endpoint","swallowError","maxRetries","doRequest","method","url","postRequest","request","useProxy","Authorization","apiToken","datasourceRequest","status","errors","includes","setTimeout","console","log","emptyResultData","refId","datapoints","buildTimeSeries","ALL_APPLICATIONS","ALL_ENDPOINTS","readTime","time","from","Math","floor","Date","valueOf","getTime","to","windowSize","getWindowSize","timeFilter","getTimeKey","msToMin","hoursToMs","hours","store","put","ttl","del","expiry","now","timeout","clearTimeout","instanaOptions","sliReportsCache","getConfiguredSLIs","sliReports","response","sliName","runQuery","sloReport","sloSpecific","sloValue","extractSpecificValueFromSLI","sliResult","buildResultArray","sli","errorBudgetRemaining","buildViolationDistributionTimeSeries","violationDistribution","timestamp","series","greens","reds","greys","granularity","isInvalidQueryInterval","queryIntervalLimit","availableFor","rollup","getDefaultChartGranularity","getPossibleGranularities","maxValues","possibleGranularities","granularities","getDefaultMetricRollupDuration","getPossibleRollups","possibleRollups","rollups","rollupDefinition","rollUp","timeToLiveSnapshotInfoCache","snapshotCache","snapshotInfoCache","catalogCache","typeCache","queryinterval_limit_infra","metric","showAllMetrics","freeTextMetrics","fetchSnapshotsForTarget","snapshots","fetchMultipleMetricsForSnapshots","allMetrics","metrics","extractMetricsFromText","fetchMetricsForSnapshots","freeText","metricsString","split","each","metricString","parse","slice","resultPromises","allResults","res","snapshot","fetchMetricsForSnapshot","snapshotId","timeInterval","timeseries","readTimeSeries","values","aggregation","buildLabel","stableHash","displayMaxMetricValue","maxValue","getMaxMetricValue","buildMaxMetricTarget","convertRelativeToAbsolute","maxMetrics","max_metrics","find","resultLabel","maxLabel","convertMetricNameToMaxLabel","datapoint","getEntityTypes","entityTypes","typesResponse","entry","plugin","sortBy","fetchTypesForTarget","query","fetchSnapshotTypesUrl","entityQuery","showOffline","getMetricsCatalog","metricCategory","catalogResponse","metricId","description","aggregations","entityType","pluginId","buildQuery","buildSnapshotCacheKey","fetchSnapshotContextsUrl","contextsResponse","snapshotInfo","fetchSnapshotUrl","snapshotResponse","reduceSnapshot","compact","pick","correctMeanToSum","secondMultiplier","parseInt","getHostSuffix","labelFormat","timeShift","timeShiftIsValid","omitLabels","versionCache","getVersion","cachedVersion","imageTag","majorVersion","aggregateTarget","targetLabel","customFilters","aggregationFunction","buildAggregationLabel","concatedTargetData","concatTargetData","aggregatedData","dataGroupedByTimestamp","aggregationLabel","timestampData","valuesOfTimestamp","aggregatedValue","toLowerCase","sum","mean","min","max","aggregateDataOfTimestamp","groupBy","buildResult","createTagFilter","tagFilter","tag","operator","stringValue","numberValue","booleanValue","readItemMetrics","getLabel","flatten","items","websitesCache","miscCache","queryinterval_limit_website_metrics","group","entity","fetchAnalyzeMetricsForWebsite","buildAnalyzeWebsiteLabel","getWebsites","websites","websitesResponse","website","getWebsiteTags","websiteTags","tagsResponse","getWebsiteMetricsCatalog","websiteCatalog","transformAggregations","sort","beaconTypes","transformBeaconTypes","a","tagFilters","filters","isValid","groupbyTag","groupbyTagSecondLevelKey","timeFrame","applicationsCache","queryinterval_limit_app_calls","fetchAnalyzeMetricsForApplication","showWarningCantShowAllResults","canLoadMore","buildAnalyzeApplicationLabel","getApplications","applications","paginateApplications","flattenDeep","pageSet","orderBy","boundaryScope","application","results","page","pageSize","pageLimit","queryParameters","totalHits","getApplicationTags","applicationTags","version","getCatalog","catalog","mapCatalogResponse","tags","getCatalogFromDeprecatedEndpoint","canApplyToSource","canApplyToDestination","getApplicationMetricsCatalog","applicationCallToEntity","getTagEntity","callToEntity","selectedEntity","fetchApplicationMetrics","applicationBoundaryScope","buildApplicationMetricLabel","servicesCache","getServicesOfApplication","applicationId","services","paginateServices","service","fetchServiceMetrics","buildServiceMetricLabel","endpointsCache","getEndpointsOfService","serviceId","endpoints","paginateEndpoints","fetchEndpointMetrics","endpointId","buildEndpointMetricLabel","selectedApplication","cf","metric_categories","category","instanceSettings","jsonData","instanaUrl","availableGranularities","availableRollups","availableTimeIntervals","dataSourceSlo","dataSourceInfrastructure","dataSourceWebsite","dataSourceApplication","dataSourceService","dataSourceEndpoint","resultCache","DataSource","range","targets","pseudoHash","targetTimeFilter","hide","setPossibleTimeIntervals","getDefaultTimeInterval","millis","convertTimeShiftToMillis","applyTimeShiftOnTimeFilter","omit","mapValues","adjustTimeFilterIfCached","buildTargetWithAppendedDataResult","getApplicationServiceEndpointMetrics","targetData","targetAndData","resultData","cacheResultIfNecessary","cloneDeep","applyTimeShiftIfNecessary","aggregateDataIfNecessary","queryinterval_limit_app_metrics","applyTimeShiftOnData","supportsDeltaRequests","hasResult","cachedObj","timeshift","newData","aggregateGraphs","hideOriginalGraphs","dt","appendResult","newDeltaData","cachedData","cachedResult","deltaData","matchingCachedData","size","sortedUniqBy","takeRight","t1","t2","newFrom","getDeltaRequestTimestamp","newTo","fromDefault","penultimate","getSloReports","fetchApplications","getTimeFilter","fetchApplicationTags","fetchServices","fetchEndpoints","fetchWebsites","parseTimeShift","endsWith","testDatasource","message","title","statusText","versions","props","onInstanaOptionsChange","eventItem","onOptionsChange","currentTarget","debouncedDetectFeatures","onSwitchChange","settings","debounce","detectFeatures","setState","canUseProxy","canQueryOfflineSnapshots","state","render","className","horizontal","required","width","placeholder","onChange","event","suffix","theme","allowSlo","dropdown","position","background","height","marginRight","inboundIcon","fill","allIcon","opacity","disabled","dropdown__list__item","colors","bg2","cursor","listStyle","borderRadius","active","setActive","handleClick","onClick","onBlur","contentEditable","placement","isUnmounting","onApplicationChange","onRunQuery","loadServices","loadEndpoints","onServiceChange","onEndpointChange","debouncedRunQuery","onGroupByTagSecondLevelKeyChange","onApplicationBoundaryScopeChange","scope","imgUrl","componentDidMount","loadApplications","datasource","updateMetrics","componentWillUnmount","apps","unshift","app","tooltip","menuPlacement","isSearchable","showGroupBySecondLevel","display","Component","FormWrapper","pointerEvents","stretch","children","dropdown__list","transition","maxHeight","overflow","zIndex","dropdown__list__active","iconTextContainer","iconStyle","alignItems","justifyContent","iconTextStyle","padding","destinationIcon","sourceIcon","Entity","onGroupChange","onApplicationCallToEntityChange","onCallToEntityChange","updateGroups","groups","queryKeyword","labelWidth","inputWidth","remainingProps","onFilterChange","addCustomFilter","removeCustomFilter","listFilter","variant","Switch","checked","onUseFreeTextMetricsChange","loadEntityTypes","useFreeTextMetrics","onFreeTextMetricsChange","onAggregateGraphs","onHideOriginalGraph","onAggregationFunctionChange","showAdditionalSettings","legendFormat","legendFormatPlaceholders","legendFormatTooltips","onLegendFormatChange","onTimeShiftChange","match","onShowAdvancedSettingsChange","showAdvancedSettings","legendFormatPlaceholder","setLegendFormatPlaceholder","setLegendFormatTooltip","hidden","invalid","searchable","onQueryChange","updateQueryTypes","debouncedEntityTypes","onTypeChange","queryTypes","noOptionsMessage","onSloChange","slo","onSloValueChange","onSloSpecificChange","sloReports","isValidSlo","loadSloReports","val","valid","shouldComponentUpdate","nextProps","nextState","nextContext","onWebsiteChange","onBeaconTypeChange","filterMetricsOnType","beacon_types","websiteMetrics","OPERATOR_STRING","OPERATOR_STRING_SET","OPERATOR_NUMBER","OPERATOR_BOOLEAN","OPERATOR_KEY_VALUE","addTagFilter","filterOperatorsOnType","removeTagFilter","validateChangeAndRun","onOperatorChange","onTagFilterStringValueChange","onTagFilterNumberValueChange","valueAsNumber","operators","canShowStringInput","onTagFilterBooleanValueChange","runDebounced","singleFilter","onMetricChange","canShowMaxMetricValue","onTimeIntervalChange","onAggregationChange","onShowMaxValueChange","onShowAllMetricsChange","availableMetrics","possibleTimeIntervals","possibleAggregations","canShowAggregation","canSelectAggregation","canShowAllMetrics","onCategoryChange","newCategory","selectionReset","changeAndRun","onMetricsFilter","setMetricPlaceholder","filterForEntityType","findMatchingEntityTypes","filterResults","filterEntityTypes","types","newAvailableMetrics","applyFilterToMetricList","isAbleToShowAllMetrics","checkMetricAndRefresh","defaultQuery","selectedWindowSize","componentDidUpdate","prevProps","prevState","nrOfTotalResults","filterResult","filteredMetrics","resetMetricSelection","resetEntityTypeSelection","resetEntitySelection","resetServices","resetEndpoints","resetSLO","text","color","setConfigEditor","setQueryEditor"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../../node_modules/postcss-loader/src/index.js??ref--8-2!../../../node_modules/sass-loader/lib/loader.js!./ApplicationBoundaryScope.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../../node_modules/postcss-loader/src/index.js??ref--8-2!../../../node_modules/sass-loader/lib/loader.js!./ApplicationBoundaryScope.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../../node_modules/postcss-loader/src/index.js??ref--8-2!../../../node_modules/sass-loader/lib/loader.js!./ApplicationBoundaryScope.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \".dropdown {\\n  position: relative;\\n  background: transparent;\\n  width: '32px';\\n  height: '32px';\\n  margin-right: '4px'; }\\n\\n.dropdown-list {\\n  transition: max-height .2s ease-out;\\n  max-height: 0;\\n  overflow: hidden;\\n  z-index: 2;\\n  position: absolute; }\\n\\n.dropdown-list-active {\\n  overflow: hidden;\\n  z-index: 2;\\n  /* we set a zIndex to ensure that the overlay is above other elements and does not move any DOM elements. */\\n  max-height: 1000px;\\n  opacity: 1;\\n  position: absolute; }\\n\\n.iconTextContainer {\\n  display: inline-flex; }\\n\\n.iconStyle {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center; }\\n\\n.iconTextStyle {\\n  padding: 7px; }\\n\", \"\",{\"version\":3,\"sources\":[\"ApplicationBoundaryScope.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,kBAAkB;EAClB,uBAAuB;EACvB,aAAa;EACb,cAAc;EACd,mBAAmB,EAAE;;AAEvB;EACE,mCAAmC;EACnC,aAAa;EACb,gBAAgB;EAChB,UAAU;EACV,kBAAkB,EAAE;;AAEtB;EACE,gBAAgB;EAChB,UAAU;EACV,2GAA2G;EAC3G,kBAAkB;EAClB,UAAU;EACV,kBAAkB,EAAE;;AAEtB;EACE,oBAAoB,EAAE;;AAExB;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB,EAAE;;AAE3B;EACE,YAAY,EAAE\",\"file\":\"ApplicationBoundaryScope.css\",\"sourcesContent\":[\".dropdown {\\n  position: relative;\\n  background: transparent;\\n  width: '32px';\\n  height: '32px';\\n  margin-right: '4px'; }\\n\\n.dropdown-list {\\n  transition: max-height .2s ease-out;\\n  max-height: 0;\\n  overflow: hidden;\\n  z-index: 2;\\n  position: absolute; }\\n\\n.dropdown-list-active {\\n  overflow: hidden;\\n  z-index: 2;\\n  /* we set a zIndex to ensure that the overlay is above other elements and does not move any DOM elements. */\\n  max-height: 1000px;\\n  opacity: 1;\\n  position: absolute; }\\n\\n.iconTextContainer {\\n  display: inline-flex; }\\n\\n.iconStyle {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center; }\\n\\n.iconTextStyle {\\n  padding: 7px; }\\n\"]}]);\n// Exports\nmodule.exports = exports;\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../node_modules/postcss-loader/src/index.js??ref--8-2!../../node_modules/sass-loader/lib/loader.js!./plugin.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../node_modules/postcss-loader/src/index.js??ref--8-2!../../node_modules/sass-loader/lib/loader.js!./plugin.css\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../node_modules/postcss-loader/src/index.js??ref--8-2!../../node_modules/sass-loader/lib/loader.js!./plugin.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \".entityDropdown {\\n  min-width: 80px; }\\n\", \"\",{\"version\":3,\"sources\":[\"plugin.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,eAAe,EAAE\",\"file\":\"plugin.css\",\"sourcesContent\":[\".entityDropdown {\\n  min-width: 80px; }\\n\"]}]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--8-1!../node_modules/postcss-loader/src/index.js??ref--8-2!../node_modules/sass-loader/lib/loader.js!./instana-grafana.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/dist/cjs.js??ref--8-1!../node_modules/postcss-loader/src/index.js??ref--8-2!../node_modules/sass-loader/lib/loader.js!./instana-grafana.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--8-1!../node_modules/postcss-loader/src/index.js??ref--8-2!../node_modules/sass-loader/lib/loader.js!./instana-grafana.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \"path[d=\\\"M18.71,7.21a1,1,0,0,0-1.42,0L9.84,14.67,6.71,11.53A1,1,0,1,0,5.29,13l3.84,3.84a1,1,0,0,0,1.42,0l8.16-8.16A1,1,0,0,0,18.71,7.21Z\\\"] {\\n  display: none; }\\n\", \"\",{\"version\":3,\"sources\":[\"instana-grafana.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,aAAa,EAAE\",\"file\":\"instana-grafana.css\",\"sourcesContent\":[\"path[d=\\\"M18.71,7.21a1,1,0,0,0-1.42,0L9.84,14.67,6.71,11.53A1,1,0,1,0,5.29,13l3.84,3.84a1,1,0,0,0,1.42,0l8.16-8.16A1,1,0,0,0,18.71,7.21Z\\\"] {\\n  display: none; }\\n\"]}]);\n// Exports\nmodule.exports = exports;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { getBackendSrv } from '@grafana/runtime';\nimport { BackendSrvRequest } from '@grafana/runtime/services/backendSrv';\nimport { InstanaOptions } from '../types/instana_options';\nimport { DataSourceInstanceSettings } from '@grafana/data';\n\nexport const getRequest = (options: InstanaOptions, endpoint: string, swallowError = false, maxRetries = 1) => {\n  const request = {\n    method: 'GET',\n    url: options.url + endpoint,\n  };\n\n  return doRequest(options, request, swallowError, maxRetries);\n};\n\nexport const postRequest = (\n  options: InstanaOptions,\n  endpoint: string,\n  data: {},\n  swallowError = false,\n  maxRetries = 0\n) => {\n  const request = {\n    method: 'POST',\n    url: options.url + endpoint,\n    data: data,\n  };\n\n  return doRequest(options, request, swallowError, maxRetries);\n};\n\nfunction doRequest(\n  options: InstanaOptions,\n  request: BackendSrvRequest,\n  swallowError: boolean,\n  maxRetries: number\n): any {\n  if (!options.useProxy) {\n    request['headers'] = {\n      Authorization: 'apiToken ' + options.apiToken,\n    };\n  }\n  return getBackendSrv()\n    .datasourceRequest(request)\n    .catch((error) => {\n      if (error.status === 429) {\n        // if the error was caused by a concurrent execution limit, we will retry\n        if (\n          maxRetries > 0 &&\n          error.data?.errors &&\n          error.data.errors[0] &&\n          error.data.errors[0].includes('concurrent')\n        ) {\n          const backoff = maxRetries >= 4 ? 10000 : (4 - maxRetries) * 20000; // something between 10 and 60 seconds\n          return new Promise((resolve) => setTimeout(resolve, backoff)).then(() => {\n            return doRequest(options, request, swallowError, maxRetries - 1);\n          });\n        }\n        throw new Error('API limit is reached.');\n        return;\n      }\n\n      if (swallowError && (error.status >= 400 || error.status < 500)) {\n        console.log(error);\n        return;\n      }\n      if (maxRetries > 0 && error.status >= 500) {\n        return doRequest(options, request, swallowError, maxRetries - 1);\n      }\n      throw error;\n    });\n}\n\nexport function instanaUrl(instanceSettings: DataSourceInstanceSettings<InstanaOptions>): string {\n  if (instanceSettings.jsonData.useProxy) {\n    return instanceSettings.url + '/instana'; // to match proxy route in plugin.json\n  } else {\n    return instanceSettings.jsonData.url;\n  }\n}\n","import { TimeSeries, TimeSeriesPoints } from '@grafana/data';\n\nexport function emptyResultData(refId: string): TimeSeries {\n  return {\n    target: refId,\n    datapoints: [],\n  };\n}\n\nexport function buildTimeSeries(label: string, refId: string, datapoints: TimeSeriesPoints): TimeSeries {\n  return {\n    target: label,\n    refId: refId,\n    datapoints: datapoints,\n  };\n}\n","/* CONFIG */\nexport const PAGINATION_LIMIT = 15; // pagesize=200 => 3000 results in dropdown (~30sec.)\nexport const CACHE_MAX_AGE = 60000;\nexport const SEPARATOR = '|';\n\n/* CATEGORIES */\nexport const BUILT_IN_METRICS = 0;\nexport const CUSTOM_METRICS = 1;\nexport const ANALYZE_APPLICATION_METRICS = 2;\nexport const ANALYZE_WEBSITE_METRICS = 3;\nexport const APPLICATION_SERVICE_ENDPOINT_METRICS = 4; // replaces previous ->\n// APPLICATION_METRICS = '4';\n// SERVICE_METRICS = '5';\n// ENDPOINT_METRICS = '6';\nexport const SLO_INFORMATION = 7;\n\n/* DROPDOWN DEFAULTS */\nexport const ALL_APPLICATIONS = '-- No Application Filter --';\nexport const ALL_WEBSITES = '-- No Website Filter --';\nexport const ALL_SERVICES = '-- No Service Filter --';\nexport const ALL_ENDPOINTS = '-- No Endpoint Filter --';\n\n/* PLACEHOLDER */\nexport const PLEASE_SPECIFY = 'Please specify';\n","import { TimeRange } from '@grafana/data/types/time';\nimport TimeFilter from '../types/time_filter';\nimport { SEPARATOR } from '../GlobalVariables';\n\nexport function readTime(time: TimeRange): TimeFilter {\n  const from = Math.floor(new Date(time!.from.valueOf()).getTime() / 1000) * 1000;\n  const to = Math.floor(new Date(time!.to.valueOf()).getTime() / 1000) * 1000;\n  return {\n    from: from,\n    to: to,\n    windowSize: to - from,\n  };\n}\n\nexport function getWindowSize(timeFilter: TimeFilter): number {\n  return timeFilter.from ? timeFilter.to - timeFilter.from : timeFilter.windowSize;\n}\n\nexport function getTimeKey(timeFilter: TimeFilter): string {\n  // time might be part of a cache key as this can cause different results\n  return msToMin(timeFilter.from) + SEPARATOR + msToMin(timeFilter.to);\n}\n\nfunction msToMin(time: number): number {\n  return Math.floor(time / 60000);\n}\n\nexport function hoursToMs(hours: any): number {\n  if (hours > 0) {\n    return hours * 60 * 60 * 1000;\n  }\n  return 0;\n}\n","export default class Cache<T> {\n  store: any;\n\n  constructor() {\n    this.store = {};\n  }\n\n  put(key: string, value: T, ttl = 70000): void {\n    if (key === undefined || value === undefined) {\n      return;\n    }\n\n    this.del(key);\n    this.store[key] = {\n      value,\n      expiry: Date.now() + ttl,\n      timeout: setTimeout(() => {\n        this.del(key);\n      }, ttl),\n    };\n  }\n\n  get(key: string): T {\n    var item = this.store[key];\n    if (item && !(item.expiry && item.expiry > Date.now())) {\n      this.del(key);\n      item = undefined;\n    }\n    return item && item.value;\n  }\n\n  del(key: string): void {\n    if (this.store.hasOwnProperty(key)) {\n      clearTimeout(this.store[key].timeout);\n      delete this.store[key];\n    }\n  }\n}\n","import { SelectableValue, TimeSeries, TimeSeriesPoints } from '@grafana/data';\nimport { buildTimeSeries, emptyResultData } from '../util/target_util';\nimport { InstanaOptions } from '../types/instana_options';\nimport { InstanaQuery } from '../types/instana_query';\nimport { getRequest } from '../util/request_handler';\nimport { getWindowSize } from '../util/time_util';\nimport TimeFilter from '../types/time_filter';\nimport Cache from '../cache';\nimport _ from 'lodash';\n\nexport class DataSourceSlo {\n  sliReportsCache: Cache<Promise<SelectableValue[]>>;\n  instanaOptions: InstanaOptions;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.sliReportsCache = new Cache<Promise<SelectableValue[]>>();\n  }\n\n  getConfiguredSLIs(): Promise<SelectableValue[]> {\n    let sliReports = this.sliReportsCache.get('sliReports');\n    if (sliReports) {\n      return sliReports;\n    }\n\n    sliReports = getRequest(this.instanaOptions, '/api/settings/sli').then((response: any) =>\n      _.map(response.data, (r) => {\n        return {\n          key: r.id,\n          label: r.sliName,\n        };\n      })\n    );\n\n    this.sliReportsCache.put('sliReports', sliReports);\n    return sliReports;\n  }\n\n  runQuery(target: InstanaQuery, timeFilter: TimeFilter) {\n    //avoid involid calls\n    if (\n      !target ||\n      !target.sloReport ||\n      !target.sloReport.key ||\n      !target.sloSpecific ||\n      !target.sloSpecific.key ||\n      !target.sloValue\n    ) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    let endpoint =\n      '/api/sli/report/' +\n      target.sloReport.key +\n      '?from=' +\n      timeFilter.from +\n      '&to=' +\n      timeFilter.to +\n      '&slo=' +\n      target.sloValue;\n    return getRequest(this.instanaOptions, endpoint).then((response: any) => {\n      return this.extractSpecificValueFromSLI(target, response.data, timeFilter);\n    });\n  }\n\n  extractSpecificValueFromSLI(target: InstanaQuery, sliResult: any, timeFilter: TimeFilter) {\n    if (target.sloSpecific.key === 'SLI') {\n      return [\n        buildTimeSeries(target.sloSpecific.label!, target.refId, this.buildResultArray(sliResult.sli, timeFilter.to)),\n      ];\n    } else if (target.sloSpecific.key === 'Remaining Error Budget') {\n      return [\n        buildTimeSeries(\n          target.sloSpecific.label!,\n          target.refId,\n          this.buildResultArray(sliResult.errorBudgetRemaining, timeFilter.to)\n        ),\n      ];\n    } else if (target.sloSpecific.key === 'Timeseries') {\n      return this.buildViolationDistributionTimeSeries(target, sliResult.violationDistribution, timeFilter);\n    }\n\n    return [emptyResultData(target.refId)];\n  }\n\n  buildResultArray(result: number, timestamp: number): TimeSeriesPoints {\n    return [[result, timestamp]];\n  }\n\n  buildViolationDistributionTimeSeries(target: InstanaQuery, series: any, timeFilter: TimeFilter): TimeSeries[] {\n    const greens: any[] = [];\n    const reds: any[] = [];\n    const greys: any[] = [];\n\n    let granularity = getWindowSize(timeFilter) / Object.keys(series).length;\n    _.forEach(series, (value: number, index: number) => {\n      if (value === 1) {\n        greens.push([1, timeFilter.from + index * granularity]);\n      } else if (value === 0) {\n        greys.push([1, timeFilter.from + index * granularity]);\n      } else if (value === -1) {\n        reds.push([1, timeFilter.from + index * granularity]);\n      }\n    });\n\n    const result: TimeSeries[] = [];\n    result.push(buildTimeSeries('No violation', target.refId, greens));\n    result.push(buildTimeSeries('Violation', target.refId, reds));\n    result.push(buildTimeSeries('No data', target.refId, greys));\n\n    return result;\n  }\n}\n","/**\n * Do not remove the commented stuff.\n */\nexport default [\n  {\n    label: 'Infrastructure built-in metrics',\n    key: 0,\n  },\n  {\n    label: 'Infrastructure custom metrics',\n    key: 1,\n  },\n  {\n    // replaces Application metrics(4) & Service metrics(5) & Endpoint metrics(6)\n    label: 'Application/service/endpoint metrics',\n    key: 4,\n  },\n  {\n    label: 'Analyze application calls',\n    key: 2,\n  },\n  {\n    label: 'Analyze website',\n    key: 3,\n  },\n  {\n    label: 'SLO information',\n    key: 7,\n  },\n];\n","/**\n * Util method to validate query intervals which are too big.\n *\n * @param windowSize in ms\n * @param queryIntervalLimit in ms\n */\nexport function isInvalidQueryInterval(windowSize: number, queryIntervalLimit?: number): boolean {\n  if (queryIntervalLimit) {\n    if (queryIntervalLimit > 0) {\n      return Math.floor(windowSize / 1000) * 1000 > queryIntervalLimit;\n    }\n    return false;\n  }\n\n  return false;\n}\n","export default [\n  {\n    value: 1, // 1s\n    label: '1s',\n  },\n  {\n    value: 5, // 5s\n    label: '5s',\n  },\n  {\n    value: 10, // 10s\n    label: '10s',\n  },\n  {\n    value: 60, // 1m\n    label: '1min',\n  },\n  {\n    value: 60 * 5, // 5m\n    label: '5min',\n  },\n  {\n    value: 60 * 10, // 10m\n    label: '10min',\n  },\n  {\n    value: 60 * 60, // 1h\n    label: '1h',\n  },\n  {\n    value: 60 * 60 * 5, // 5h\n    label: '5h',\n  },\n  {\n    value: 60 * 60 * 10, // 10h\n    label: '10h',\n  },\n  {\n    value: 60 * 60 * 24, // 1d\n    label: '1d',\n  },\n  {\n    value: 60 * 60 * 24 * 5, // 5d\n    label: '5d',\n  },\n  {\n    value: 60 * 60 * 24 * 10, // 10d\n    label: '10d',\n  },\n];\n","export default [\n  {\n    availableFor: 1000 * 60 * 60 * 24, // 1d\n    rollup: 1000, // 1s\n    label: '1s',\n  },\n  {\n    availableFor: 1000 * 60 * 60 * 24, // 1d\n    rollup: 1000 * 5, // 5s\n    label: '5s',\n  },\n  {\n    availableFor: 1000 * 60 * 60 * 24 * 31, // 1 month\n    rollup: 1000 * 60, // 1m\n    label: '1min',\n  },\n  {\n    availableFor: 1000 * 60 * 60 * 24 * 31 * 3, // 3 months\n    rollup: 1000 * 60 * 5, // 5m\n    label: '5min',\n  },\n  {\n    availableFor: 1000 * 60 * 60 * 24 * 31 * 12, // 1 year aka forever\n    rollup: 1000 * 60 * 60, // 1h\n    label: '1h',\n  },\n];\n","import granularities from '../lists/granularities';\nimport TimeFilter from '../types/time_filter';\nimport Selectable from '../types/selectable';\nimport { getWindowSize } from './time_util';\nimport rollups from '../lists/rollups';\n\nconst MAX_DATAPOINTS_ANALYZE = 600;\nconst MAX_DATAPOINTS_INFRASTRUCTURE = 800;\nconst UI_DATAPOINTS_ANALYZE = 80;\n\nfunction currentTime() {\n  return Date.now();\n}\n\nexport function getDefaultChartGranularity(windowSize: number): Selectable {\n  return getPossibleGranularities(windowSize, UI_DATAPOINTS_ANALYZE)[0];\n}\n\nexport function getPossibleGranularities(windowSize: number, maxValues = MAX_DATAPOINTS_ANALYZE): Selectable[] {\n  let possibleGranularities = granularities.filter(\n    (granularity) => windowSize / 1000 / granularity.value <= maxValues && granularity.value * 1000 <= windowSize\n  );\n\n  // window sizes of this length and up have a granularity of at least 1h\n  if (windowSize > 48000001) {\n    possibleGranularities = possibleGranularities.filter((granularity) => granularity.value >= 3600);\n  }\n\n  if (windowSize >= 1800000) {\n    possibleGranularities = possibleGranularities.filter((granularity) => granularity.value >= 60);\n  }\n\n  if (possibleGranularities.length > 0) {\n    return possibleGranularities.map((granularity) => ({\n      key: granularity.value.toString(),\n      label: granularity.label,\n    }));\n  }\n\n  return [\n    {\n      key: granularities[granularities.length - 1].value.toString(),\n      label: granularities[granularities.length - 1].label,\n    },\n  ];\n}\n\nexport function getDefaultMetricRollupDuration(timeFilter: TimeFilter): Selectable {\n  return getPossibleRollups(timeFilter)[0];\n}\n\nexport function getPossibleRollups(timeFilter: TimeFilter): Selectable[] {\n  // Ignoring time differences for now since small time differences\n  // can be accepted. This time is only used to calculate the rollup.\n  const now = currentTime();\n  const windowSize = getWindowSize(timeFilter);\n\n  let possibleRollups = rollups\n    .filter((rollupDefinition) => timeFilter.from >= now - rollupDefinition.availableFor)\n    .filter((rollUp) => windowSize >= rollUp.rollup && windowSize / rollUp.rollup <= MAX_DATAPOINTS_INFRASTRUCTURE);\n\n  if (possibleRollups.length > 0) {\n    return possibleRollups.map((rollup) => ({\n      key: rollup.rollup.toString(),\n      label: rollup.label,\n    }));\n  }\n\n  return [\n    {\n      key: rollups[rollups.length - 1].rollup.toString(),\n      label: rollups[rollups.length - 1].label,\n    },\n  ];\n}\n","export default [\n  {\n    key: 'cpu.used', // metric.key\n    value: 'cpu.count', // value of the metric found in GET /snapshots/{snapshotId}\n    label: 'cpu.max', // label that shall be shown as target in graph\n  },\n  {\n    key: 'memory.used',\n    value: 'memory.total',\n    label: 'memory.max',\n  },\n  {\n    key: 'openFiles.used',\n    value: 'openFiles.max',\n    label: 'openFiles.max',\n  },\n];\n","import { SelectableValue } from '@grafana/data';\nimport { InstanaOptions } from '../types/instana_options';\nimport { InstanaQuery } from '../types/instana_query';\nimport { getRequest } from '../util/request_handler';\nimport TimeFilter from '../types/time_filter';\nimport Cache from '../cache';\nimport { CUSTOM_METRICS, SEPARATOR } from '../GlobalVariables';\nimport _ from 'lodash';\nimport { getTimeKey, hoursToMs } from '../util/time_util';\nimport { isInvalidQueryInterval } from '../util/queryInterval_check';\nimport { emptyResultData } from '../util/target_util';\nimport { getDefaultMetricRollupDuration } from '../util/rollup_granularity_util';\nimport max_metrics from '../lists/max_metrics';\n\nexport class DataSourceInfrastructure {\n  instanaOptions: InstanaOptions;\n  snapshotCache: Cache<Promise<SelectableValue[]>>;\n  snapshotInfoCache: Cache<Promise<SelectableValue[]>>;\n  catalogCache: Cache<Promise<SelectableValue[]>>;\n  typeCache: Cache<Promise<SelectableValue[]>>;\n  timeToLiveSnapshotInfoCache = 4000000; // set to 1,11 hour\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.snapshotCache = new Cache<Promise<SelectableValue[]>>();\n    this.snapshotInfoCache = new Cache<Promise<SelectableValue[]>>();\n    this.catalogCache = new Cache<Promise<SelectableValue[]>>();\n    this.typeCache = new Cache<Promise<SelectableValue[]>>();\n  }\n\n  runQuery(target: InstanaQuery, timeFilter: TimeFilter) {\n    // do not try to execute to big queries\n    if (isInvalidQueryInterval(timeFilter.windowSize, hoursToMs(this.instanaOptions.queryinterval_limit_infra))) {\n      throw new Error(\n        'Limit for maximum selectable windowsize exceeded, max is: ' +\n          this.instanaOptions.queryinterval_limit_infra +\n          ' hours'\n      );\n    }\n\n    // do not try to retrieve data without selected metric\n    if ((!target.metric || !target.metric.key) && !target.showAllMetrics && !target.freeTextMetrics) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    // for every target, fetch snapshots in the selected timeframe that satisfy the lucene query.\n    return this.fetchSnapshotsForTarget(target, timeFilter).then((snapshots) => {\n      if (target.showAllMetrics) {\n        // only available for custom metrics\n        return this.fetchMultipleMetricsForSnapshots(target, snapshots, timeFilter, target.allMetrics);\n      } else if (target.freeTextMetrics) {\n        // only available for custom metrics\n        const metrics = this.extractMetricsFromText(target.freeTextMetrics);\n        return this.fetchMultipleMetricsForSnapshots(target, snapshots, timeFilter, metrics);\n      } else {\n        return this.fetchMetricsForSnapshots(target, snapshots, timeFilter, target.metric);\n      }\n    });\n  }\n\n  extractMetricsFromText(freeText: string): string[] {\n    const metricsString = freeText.replace(/\\s/g, '').split(',');\n    let metrics: string[] = [];\n    _.each(metricsString, (metricString) => metrics.push(JSON.parse('{ \"key\": \"' + metricString + '\"}')));\n\n    if (metrics.length > 4) {\n      metrics = metrics.slice(0, 4); // API supports up to 4 metrics at once\n    }\n\n    return metrics;\n  }\n\n  fetchMultipleMetricsForSnapshots(target: InstanaQuery, snapshots: any, timeFilter: TimeFilter, metrics: any) {\n    const resultPromises: any = [];\n    _.forEach(metrics, (metric) => {\n      resultPromises.push(this.fetchMetricsForSnapshots(target, snapshots, timeFilter, metric));\n    });\n\n    return Promise.all(resultPromises).then((allResults) => {\n      const allMetrics: any = [];\n      allResults.forEach((result: any) => result.forEach((s: any) => allMetrics.push(s)));\n      return allMetrics;\n    });\n  }\n\n  fetchMetricsForSnapshots(target: InstanaQuery, snapshots: any, timeFilter: TimeFilter, metric: any) {\n    let maxValues: any = [];\n    let res = _.map(snapshots, (snapshot, index) => {\n      // ...fetch the metric data for every snapshot in the results.\n      return this.fetchMetricsForSnapshot(snapshot.snapshotId, timeFilter, target.timeInterval.key, metric).then(\n        (response: any) => {\n          let timeseries = this.readTimeSeries(response.data.values, target.aggregation, timeFilter);\n          let result = {\n            target: this.buildLabel(snapshot.response, snapshot.host, target, index, metric),\n            datapoints: _.map(timeseries, (value) => [value.value, value.timestamp]),\n            refId: target.refId,\n            key: target.stableHash,\n          };\n\n          if (target.displayMaxMetricValue) {\n            const maxValue = this.getMaxMetricValue(target.metric, snapshot);\n            maxValues.push(this.buildMaxMetricTarget(target, timeseries, maxValue, result.target));\n            result.datapoints = this.convertRelativeToAbsolute(result.datapoints, maxValue);\n          }\n\n          return result;\n        }\n      );\n    });\n\n    return Promise.all(res).then((allResults) => {\n      if (target.displayMaxMetricValue) {\n        allResults = _.concat(res, maxValues);\n      }\n      return Promise.all(allResults);\n    });\n  }\n\n  getMaxMetricValue(metric: any, snapshot: any): number {\n    const maxMetrics: any = max_metrics;\n    return snapshot.response.data.data[_.find(maxMetrics, (m: any) => m.key === metric.key).value];\n  }\n\n  buildMaxMetricTarget(target: any, timeseries: any, maxValue: any, resultLabel: any) {\n    let datapoints = _.map(timeseries, (series) => {\n      return [maxValue, series.timestamp];\n    });\n\n    let maxLabel = this.convertMetricNameToMaxLabel(target.metric);\n\n    return {\n      target: resultLabel + ' ' + maxLabel,\n      datapoints: datapoints,\n      refId: target.refId,\n      key: target.stableHash + maxLabel,\n    };\n  }\n\n  convertMetricNameToMaxLabel(metric: any): string {\n    const maxMetrics: any = max_metrics;\n    return _.find(maxMetrics, (m) => m.key === metric.key).label;\n  }\n\n  convertRelativeToAbsolute(datapoints: any, maxValue: any) {\n    return _.map(datapoints, (datapoint) => {\n      if (datapoint[0]) {\n        return [datapoint[0] * maxValue, datapoint[1]];\n      }\n      return [null, datapoint[1]];\n    });\n  }\n\n  getEntityTypes(): Promise<SelectableValue[]> {\n    let entityTypes = this.typeCache.get('entityTypes');\n    if (entityTypes) {\n      return entityTypes;\n    }\n\n    entityTypes = getRequest(this.instanaOptions, '/api/infrastructure-monitoring/catalog/plugins').then(\n      (typesResponse: any) => {\n        const result = typesResponse.data.map((entry: any) => ({\n          key: entry.plugin,\n          label: entry.label,\n        }));\n\n        result.push({\n          key: 'regionEntity',\n          label: 'Region',\n        });\n\n        return _.sortBy(result, 'label');\n      }\n    );\n\n    this.typeCache.put('entityTypes', entityTypes);\n\n    return entityTypes;\n  }\n\n  fetchTypesForTarget(query: InstanaQuery, timeFilter: TimeFilter): any {\n    const fetchSnapshotTypesUrl =\n      `/api/snapshots/types` +\n      `?q=${encodeURIComponent(query.entityQuery)}` +\n      `&from=${timeFilter.from}` +\n      `&to=${timeFilter.to}` +\n      (this.instanaOptions.showOffline ? `` : `&time=${timeFilter.to}`);\n    return getRequest(this.instanaOptions, fetchSnapshotTypesUrl);\n  }\n\n  getMetricsCatalog(plugin: SelectableValue, metricCategory: number): Promise<SelectableValue[]> {\n    const key = plugin.key + '|' + metricCategory;\n\n    let metrics = this.catalogCache.get(key);\n    if (metrics) {\n      return metrics;\n    }\n\n    const filter = metricCategory === CUSTOM_METRICS ? 'custom' : 'builtin';\n    metrics = getRequest(\n      this.instanaOptions,\n      `/api/infrastructure-monitoring/catalog/metrics/${plugin.key}?filter=${filter}`\n    ).then((catalogResponse: any) =>\n      catalogResponse.data.map((entry: any) => ({\n        key: entry.metricId,\n        label: entry.label,\n        description: entry.metricId,\n        aggregations: [\n          { key: 'MEAN', label: 'MEAN' },\n          { key: 'SUM', label: 'SUM' },\n        ],\n        entityType: entry.pluginId,\n      }))\n    );\n\n    this.catalogCache.put(key, metrics);\n\n    return metrics;\n  }\n\n  fetchSnapshotsForTarget(target: InstanaQuery, timeFilter: TimeFilter) {\n    const query = this.buildQuery(target);\n    const key = this.buildSnapshotCacheKey(query, timeFilter);\n\n    let snapshots = this.snapshotCache.get(key);\n    if (snapshots) {\n      return snapshots;\n    }\n\n    const fetchSnapshotContextsUrl =\n      `/api/snapshots/context` +\n      `?q=${query}` +\n      `&from=${timeFilter.from}` +\n      `&to=${timeFilter.to}` +\n      (this.instanaOptions.showOffline ? `` : `&time=${timeFilter.to}&size=100`);\n\n    snapshots = getRequest(this.instanaOptions, fetchSnapshotContextsUrl)\n      .then((contextsResponse: any) => {\n        return Promise.all(\n          contextsResponse.data.map(({ snapshotId, host }: any) => {\n            let snapshotInfo = this.snapshotInfoCache.get(snapshotId);\n            if (snapshotInfo) {\n              return snapshotInfo;\n            }\n\n            const fetchSnapshotUrl =\n              `/api/snapshots/${snapshotId}` +\n              (this.instanaOptions.showOffline\n                ? `?from=${timeFilter.from}&to=${timeFilter.to}`\n                : `?time=${timeFilter.to}`); // @see SnapshotApiResource#getSnapshot\n\n            snapshotInfo = getRequest(this.instanaOptions, fetchSnapshotUrl, true).then((snapshotResponse: any) => {\n              // check for undefined because the fetchSnapshotContexts is buggy\n              if (snapshotResponse !== undefined) {\n                return {\n                  snapshotId,\n                  host,\n                  response: this.reduceSnapshot(snapshotResponse),\n                };\n              }\n\n              return null;\n            });\n\n            this.snapshotInfoCache.put(snapshotId, snapshotInfo, this.timeToLiveSnapshotInfoCache);\n            return snapshotInfo;\n          })\n        );\n      })\n      .then((response: any) => {\n        // undefined items need to be removed, because the fetchSnapshotContexts is buggy in the backend, maybe can be removed in the future\n        return _.compact(response);\n      });\n\n    this.snapshotCache.put(key, snapshots);\n    return snapshots;\n  }\n\n  buildQuery(target: InstanaQuery): string {\n    // check for entity.pluginId or entity.selfType, because otherwise the backend has a problem with `AND entity.pluginId`\n    if (`${target.entityQuery}`.includes('entity.pluginId:') || `${target.entityQuery}`.includes('entity.selfType:')) {\n      return encodeURIComponent(`${target.entityQuery}`);\n    } else {\n      return encodeURIComponent(`${target.entityQuery} AND entity.pluginId:${target.entityType.key}`);\n    }\n  }\n\n  buildSnapshotCacheKey(query: string, timeFilter: TimeFilter): string {\n    return query + SEPARATOR + getTimeKey(timeFilter);\n  }\n\n  reduceSnapshot(snapshotResponse: any) {\n    // reduce data to used label formatting values\n    snapshotResponse.data = _.pick(snapshotResponse.data, ['id', 'label', 'plugin', 'data']);\n    return snapshotResponse;\n  }\n\n  readTimeSeries(values: any, aggregation: SelectableValue, timeFilter: TimeFilter) {\n    if (aggregation && aggregation.key === 'SUM') {\n      return this.correctMeanToSum(values, timeFilter);\n    }\n    return values;\n  }\n\n  correctMeanToSum(values: any, timeFilter: TimeFilter) {\n    const secondMultiplier = parseInt(getDefaultMetricRollupDuration(timeFilter).key, 10) / 1000;\n    return _.map(values, (value) => {\n      return {\n        value: value.value ? value.value * secondMultiplier : null,\n        timestamp: value.timestamp,\n      };\n    });\n  }\n\n  fetchMetricsForSnapshot(snapshotId: string, timeFilter: TimeFilter, rollup: number, metric: any) {\n    let url =\n      `/api/metrics?metric=${metric.key}` +\n      `&from=${timeFilter.from}` +\n      `&to=${timeFilter.to}` +\n      `&rollup=${rollup}` +\n      `&fillTimeSeries=true` +\n      `&snapshotId=${snapshotId}`;\n    return getRequest(this.instanaOptions, url);\n  }\n\n  getHostSuffix(host: string): string {\n    if (host) {\n      return ' (on host \"' + host + '\")';\n    }\n    return '';\n  }\n\n  buildLabel(snapshotResponse: any, host: any, target: InstanaQuery, index: any, metric: any): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', snapshotResponse.data.label);\n      label = _.replace(label, '$plugin', snapshotResponse.data.plugin); // not documented\n      label = _.replace(label, '$snapshot', snapshotResponse.data.id); // not documented\n      label = _.replace(label, '$host', host ? host : 'unknown');\n      label = _.replace(label, '$pid', _.get(snapshotResponse.data, ['data', 'pid'], ''));\n      label = _.replace(label, '$type', _.get(snapshotResponse.data, ['data', 'type'], ''));\n      label = _.replace(label, '$name', _.get(snapshotResponse.data, ['data', 'name'], ''));\n      label = _.replace(label, '$service', _.get(snapshotResponse.data, ['data', 'service_name'], ''));\n      if (target.freeTextMetrics) {\n        label = _.replace(label, '$metric', metric.key);\n      } else {\n        label = _.replace(label, '$metric', _.get(target, ['metric', 'key'], 'n/a'));\n      }\n      label = _.replace(label, '$index', index + 1);\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n    return target.timeShift && target.timeShiftIsValid\n      ? snapshotResponse.data.label + this.getHostSuffix(host) + ' - ' + target.timeShift\n      : snapshotResponse.data.label + this.getHostSuffix(host);\n  }\n}\n","import _ from 'lodash';\n\nimport TimeFilter from '../types/time_filter';\n\nconst omitLabels = [\n  'refId',\n  'pluginId',\n  'showWarningCantShowAllResults',\n  'timeShiftIsValid',\n  'useFreeTextMetrics',\n  'showGroupBySecondLevel',\n  'canShowAllMetrics',\n  'timeFilter',\n  'stableHash',\n];\n\nexport function generateStableHash(obj: any): string {\n  let pseudoHash = _.omit(obj, omitLabels);\n  pseudoHash = _.mapValues(pseudoHash, (value: any) => {\n    // to reduce overhead of interface Selectable\n    if (value != null && typeof value === 'object' && 'key' in value) {\n      value = value.key;\n    }\n\n    return value;\n  });\n  return JSON.stringify(pseudoHash);\n}\n\n/* Check if two time filters are overlapping.\n\nReturn true when:\na)\n  from |-------------------| to (t2)\n              from |--------------------| to (t1)\nb)\n  from |-------------------| to (t2)\n  from |-------------------| to (t1)\nc)\n  from |-------------------| to (t2)\n              from |-------| to (t1)\n\nReturns false when:\nd)\n  from |-------------------| to (t2)\n                      from |-------| to (t1)\ne)\n  from |-------------------| to (t2)\n       from |--------| to (t1)\nf)\n     from |-------------------| to (t2)\nfrom |----------------------------------------| to (t1)\ng)\n                from |-------------------| to (t2)\n  from |--------------------| to (t1)\nh)\n                from |-------------------| to (t2)\n  from |-------------| to (t1)\ni)\n                from |-------------------| to (t2)\n  from |--------| to (t1)\nj)\n  from |-------------------| to (t2)\n                        from |----------| to (t1)\nk)\n  from |-------------------| to (t2)\n  from |----------| to (t1)\n*/\nexport function hasIntersection(t1: TimeFilter, t2: TimeFilter): boolean {\n  return t1.from < t2.to && t1.from >= t2.from && t1.to >= t2.to;\n}\n\n/*\n  Appends new found items to already existing data in cache.\n  Also removes old data accordingly (e.g. if 4 new datapoints were added,\n  the corresponding oldest four datapoints are removed).\n*/\nexport function appendData(newDeltaData: any, cachedData: any): any {\n  _.each(newDeltaData, (deltaData) => {\n    let matchingCachedData = _.find(cachedData, (o) => o.key === deltaData.key && o.target === deltaData.target);\n    if (matchingCachedData && deltaData.datapoints) {\n      const size = matchingCachedData.datapoints.length;\n      let datapoints = deltaData.datapoints.concat(matchingCachedData.datapoints);\n      datapoints = _.sortedUniqBy(\n        datapoints.sort((a: any, b: any) => a[1] - b[1]),\n        (a: any) => a[1]\n      );\n      matchingCachedData.datapoints = _.takeRight(datapoints, size);\n      matchingCachedData.target = deltaData.target;\n    } else {\n      cachedData.push(deltaData);\n    }\n  });\n  return cachedData;\n}\n","import Cache from '../cache';\nimport { getRequest } from './request_handler';\nimport { InstanaOptions } from '../types/instana_options';\n\nconst versionCache: Cache<number> = new Cache<number>();\n\n/*\n  Get version of current Instana backend and cache it for 10 minutes.\n  This should be the ONLY way to retrieve any information about the Instana backend version.\n */\nexport default function getVersion(options: InstanaOptions) {\n  let cachedVersion = versionCache.get('version');\n  if (cachedVersion) {\n    return Promise.resolve(cachedVersion);\n  }\n\n  return getRequest(options, '/api/instana/version').then(\n    (result: any) => {\n      if (result.data && result.data.imageTag) {\n        const majorVersion = parseInt(result.data.imageTag.split('.', 2)[1], 10) || null;\n        if (majorVersion) {\n          versionCache.put(options.url, majorVersion, 600000);\n        }\n        return majorVersion;\n      }\n      return null;\n    },\n    (error: any) => {\n      return null;\n    }\n  );\n}\n","import _ from 'lodash';\nimport { InstanaQuery } from '../types/instana_query';\n\nexport function aggregateTarget(data: any, target: InstanaQuery) {\n  const targetLabel = buildAggregationLabel(target);\n  data = _.filter(data, (d) => d.target !== targetLabel); // filter out any previously calculated aggregations\n  let concatedTargetData = concatTargetData(data);\n\n  let dataGroupedByTimestamp = _.groupBy(concatedTargetData, function (d) {\n    return d[1];\n  });\n\n  let aggregatedData = aggregateDataOfTimestamp(dataGroupedByTimestamp, target.aggregationFunction.label!);\n  aggregatedData = _.sortBy(aggregatedData, [\n    function (datapoint) {\n      return datapoint[1];\n    },\n  ]);\n\n  return buildResult(aggregatedData, target.refId, targetLabel);\n}\n\nfunction concatTargetData(data: any) {\n  let result: any = [];\n  _.each(data, (entry) => {\n    result = _.concat(result, entry.datapoints);\n  });\n  return result;\n}\n\nfunction aggregateDataOfTimestamp(dataGroupedByTimestamp: any, aggregationLabel: string) {\n  let result: any = [];\n  _.each(dataGroupedByTimestamp, (timestampData, timestamp) => {\n    let valuesOfTimestamp = _.map(timestampData, (datapoint) => {\n      return datapoint[0];\n    });\n    let aggregatedValue = aggregate(aggregationLabel, valuesOfTimestamp);\n    result.push([aggregatedValue, parseInt(timestamp, 10)]);\n  });\n  return result;\n}\n\nfunction aggregate(aggregation: string, data: any) {\n  if (aggregation.toLowerCase() === 'sum') {\n    return _.sum(data);\n  } else if (aggregation.toLowerCase() === 'mean') {\n    return _.mean(data);\n  } else if (aggregation.toLowerCase() === 'min') {\n    return _.min(data);\n  } else if (aggregation.toLowerCase() === 'max') {\n    return _.max(data);\n  } else {\n    //apply not aggregation\n    return data;\n  }\n}\n\nfunction buildResult(aggregatedData: any, refId: string, target: string) {\n  return {\n    datapoints: aggregatedData,\n    refId: refId,\n    target: target,\n  };\n}\n\nfunction buildAggregationLabel(target: InstanaQuery): string {\n  if (target.showAllMetrics) {\n    if (target.allMetrics.length > 1) {\n      if (target.customFilters && target.customFilters.length > 0) {\n        let label = '';\n        _.each(target.customFilters, (filter, index) => {\n          label += filter;\n          if (index !== target.customFilters.length - 1) {\n            label += '.';\n          }\n        });\n        label = label + ' (' + target.aggregationFunction.label + ')';\n        return label;\n      } else {\n        return target.aggregationFunction.label!;\n      }\n    } else {\n      return target.allMetrics[0].key + ' (' + target.aggregationFunction.label + ')';\n    }\n  } else {\n    return target.metric.key + ' (' + target.aggregationFunction.label + ')';\n  }\n}\n","import TagFilter from '../types/tag_filter';\nimport _ from 'lodash';\nimport { InstanaQuery } from '../types/instana_query';\n\nexport function createTagFilter(filter: TagFilter) {\n  let tagFilter = {\n    name: filter.tag.key,\n    operator: filter.operator.key,\n    value: filter.stringValue,\n  };\n\n  if ('NUMBER' === filter.tag.type) {\n    if (filter.numberValue !== null) {\n      tagFilter.value = filter.numberValue.toString();\n    }\n  } else if ('BOOLEAN' === filter.tag.type) {\n    tagFilter.value = filter.booleanValue.toString();\n  }\n\n  return tagFilter;\n}\n\nexport function readItemMetrics(target: InstanaQuery, response: any, getLabel: any) {\n  if (!response.data) {\n    return response;\n  }\n\n  // as we map two times we need to flatten the result\n  return _.flatten(\n    response.data.items.map((item: any, index: number) => {\n      return _.map(item.metrics, (value, key) => {\n        return {\n          target: getLabel(target, item, key, index),\n          datapoints: _.map(value, (metric) => [metric[1], metric[0]]),\n          refId: target.refId,\n          key: target.stableHash,\n        };\n      });\n    })\n  );\n}\n","import { SelectableValue } from '@grafana/data';\nimport { InstanaOptions } from '../types/instana_options';\nimport Cache from '../cache';\nimport _ from 'lodash';\nimport TimeFilter from '../types/time_filter';\nimport { getTimeKey, getWindowSize, hoursToMs } from '../util/time_util';\nimport BeaconGroupBody from '../types/beacon_group_body';\nimport { getRequest, postRequest } from '../util/request_handler';\nimport { getDefaultChartGranularity } from '../util/rollup_granularity_util';\nimport { InstanaQuery } from '../types/instana_query';\nimport { createTagFilter, readItemMetrics } from '../util/analyze_util';\nimport { emptyResultData } from '../util/target_util';\nimport { isInvalidQueryInterval } from '../util/queryInterval_check';\n\nexport class DataSourceWebsite {\n  instanaOptions: InstanaOptions;\n  websitesCache: Cache<Promise<SelectableValue[]>>;\n  miscCache: Cache<any>;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.websitesCache = new Cache<Promise<SelectableValue[]>>();\n    this.miscCache = new Cache<any>();\n  }\n\n  runQuery(target: InstanaQuery, timeFilter: TimeFilter) {\n    if (\n      isInvalidQueryInterval(timeFilter.windowSize, hoursToMs(this.instanaOptions.queryinterval_limit_website_metrics))\n    ) {\n      throw new Error(\n        'Limit for maximum selectable windowsize exceeded, max is: ' +\n          this.instanaOptions.queryinterval_limit_website_metrics +\n          ' hours'\n      );\n    }\n\n    // avoid invalid calls\n    if (\n      !target ||\n      !target.metric ||\n      !target.metric.key ||\n      !target.group ||\n      !target.group.key ||\n      !target.entity ||\n      !target.entity.key\n    ) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    return this.fetchAnalyzeMetricsForWebsite(target, timeFilter).then((response: any) => {\n      return readItemMetrics(target, response, this.buildAnalyzeWebsiteLabel);\n    });\n  }\n\n  getWebsites(timeFilter: TimeFilter) {\n    const key = getTimeKey(timeFilter);\n    let websites = this.websitesCache.get(key);\n    if (websites) {\n      return websites;\n    }\n\n    websites = getRequest(this.instanaOptions, '/api/website-monitoring/config').then((websitesResponse: any) =>\n      websitesResponse.data.map((website: any) => ({\n        key: website.name, // use name as key because a website name can only be configured once\n        label: website.name,\n      }))\n    );\n    this.websitesCache.put(key, websites, 600000);\n\n    return websites;\n  }\n\n  getWebsiteTags() {\n    let websiteTags = this.miscCache.get('websiteTags');\n    if (websiteTags) {\n      return websiteTags;\n    }\n\n    websiteTags = getRequest(this.instanaOptions, '/api/website-monitoring/catalog/tags').then((tagsResponse: any) =>\n      tagsResponse.data.map((entry: any) => ({\n        key: entry.name,\n        label: entry.name,\n        type: entry.type,\n      }))\n    );\n    this.miscCache.put('websiteTags', websiteTags);\n\n    return websiteTags;\n  }\n\n  getWebsiteMetricsCatalog() {\n    let websiteCatalog = this.miscCache.get('websiteCatalog');\n    if (websiteCatalog) {\n      return websiteCatalog;\n    }\n\n    websiteCatalog = getRequest(this.instanaOptions, '/api/website-monitoring/catalog/metrics').then(\n      (catalogResponse: any) =>\n        catalogResponse.data.map((entry: any) => {\n          return {\n            key: entry.metricId,\n            label: entry.label,\n            aggregations: entry.aggregations ? this.transformAggregations(entry.aggregations.sort()) : [],\n            beaconTypes: entry.beaconTypes\n              ? this.transformBeaconTypes(entry.beaconTypes)\n              : ['pageLoad', 'resourceLoad', 'httpRequest', 'error', 'custom', 'pageChange'],\n          };\n        })\n    );\n    this.miscCache.put('websiteCatalog', websiteCatalog);\n\n    return websiteCatalog;\n  }\n\n  transformBeaconTypes(beaconTypes: string[]) {\n    if (beaconTypes.includes('pageChange')) {\n      let result = _.remove(beaconTypes, (type) => type !== 'pageChange');\n      result.push('page_change');\n      return result;\n    }\n\n    return beaconTypes;\n  }\n\n  transformAggregations(aggregations: string[]) {\n    return _.map(aggregations, (a) => {\n      return {\n        key: a,\n        label: a,\n      };\n    });\n  }\n\n  private fetchAnalyzeMetricsForWebsite(target: InstanaQuery, timeFilter: TimeFilter) {\n    const windowSize = getWindowSize(timeFilter);\n    const tagFilters = [\n      {\n        name: 'beacon.website.name',\n        operator: 'EQUALS',\n        value: target.entity.key,\n      },\n    ];\n\n    _.forEach(target.filters, (filter) => {\n      if (filter.isValid) {\n        tagFilters.push(createTagFilter(filter));\n      }\n    });\n    const metric: any = {\n      metric: target.metric.key,\n      aggregation: target.aggregation.key ? target.aggregation.key : 'SUM',\n    };\n\n    if (!target.timeInterval) {\n      target.timeInterval = getDefaultChartGranularity(windowSize);\n    }\n    metric['granularity'] = target.timeInterval.key;\n\n    const group: any = {\n      groupbyTag: target.group.key,\n    };\n    if (target.group.type === 'KEY_VALUE_PAIR' && target.groupbyTagSecondLevelKey) {\n      group['groupbyTagSecondLevelKey'] = target.groupbyTagSecondLevelKey;\n    }\n\n    const data: BeaconGroupBody = {\n      group: group,\n      timeFrame: {\n        to: timeFilter.to,\n        windowSize: windowSize,\n      },\n      tagFilters: tagFilters,\n      type: target.entityType.key,\n      metrics: [metric],\n    };\n    return postRequest(\n      this.instanaOptions,\n      '/api/website-monitoring/analyze/beacon-groups?fillTimeSeries=true',\n      data,\n      false,\n      5\n    );\n  }\n\n  buildAnalyzeWebsiteLabel(target: InstanaQuery, item: any, key: string, index: number): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', item.name);\n      label = _.replace(label, '$website', target.entity.label!);\n      label = _.replace(label, '$type', target.entityType.label!);\n      label = _.replace(label, '$metric', target.metric.label!);\n      label = _.replace(label, '$key', key);\n      label = _.replace(label, '$index', '' + index + 1);\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n    return target.timeShift && target.timeShiftIsValid\n      ? item.name + ' (' + target.entity.label + ')' + ' - ' + key + ' - ' + target.timeShift\n      : item.name + ' (' + target.entity.label + ')' + ' - ' + key;\n  }\n}\n","export default [\n  { key: 'calls', label: 'Call count', description: 'calls', aggregations: [{ key: 'SUM', label: 'SUM' }] },\n  {\n    key: 'latency',\n    label: 'Call latency',\n    description: 'latency',\n    aggregations: [\n      { key: 'MAX', label: 'MAX' },\n      { key: 'MEAN', label: 'MEAN' },\n      { key: 'MIN', label: 'MIN' },\n      { key: 'P25', label: 'P25' },\n      { key: 'P50', label: 'P50' },\n      { key: 'P75', label: 'P75' },\n      { key: 'P90', label: 'P90' },\n      { key: 'P95', label: 'P95' },\n      { key: 'P98', label: 'P98' },\n      { key: 'P99', label: 'P99' },\n    ],\n  },\n  { key: 'errors', label: 'Error rate', description: 'errors', aggregations: [{ key: 'MEAN', label: 'MEAN' }] },\n  {\n    key: 'services',\n    label: 'Service Count',\n    description: 'services',\n    aggregations: [{ key: 'DISTINCT_COUNT', label: 'DISTINCT_COUNT' }],\n  },\n];\n","import { SelectableValue } from '@grafana/data';\nimport { InstanaOptions } from '../types/instana_options';\nimport Cache from '../cache';\nimport _ from 'lodash';\nimport TimeFilter from '../types/time_filter';\nimport { getTimeKey, getWindowSize, hoursToMs } from '../util/time_util';\nimport { getRequest, postRequest } from '../util/request_handler';\nimport { getDefaultChartGranularity } from '../util/rollup_granularity_util';\nimport { InstanaQuery } from '../types/instana_query';\nimport { createTagFilter, readItemMetrics } from '../util/analyze_util';\nimport { emptyResultData } from '../util/target_util';\nimport { ALL_APPLICATIONS, PAGINATION_LIMIT } from '../GlobalVariables';\nimport defaultApplicationMetricCatalog from '../lists/default_metric_catalog';\nimport { isInvalidQueryInterval } from '../util/queryInterval_check';\nimport getVersion from '../util/instana_version';\n\nexport class DataSourceApplication {\n  instanaOptions: InstanaOptions;\n  applicationsCache: Cache<Promise<SelectableValue[]>>;\n  miscCache: Cache<any>;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.applicationsCache = new Cache<Promise<SelectableValue[]>>();\n    this.miscCache = new Cache<any>();\n  }\n\n  runQuery(target: InstanaQuery, timeFilter: TimeFilter): any {\n    // do not try to execute to big queries\n    if (isInvalidQueryInterval(timeFilter.windowSize, hoursToMs(this.instanaOptions.queryinterval_limit_app_calls))) {\n      throw new Error(\n        'Limit for maximum selectable windowsize exceeded, max is: ' +\n          this.instanaOptions.queryinterval_limit_app_calls +\n          ' hours'\n      );\n    }\n\n    // avoid invalid calls\n    if (\n      !target ||\n      !target.metric ||\n      !target.metric.key ||\n      !target.group ||\n      !target.group.key ||\n      !target.entity ||\n      (!target.entity.key && !target.entity.label)\n    ) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    return this.fetchAnalyzeMetricsForApplication(target, timeFilter).then((response) => {\n      target.showWarningCantShowAllResults = response.data.canLoadMore;\n      return readItemMetrics(target, response, this.buildAnalyzeApplicationLabel);\n    });\n  }\n\n  getApplications(timeFilter: TimeFilter) {\n    const key = getTimeKey(timeFilter);\n\n    let applications = this.applicationsCache.get(key);\n    if (applications) {\n      return applications;\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    let page = 1;\n    let pageSize = 200;\n\n    applications = this.paginateApplications([], windowSize, timeFilter.to, page, pageSize, PAGINATION_LIMIT).then(\n      (response: any) => {\n        let allResults = _.flattenDeep(\n          _.map(response, (pageSet) => {\n            return pageSet.items;\n          })\n        );\n\n        return _.orderBy(\n          _.compact(allResults).map((entry) => {\n            return {\n              key: entry.id,\n              label: entry.label,\n              boundaryScope: entry.boundaryScope,\n            };\n          }),\n          [(application) => application.label.toLowerCase()],\n          ['asc']\n        );\n      }\n    );\n\n    this.applicationsCache.put(key, applications, 600000);\n    return applications;\n  }\n\n  paginateApplications(\n    results: any,\n    windowSize: number,\n    to: number,\n    page: number,\n    pageSize: number,\n    pageLimit: number\n  ) {\n    if (page > pageLimit) {\n      return results;\n    }\n\n    let queryParameters = 'windowSize=' + windowSize + '&to=' + to + '&page=' + page + '&pageSize=' + pageSize;\n\n    return getRequest(this.instanaOptions, '/api/application-monitoring/applications?' + queryParameters).then(\n      (response: any) => {\n        results.push(response.data);\n        if (page * pageSize < response.data.totalHits) {\n          page++;\n          return this.paginateApplications(results, windowSize, to, page, pageSize, pageLimit);\n        } else {\n          return results;\n        }\n      }\n    );\n  }\n\n  getApplicationTags(timeFilter: TimeFilter) {\n    let applicationTags = this.miscCache.get('applicationTags');\n    if (applicationTags) {\n      return applicationTags;\n    }\n\n    return getVersion(this.instanaOptions).then((version: number) => {\n      if (version >= 191) {\n        applicationTags = this.getCatalog(timeFilter).then((catalog: any) =>\n          this.mapCatalogResponse(catalog.data.tags)\n        );\n      } else {\n        applicationTags = this.getCatalogFromDeprecatedEndpoint().then((tagsResponse: any) =>\n          this.mapCatalogResponse(tagsResponse.data)\n        );\n      }\n\n      this.miscCache.put('applicationTags', applicationTags);\n      return applicationTags;\n    });\n  }\n\n  getCatalog(timeFilter: TimeFilter) {\n    const endpoint = '/api/application-monitoring/catalog?dataSource=CALLS&useCase=FILTERING&from=' + timeFilter.from;\n    return getRequest(this.instanaOptions, endpoint);\n  }\n\n  getCatalogFromDeprecatedEndpoint() {\n    return getRequest(this.instanaOptions, '/api/application-monitoring/catalog/tags');\n  }\n\n  mapCatalogResponse(catalog: any) {\n    return catalog.map((entry: any) => ({\n      key: entry.name,\n      label: entry.name,\n      type: entry.type,\n      canApplyToSource: entry.canApplyToSource,\n      canApplyToDestination: entry.canApplyToDestination,\n    }));\n  }\n\n  getApplicationMetricsCatalog() {\n    return defaultApplicationMetricCatalog;\n  }\n\n  fetchAnalyzeMetricsForApplication(target: InstanaQuery, timeFilter: TimeFilter) {\n    const windowSize = getWindowSize(timeFilter);\n    const tagFilters: any[] = [];\n\n    return Promise.resolve(this.getApplicationTags(timeFilter)).then((applicationTags) => {\n      if (target.entity.key) {\n        tagFilters.push({\n          name: 'application.name',\n          operator: 'EQUALS',\n          value: target.entity.label!,\n          entity: target.applicationCallToEntity ? target.applicationCallToEntity : 'DESTINATION',\n        });\n      }\n\n      _.forEach(target.filters, (filter) => {\n        if (filter.isValid) {\n          let tagFilter: any = createTagFilter(filter);\n          const tag = _.find(applicationTags, ['key', filter.tag.key]);\n          if (tag.canApplyToDestination || tag.canApplyToSource) {\n            tagFilter['entity'] = this.getTagEntity(filter.entity, tag);\n          }\n          tagFilters.push(tagFilter);\n        }\n      });\n\n      const metric: any = {\n        metric: target.metric.key,\n        aggregation: target.aggregation && target.aggregation.key ? target.aggregation.key : 'SUM',\n      };\n\n      if (!target.timeInterval) {\n        target.timeInterval = getDefaultChartGranularity(windowSize);\n      }\n      metric['granularity'] = target.timeInterval.key;\n\n      const group: any = {\n        groupbyTag: target.group.key,\n      };\n      const tag: any = _.find(applicationTags, ['key', target.group.key]);\n      if (tag.canApplyToDestination || tag.canApplyToSource) {\n        group['groupbyTagEntity'] = target.callToEntity;\n      }\n      if (target.group.type === 'KEY_VALUE_PAIR' && target.groupbyTagSecondLevelKey) {\n        group['groupbyTagSecondLevelKey'] = target.groupbyTagSecondLevelKey;\n      }\n\n      const data: any = {\n        group: group,\n        timeFrame: {\n          to: timeFilter.to,\n          windowSize: windowSize,\n        },\n        tagFilters: tagFilters,\n        metrics: [metric],\n      };\n      return postRequest(\n        this.instanaOptions,\n        '/api/application-monitoring/analyze/call-groups?fillTimeSeries=true',\n        data,\n        false,\n        5\n      );\n    });\n  }\n\n  getTagEntity(selectedEntity: string, tag: any): string {\n    if (selectedEntity === 'DESTINATION' && tag.canApplyToDestination) {\n      return 'DESTINATION';\n    }\n    if (selectedEntity === 'SOURCE' && tag.canApplyToSource) {\n      return 'SOURCE';\n    }\n    return tag.canApplyToDestination ? 'DESTINATION' : 'SOURCE';\n  }\n\n  fetchApplicationMetrics(target: InstanaQuery, timeFilter: TimeFilter) {\n    // avoid invalid calls\n    if (!target || !target.metric || !target.metric.key) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    const metric: any = {\n      metric: target.metric.key,\n      aggregation: target.aggregation && target.aggregation.key ? target.aggregation.key : 'SUM',\n    };\n\n    if (!target.timeInterval) {\n      target.timeInterval = getDefaultChartGranularity(windowSize);\n    }\n    metric['granularity'] = target.timeInterval.key;\n\n    const data: any = {\n      timeFrame: {\n        to: timeFilter.to,\n        windowSize: windowSize,\n      },\n      metrics: [metric],\n    };\n\n    if (target.entity.key !== null) {\n      data['applicationId'] = target.entity.key;\n      data['applicationBoundaryScope'] = target.applicationBoundaryScope;\n    }\n\n    return postRequest(\n      this.instanaOptions,\n      '/api/application-monitoring/metrics/applications?fillTimeSeries=true',\n      data\n    );\n  }\n\n  buildAnalyzeApplicationLabel(target: InstanaQuery, item: any, key: string, index: number): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', item.name);\n      label = _.replace(label, '$application', target.entity.label!);\n      label = _.replace(label, '$metric', target.metric.label!);\n      label = _.replace(label, '$key', key);\n      label = _.replace(label, '$index', '' + index + 1);\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n\n    if (target.entity.label === ALL_APPLICATIONS) {\n      return target.timeShift ? item.name + ' - ' + key + ' - ' + target.timeShift : item.name + ' - ' + key;\n    }\n\n    return target.timeShift && target.timeShiftIsValid\n      ? item.name + ' (' + target.entity.label + ')' + ' - ' + key + ' - ' + target.timeShift\n      : item.name + ' (' + target.entity.label + ')' + ' - ' + key;\n  }\n\n  buildApplicationMetricLabel(target: InstanaQuery, item: any, key: string, index: number): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', item.application.label);\n      label = _.replace(label, '$application', target.entity.label!);\n      label = _.replace(label, '$metric', target.metric.label!);\n      label = _.replace(label, '$key', key);\n      label = _.replace(label, '$index', '' + index + 1);\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n\n    if (target.entity.label === ALL_APPLICATIONS) {\n      return target.timeShift\n        ? item.application.label + ' - ' + key + ' - ' + target.timeShift\n        : item.application.label + ' - ' + key;\n    }\n\n    return target.timeShift && target.timeShiftIsValid\n      ? item.application.label + ' (' + target.entity.label + ')' + ' - ' + key + ' - ' + target.timeShift\n      : item.application.label + ' (' + target.entity.label + ')' + ' - ' + key;\n  }\n}\n","import { SelectableValue } from '@grafana/data';\nimport { InstanaOptions } from '../types/instana_options';\nimport Cache from '../cache';\nimport _ from 'lodash';\nimport TimeFilter from '../types/time_filter';\nimport { getTimeKey, getWindowSize } from '../util/time_util';\nimport { getRequest, postRequest } from '../util/request_handler';\nimport { getDefaultChartGranularity } from '../util/rollup_granularity_util';\nimport { InstanaQuery } from '../types/instana_query';\nimport { PAGINATION_LIMIT } from '../GlobalVariables';\nimport { emptyResultData } from '../util/target_util';\n\nexport class DataSourceService {\n  instanaOptions: InstanaOptions;\n  servicesCache: Cache<Promise<SelectableValue[]>>;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.servicesCache = new Cache<Promise<SelectableValue[]>>();\n  }\n\n  getServicesOfApplication(target: InstanaQuery, timeFilter: TimeFilter) {\n    let applicationId = '';\n    if (target.entity && target.entity.key) {\n      applicationId = target.entity.key;\n    }\n\n    const key = getTimeKey(timeFilter) + applicationId + target.applicationBoundaryScope;\n    let services = this.servicesCache.get(key);\n    if (services) {\n      return services;\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    let page = 1;\n    let pageSize = 200;\n\n    services = this.paginateServices(\n      [],\n      applicationId,\n      windowSize,\n      timeFilter.to,\n      target.applicationBoundaryScope,\n      page,\n      pageSize,\n      PAGINATION_LIMIT\n    ).then((response: any) => {\n      let allResults = _.flattenDeep(\n        _.map(response, (pageSet) => {\n          return pageSet.items;\n        })\n      );\n\n      return _.orderBy(\n        _.compact(allResults).map((entry) => {\n          return {\n            key: entry.id,\n            label: entry.label,\n          };\n        }),\n        [(service) => service.label.toLowerCase()],\n        ['asc']\n      );\n    });\n\n    this.servicesCache.put(key, services, 600000);\n    return services;\n  }\n\n  paginateServices(\n    results: any,\n    applicationId: string,\n    windowSize: number,\n    to: number,\n    applicationBoundaryScope: string,\n    page: number,\n    pageSize: number,\n    pageLimit: number\n  ) {\n    if (page > pageLimit) {\n      return results;\n    }\n\n    let queryParameters = 'windowSize=' + windowSize + '&to=' + to + '&page=' + page + '&pageSize=' + pageSize;\n    if (applicationBoundaryScope === 'ALL' || applicationBoundaryScope === 'INBOUND') {\n      queryParameters += '&applicationBoundaryScope=' + applicationBoundaryScope;\n    }\n\n    let url =\n      '/api/application-monitoring/applications;id=' +\n      (applicationId ? applicationId : '') +\n      '/services?' +\n      queryParameters;\n\n    return getRequest(this.instanaOptions, url).then((response: any) => {\n      results.push(response.data);\n      if (page * pageSize < response.data.totalHits) {\n        page++;\n        return this.paginateServices(\n          results,\n          applicationId,\n          windowSize,\n          to,\n          applicationBoundaryScope,\n          page,\n          pageSize,\n          pageLimit\n        );\n      } else {\n        return results;\n      }\n    });\n  }\n\n  fetchServiceMetrics(target: InstanaQuery, timeFilter: TimeFilter) {\n    // avoid invalid calls\n    if (!target || !target.metric || !target.metric.key) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n\n    if (!target.timeInterval) {\n      target.timeInterval = getDefaultChartGranularity(windowSize);\n    }\n\n    const metric = {\n      metric: target.metric.key,\n      aggregation: target.aggregation && target.aggregation.key ? target.aggregation.key : 'SUM',\n      granularity: target.timeInterval.key,\n    };\n\n    const data: any = {\n      timeFrame: {\n        to: timeFilter.to,\n        windowSize: windowSize,\n      },\n      metrics: [metric],\n    };\n\n    if (target.entity && target.entity.key) {\n      data['applicationId'] = target.entity.key;\n      // only set applicationBoundaryScope when an application is selected\n      data['applicationBoundaryScope'] = target.applicationBoundaryScope;\n    }\n\n    if (target.service && target.service.key) {\n      data['serviceId'] = target.service.key;\n    }\n\n    return postRequest(this.instanaOptions, '/api/application-monitoring/metrics/services?fillTimeSeries=true', data);\n  }\n\n  buildServiceMetricLabel(target: InstanaQuery, item: any, key: string, index: number): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', item.service.label);\n      label = _.replace(label, '$service', target.service.label!);\n      label = _.replace(label, '$application', target.entity.label!);\n      label = _.replace(label, '$metric', target.metric.label!);\n      label = _.replace(label, '$key', key);\n      label = _.replace(label, '$index', index + 1 + '');\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n\n    if (target.service.key === null) {\n      return target.timeShift\n        ? item.service.label + ' - ' + key + ' - ' + target.timeShift\n        : item.service.label + ' - ' + key;\n    }\n\n    return target.timeShift && target.timeShiftIsValid\n      ? item.service.label + ' (' + target.service.label + ')' + ' - ' + key + ' - ' + target.timeShift\n      : item.service.label + ' (' + target.service.label + ')' + ' - ' + key;\n  }\n}\n","import { SelectableValue } from '@grafana/data';\nimport { InstanaOptions } from '../types/instana_options';\nimport Cache from '../cache';\nimport _ from 'lodash';\nimport TimeFilter from '../types/time_filter';\nimport { getTimeKey, getWindowSize } from '../util/time_util';\nimport { getRequest, postRequest } from '../util/request_handler';\nimport { InstanaQuery } from '../types/instana_query';\nimport { ALL_ENDPOINTS, PAGINATION_LIMIT } from '../GlobalVariables';\nimport { emptyResultData } from '../util/target_util';\nimport { getDefaultChartGranularity } from '../util/rollup_granularity_util';\n\nexport class DataSourceEndpoint {\n  instanaOptions: InstanaOptions;\n  endpointsCache: Cache<Promise<SelectableValue[]>>;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.endpointsCache = new Cache<Promise<SelectableValue[]>>();\n  }\n\n  getEndpointsOfService(target: InstanaQuery, timeFilter: TimeFilter) {\n    let applicationId = '';\n    if (target.entity && target.entity.key) {\n      applicationId = target.entity.key;\n    }\n\n    let serviceId = '';\n    if (target.service) {\n      serviceId = target.service.key;\n    }\n\n    const key = getTimeKey(timeFilter) + applicationId + serviceId + target.applicationBoundaryScope;\n    let endpoints = this.endpointsCache.get(key);\n    if (endpoints) {\n      return endpoints;\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    let page = 1;\n    let pageSize = 200;\n\n    endpoints = this.paginateEndpoints(\n      [],\n      applicationId,\n      serviceId,\n      windowSize,\n      target.applicationBoundaryScope,\n      timeFilter.to,\n      page,\n      pageSize,\n      PAGINATION_LIMIT\n    ).then((response: any) => {\n      let allResults = _.flattenDeep(\n        _.map(response, (pageSet) => {\n          return pageSet.items;\n        })\n      );\n\n      return _.orderBy(\n        _.compact(allResults).map((entry) => {\n          return {\n            key: entry.id,\n            label: entry.label,\n          };\n        }),\n        [(endpoint) => endpoint.label.toLowerCase()],\n        ['asc']\n      );\n    });\n\n    this.endpointsCache.put(key, endpoints, 600000);\n    return endpoints;\n  }\n\n  paginateEndpoints(\n    results: any,\n    applicationId: string,\n    serviceId: string,\n    windowSize: number,\n    applicationBoundaryScope: string,\n    to: number,\n    page: number,\n    pageSize: number,\n    pageLimit: number\n  ) {\n    if (page > pageLimit) {\n      return results;\n    }\n\n    let queryParameters = 'windowSize=' + windowSize + '&to=' + to + '&page=' + page + '&pageSize=' + pageSize;\n    if (applicationBoundaryScope === 'ALL' || applicationBoundaryScope === 'INBOUND') {\n      queryParameters += '&applicationBoundaryScope=' + applicationBoundaryScope;\n    }\n\n    let url =\n      '/api/application-monitoring/applications;id=' +\n      (applicationId ? applicationId : '') +\n      '/services;id=' +\n      (serviceId ? serviceId : '') +\n      '/endpoints?' +\n      queryParameters;\n\n    return getRequest(this.instanaOptions, url).then((response: any) => {\n      results.push(response.data);\n      if (page * pageSize < response.data.totalHits) {\n        page++;\n        return this.paginateEndpoints(\n          results,\n          applicationId,\n          serviceId,\n          windowSize,\n          applicationBoundaryScope,\n          to,\n          page,\n          pageSize,\n          pageLimit\n        );\n      } else {\n        return results;\n      }\n    });\n  }\n\n  fetchEndpointMetrics(target: InstanaQuery, timeFilter: TimeFilter) {\n    // avoid invalid calls\n    if (!target || !target.metric || !target.metric.key) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    const metric: any = {\n      metric: target.metric.key,\n      aggregation: target.aggregation && target.aggregation.key ? target.aggregation.key : 'SUM',\n    };\n\n    if (!target.timeInterval) {\n      target.timeInterval = getDefaultChartGranularity(windowSize);\n    }\n    metric['granularity'] = target.timeInterval.key;\n\n    const data: any = {\n      endpointId: target.endpoint.key,\n      timeFrame: {\n        to: timeFilter.to,\n        windowSize: windowSize,\n      },\n      metrics: [metric],\n    };\n\n    if (target.entity && target.entity.key) {\n      data['applicationId'] = target.entity.key;\n      // only set applicationBoundaryScope when an application is selected\n      data['applicationBoundaryScope'] = target.applicationBoundaryScope;\n    }\n\n    if (target.service && target.service.key) {\n      data['serviceId'] = target.service.key;\n    }\n\n    return postRequest(this.instanaOptions, '/api/application-monitoring/metrics/endpoints?fillTimeSeries=true', data);\n  }\n\n  buildEndpointMetricLabel(target: InstanaQuery, item: any, key: string, index: number): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', item.endpoint.label);\n      label = _.replace(label, '$endpoint', target.endpoint.label!);\n      label = _.replace(label, '$service', target.service.label!);\n      label = _.replace(label, '$application', target.entity.label!);\n      label = _.replace(label, '$metric', target.metric.label!);\n      label = _.replace(label, '$key', key);\n      label = _.replace(label, '$index', '' + index + 1);\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n\n    if (target.endpoint.label === ALL_ENDPOINTS) {\n      return target.timeShift\n        ? item.endpoint.label + ' - ' + key + ' - ' + target.timeShift\n        : item.endpoint.label + ' - ' + key;\n    }\n\n    return target.timeShift && target.timeShiftIsValid\n      ? item.endpoint.label + ' (' + target.endpoint.label + ')' + ' - ' + key + ' - ' + target.timeShift\n      : item.endpoint.label + ' (' + target.endpoint.label + ')' + ' - ' + key;\n  }\n}\n","// can be removed once mixpanel shows no old plugins around\nimport _ from 'lodash';\nimport metric_categories from './lists/metric_categories';\n\nexport default function (target: any) {\n  // 1.3.1 towards 2.0.0\n  if (target.entityType && typeof target.entityType === 'string') {\n    target.entityType = { key: target.entityType, label: target.entityType };\n  }\n\n  // 2.3.1 towards 2.4.0\n  if (target.filter && target.filter !== '') {\n    if (!target.customFilters) {\n      target.customFilters = [];\n      target.customFilters.push({ value: target.filter });\n    }\n  }\n\n  // 2.4.2 towards 2.4.3\n  if (target.timeInterval) {\n    if (target.timeInterval.value) {\n      target.timeInterval = { key: target.timeInterval.value, label: target.timeInterval.label };\n    } else if (target.timeInterval.rollup) {\n      target.timeInterval = { key: target.timeInterval.rollup, label: target.timeInterval.label };\n    }\n  }\n\n  //2.4.4 towards 2.5.0\n  if (target.metricCategory === '5') {\n    //old service metric view\n    target.metricCategory = '4';\n    target.service = {}; //because target.service does not exist yet.\n    target.service.key = target.entity.key;\n    target.service.label = target.entity.label;\n    if (target.selectedApplication && target.selectedApplication.key) {\n      target.entity.key = target.selectedApplication.key;\n      target.entity.label = target.selectedApplication.label;\n    } else {\n      target.entity.key = null;\n      target.entity.label = 'Test';\n    }\n  }\n\n  //2.4.4 towards 2.5.0\n  if (target.metricCategory === '6') {\n    //old endpoint metric view\n    target.metricCategory = '4';\n    target.endpoint = {}; //because target.endpoint does not exist yet.\n    target.endpoint.key = target.entity.key;\n    if (target.selectedApplication && target.selectedApplication.key) {\n      target.entity.key = target.selectedApplication.key;\n      target.entity.label = target.selectedApplication.label;\n    } else {\n      target.entity.key = null;\n      target.entity.label = 'Test';\n    }\n  }\n\n  //2.7.3 towards 3.0 (Angular to React Migration)\n  if (target.aggregation && typeof target.aggregation === 'string') {\n    target.aggregation\n      ? (target.aggregation = { key: target.aggregation, label: target.aggregation })\n      : (target.aggregation = {});\n    target.aggregationFunction\n      ? (target.aggregationFunction = {\n          key: target.aggregationFunction.label,\n          label: target.aggregationFunction.label,\n        })\n      : (target.aggregationFunction = {});\n  }\n  if (target.customFilters && target.customFilters.length > 0 && target.customFilters[0].value) {\n    target.customFilters = _.map(target.customFilters, (cf) => cf.value);\n  }\n  if (target.filters && target.filters.length > 0 && !target.filters[0].tag.key && !target.filters[0].tag.label) {\n    _.forEach(target.filters, (filter) => {\n      filter.tag.label = filter.tag.key;\n    });\n  }\n  if (target.group && target.group.key && !target.group.label) {\n    target.group.label = target.group.key;\n  }\n  if (target.metricCategory && typeof target.metricCategory === 'string') {\n    target.metricCategory = _.find(\n      metric_categories,\n      (category) => category.key === parseInt(target.metricCategory, 10)\n    );\n  }\n\n  //3.0.1 towards 3.1.0\n  if (target.callToEntity && target.callToEntity.key) {\n    target.callToEntity = target.callToEntity.key;\n  }\n  if (target.applicationCallToEntity && target.applicationCallToEntity.key) {\n    target.applicationCallToEntity = target.applicationCallToEntity.key;\n  }\n  if (target.filters && target.filters.length > 0) {\n    target.filters.forEach((filter: any) => {\n      if (filter.entity && filter.entity.key) {\n        filter.entity = filter.entity.key;\n      }\n    });\n  }\n}\n","import {\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceApi,\n  DataSourceInstanceSettings,\n  SelectableValue,\n} from '@grafana/data';\nimport { InstanaQuery } from '../types/instana_query';\nimport { InstanaOptions } from '../types/instana_options';\nimport { getRequest, instanaUrl } from '../util/request_handler';\nimport { DataSourceSlo } from './DataSource_Slo';\nimport MetricCategories from '../lists/metric_categories';\nimport TimeFilter from '../types/time_filter';\nimport { hoursToMs, readTime } from '../util/time_util';\nimport Cache from '../cache';\nimport { emptyResultData } from '../util/target_util';\nimport _ from 'lodash';\nimport { DataSourceInfrastructure } from './Datasource_Infrastructure';\nimport {\n  getDefaultChartGranularity,\n  getDefaultMetricRollupDuration,\n  getPossibleGranularities,\n  getPossibleRollups,\n} from '../util/rollup_granularity_util';\nimport { appendData, generateStableHash, hasIntersection } from '../util/delta_util';\nimport {\n  ANALYZE_APPLICATION_METRICS,\n  ANALYZE_WEBSITE_METRICS,\n  APPLICATION_SERVICE_ENDPOINT_METRICS,\n  BUILT_IN_METRICS,\n  CUSTOM_METRICS,\n  SLO_INFORMATION,\n} from '../GlobalVariables';\nimport getVersion from '../util/instana_version';\nimport { aggregateTarget } from '../util/aggregation_util';\nimport { DataSourceWebsite } from './DataSource_Website';\nimport { DataSourceApplication } from './DataSource_Application';\nimport { DataSourceService } from './DataSource_Service';\nimport { DataSourceEndpoint } from './DataSource_Endpoint';\nimport { isInvalidQueryInterval } from '../util/queryInterval_check';\nimport { readItemMetrics } from '../util/analyze_util';\nimport migrate from '../migration';\n\nexport class DataSource extends DataSourceApi<InstanaQuery, InstanaOptions> {\n  options: InstanaOptions;\n  dataSourceInfrastructure: DataSourceInfrastructure;\n  dataSourceWebsite: DataSourceWebsite;\n  dataSourceApplication: DataSourceApplication;\n  dataSourceService: DataSourceService;\n  dataSourceEndpoint: DataSourceEndpoint;\n  dataSourceSlo: DataSourceSlo;\n  timeFilter!: TimeFilter;\n  availableGranularities: SelectableValue[];\n  availableRollups: SelectableValue[];\n  availableTimeIntervals: SelectableValue[];\n  resultCache: Cache<any>;\n\n  constructor(instanceSettings: DataSourceInstanceSettings<InstanaOptions>) {\n    super(instanceSettings);\n    this.options = instanceSettings.jsonData;\n    this.options.url = instanaUrl(instanceSettings);\n    this.availableGranularities = [];\n    this.availableRollups = [];\n    this.availableTimeIntervals = [];\n    this.dataSourceSlo = new DataSourceSlo(instanceSettings.jsonData);\n    this.dataSourceInfrastructure = new DataSourceInfrastructure(instanceSettings.jsonData);\n    this.dataSourceWebsite = new DataSourceWebsite(instanceSettings.jsonData);\n    this.dataSourceApplication = new DataSourceApplication(instanceSettings.jsonData);\n    this.dataSourceService = new DataSourceService(instanceSettings.jsonData);\n    this.dataSourceEndpoint = new DataSourceEndpoint(instanceSettings.jsonData);\n    this.resultCache = new Cache<any>();\n  }\n\n  async query(options: DataQueryRequest<InstanaQuery>): Promise<DataQueryResponse> {\n    const { range } = options;\n    this.timeFilter = readTime(range!);\n    this.availableRollups = getPossibleRollups(this.timeFilter);\n    this.availableGranularities = getPossibleGranularities(this.timeFilter.windowSize);\n\n    return Promise.all(\n      options.targets.map((target) => {\n        let targetTimeFilter = readTime(range!);\n\n        // grafana setting to disable query execution\n        if (target.hide) {\n          return { data: [], target: target };\n        }\n\n        // target migration for downwards compatibility\n        migrate(target);\n\n        if (!target.metricCategory) {\n          target.metricCategory = MetricCategories[0];\n        }\n\n        this.setPossibleTimeIntervals(target);\n        if (!this.availableTimeIntervals.find((i) => i.key === target.timeInterval.key)) {\n          target.timeInterval = this.getDefaultTimeInterval(target);\n        }\n\n        if (target.timeShift) {\n          let millis = this.convertTimeShiftToMillis(target.timeShift);\n          if (millis > 0) {\n            targetTimeFilter = this.applyTimeShiftOnTimeFilter(targetTimeFilter, millis);\n          }\n        }\n\n        target.timeFilter = targetTimeFilter;\n        target.stableHash = generateStableHash(target);\n        targetTimeFilter = this.adjustTimeFilterIfCached(targetTimeFilter, target);\n\n        if (target.metricCategory.key === SLO_INFORMATION) {\n          return this.dataSourceSlo.runQuery(target, targetTimeFilter).then((data: any) => {\n            return this.buildTargetWithAppendedDataResult(target, targetTimeFilter, data);\n          });\n        } else if (target.metricCategory.key === BUILT_IN_METRICS || target.metricCategory.key === CUSTOM_METRICS) {\n          return this.dataSourceInfrastructure.runQuery(target, targetTimeFilter).then((data: any) => {\n            return this.buildTargetWithAppendedDataResult(target, targetTimeFilter, data);\n          });\n        } else if (target.metricCategory.key === ANALYZE_WEBSITE_METRICS) {\n          return this.dataSourceWebsite.runQuery(target, targetTimeFilter).then((data: any) => {\n            return this.buildTargetWithAppendedDataResult(target, targetTimeFilter, data);\n          });\n        } else if (target.metricCategory.key === ANALYZE_APPLICATION_METRICS) {\n          return this.dataSourceApplication.runQuery(target, targetTimeFilter).then((data: any) => {\n            return this.buildTargetWithAppendedDataResult(target, targetTimeFilter, data);\n          });\n        } else if (target.metricCategory.key === APPLICATION_SERVICE_ENDPOINT_METRICS) {\n          return this.getApplicationServiceEndpointMetrics(target, targetTimeFilter).then((data: any) => {\n            return this.buildTargetWithAppendedDataResult(target, targetTimeFilter, data);\n          });\n        }\n\n        return Promise.resolve(emptyResultData(target.refId));\n      })\n    ).then((targetData) => {\n      let result: any = [];\n      _.each(targetData, (targetAndData) => {\n        // Flatten the list as Grafana expects a list of targets with corresponding datapoints.\n        let resultData = _.compact(_.flatten(targetAndData.data)); // Also remove empty data items\n        this.cacheResultIfNecessary(_.cloneDeep(resultData), targetAndData.target); // clone to store results without timeshift re-calculation\n        this.applyTimeShiftIfNecessary(resultData, targetAndData.target); // adjust resultdata after caching the result\n        resultData = this.aggregateDataIfNecessary(resultData, targetAndData.target);\n        result.push(resultData);\n      });\n\n      return { data: _.flatten(result) };\n    });\n  }\n\n  getApplicationServiceEndpointMetrics(target: InstanaQuery, timeFilter: TimeFilter) {\n    // do not try to execute too big queries\n    if (isInvalidQueryInterval(timeFilter.windowSize, hoursToMs(this.options.queryinterval_limit_app_metrics))) {\n      throw new Error(\n        'Limit for maximum selectable windowsize exceeded, max is: ' +\n          this.options.queryinterval_limit_app_metrics +\n          ' hours'\n      );\n    }\n\n    if (target.endpoint && target.endpoint.key) {\n      return this.dataSourceEndpoint.fetchEndpointMetrics(target, timeFilter).then((response: any) => {\n        return readItemMetrics(target, response, this.dataSourceEndpoint.buildEndpointMetricLabel);\n      });\n    } else if (target.service && target.service.key) {\n      return this.dataSourceService.fetchServiceMetrics(target, timeFilter).then((response: any) => {\n        return readItemMetrics(target, response, this.dataSourceService.buildServiceMetricLabel);\n      });\n    } else if (target.entity && target.entity.key) {\n      return this.dataSourceApplication.fetchApplicationMetrics(target, timeFilter).then((response: any) => {\n        if (response.data) {\n          target.showWarningCantShowAllResults = response.data.canLoadMore;\n        }\n        return readItemMetrics(target, response, this.dataSourceApplication.buildApplicationMetricLabel);\n      });\n    }\n\n    return Promise.resolve({ data: { items: [] } });\n  }\n\n  applyTimeShiftIfNecessary(data: any, target: InstanaQuery) {\n    if (target.timeShift) {\n      let millis = this.convertTimeShiftToMillis(target.timeShift);\n      if (millis > 0) {\n        data.forEach((data: any) => {\n          this.applyTimeShiftOnData(data, millis);\n        });\n      }\n    }\n  }\n\n  cacheResultIfNecessary(result: any, target: InstanaQuery) {\n    if (this.supportsDeltaRequests(target) && this.hasResult(result)) {\n      let cachedObj = {\n        timeFilter: target.timeFilter,\n        results: result,\n      };\n      this.resultCache.put(target.stableHash, cachedObj, 4000000); // set to 1,11 hour\n    }\n  }\n\n  supportsDeltaRequests(target: InstanaQuery): boolean {\n    if (target.metricCategory && target.metricCategory.key === SLO_INFORMATION) {\n      return false;\n    }\n\n    let version = this.resultCache.get('version');\n    if (!version) {\n      return getVersion(this.options).then((version: any) => {\n        this.resultCache.put('version', version, 4000000); // set to 1,11 hour\n        return version >= 171;\n      });\n    }\n\n    return version >= 171;\n  }\n\n  hasResult(result: any) {\n    return result && result.length > 0;\n  }\n\n  applyTimeShiftOnData(data: any, timeshift: number) {\n    data.datapoints.forEach((datapoint: any) => {\n      datapoint[1] = datapoint[1] + timeshift;\n    });\n  }\n\n  aggregateDataIfNecessary(data: any, target: InstanaQuery) {\n    let newData = [];\n\n    if (target.aggregateGraphs) {\n      const aggregatedData = aggregateTarget(data, target);\n      newData.push(aggregatedData);\n      if (!target.hideOriginalGraphs) {\n        _.each(data, (dt) => {\n          if (dt.target !== aggregatedData.target) {\n            newData.push(dt);\n          }\n        });\n      }\n      return newData;\n    }\n\n    return data;\n  }\n\n  buildTargetWithAppendedDataResult(target: InstanaQuery, timeFilter: TimeFilter, data: any) {\n    if (timeFilter.from !== target.timeFilter.from && data) {\n      data = this.appendResult(data, target);\n    }\n\n    return {\n      target: target,\n      data: data,\n    };\n  }\n\n  appendResult(data: any, target: InstanaQuery) {\n    let cachedResult = this.resultCache.get(target.stableHash);\n    if (cachedResult && cachedResult.results) {\n      data = appendData(data, cachedResult.results);\n    }\n    return data;\n  }\n\n  adjustTimeFilterIfCached(timeFilter: TimeFilter, target: InstanaQuery): TimeFilter {\n    let cachedResult = this.resultCache.get(target.stableHash);\n    if (cachedResult && hasIntersection(timeFilter, cachedResult.timeFilter)) {\n      let newFrom = this.getDeltaRequestTimestamp(cachedResult.results, cachedResult.timeFilter.from);\n      let newTo = Math.floor(timeFilter.to / 10000) * 10000;\n      return {\n        from: newFrom,\n        to: newTo,\n        windowSize: newTo - newFrom,\n      };\n    }\n    return timeFilter;\n  }\n\n  getDeltaRequestTimestamp(series: any, fromDefault: number): number {\n    // the found series can have multiple results, it's ok just to use the first one\n    const length = series[0].datapoints.length;\n    if (length < 2) {\n      return fromDefault;\n    }\n    const penultimate = length - 2;\n    return series[0].datapoints[penultimate][1];\n  }\n\n  getSloReports(): Promise<SelectableValue[]> {\n    return this.dataSourceSlo.getConfiguredSLIs();\n  }\n\n  getEntityTypes(): Promise<SelectableValue[]> {\n    return this.dataSourceInfrastructure.getEntityTypes();\n  }\n\n  fetchApplications() {\n    return this.dataSourceApplication.getApplications(this.getTimeFilter());\n  }\n\n  fetchApplicationTags() {\n    return this.dataSourceApplication.getApplicationTags(this.getTimeFilter());\n  }\n\n  fetchServices(target: InstanaQuery) {\n    return this.dataSourceService.getServicesOfApplication(target, this.getTimeFilter());\n  }\n\n  fetchEndpoints(target: InstanaQuery) {\n    return this.dataSourceEndpoint.getEndpointsOfService(target, this.getTimeFilter());\n  }\n\n  fetchTypesForTarget(query: InstanaQuery) {\n    return this.dataSourceInfrastructure.fetchTypesForTarget(query, this.getTimeFilter());\n  }\n\n  fetchWebsites(): Promise<SelectableValue[]> {\n    return this.dataSourceWebsite.getWebsites(this.getTimeFilter());\n  }\n\n  getDefaultTimeInterval(query: InstanaQuery) {\n    if (query.metricCategory.key === BUILT_IN_METRICS || query.metricCategory.key === CUSTOM_METRICS) {\n      return getDefaultMetricRollupDuration(this.getTimeFilter());\n    } else {\n      return getDefaultChartGranularity(this.getTimeFilter().windowSize);\n    }\n  }\n\n  convertTimeShiftToMillis(timeShift: string): number {\n    if (!timeShift) {\n      return 0;\n    }\n\n    try {\n      return this.parseTimeShift(timeShift);\n    } catch (e) {\n      return 0;\n    }\n  }\n\n  parseTimeShift(timeShift: string): number {\n    let milliSeconds = 1000;\n\n    if (timeShift.endsWith('s')) {\n      return parseInt(timeShift.split('s')[0], 10) * milliSeconds;\n    } else if (timeShift.endsWith('m')) {\n      return parseInt(timeShift.split('m')[0], 10) * 60 * milliSeconds;\n    } else if (timeShift.endsWith('h')) {\n      return parseInt(timeShift.split('h')[0], 10) * 60 * 60 * milliSeconds;\n    } else if (timeShift.endsWith('d')) {\n      return parseInt(timeShift.split('d')[0], 10) * 60 * 60 * 24 * milliSeconds;\n    } else if (timeShift.endsWith('w')) {\n      return parseInt(timeShift.split('w')[0], 10) * 60 * 60 * 24 * 7 * milliSeconds;\n    }\n    return 0;\n  }\n\n  applyTimeShiftOnTimeFilter(timeFilter: TimeFilter, timeShift: number): TimeFilter {\n    return {\n      from: timeFilter.from - timeShift,\n      to: timeFilter.to - timeShift,\n      windowSize: timeFilter.windowSize,\n    };\n  }\n\n  setPossibleTimeIntervals(target: InstanaQuery) {\n    if (target.metricCategory.key === 0 || target.metricCategory.key === 1) {\n      this.availableTimeIntervals = this.availableRollups;\n    } else {\n      this.availableTimeIntervals = this.availableGranularities;\n    }\n  }\n\n  getTimeFilter(): TimeFilter {\n    if (!this.timeFilter || !this.timeFilter.from) {\n      const now = Math.floor(Date.now() / 1000) * 1000;\n      const windowSize = 6 * 60 * 60 * 1000; // 6h\n      this.timeFilter = {\n        from: now - windowSize,\n        to: now,\n        windowSize: windowSize,\n      };\n    }\n\n    return this.timeFilter;\n  }\n\n  testDatasource(): Promise<any> {\n    return getRequest(this.options, '/api/monitoringState').then(\n      () => {\n        return {\n          status: 'success',\n          message: 'Successfully connected to the Instana API.',\n          title: 'Success',\n        };\n      },\n      (error: any) => {\n        if (error.status === 401) {\n          return {\n            status: 'error',\n            message: 'Unauthorized. Please verify the API Token.',\n            title: 'Error',\n          };\n        } else {\n          console.log(error);\n          return {\n            status: 'error',\n            message: 'Error (' + error.status + ') connecting to the Instana API: ' + error.statusText,\n            title: 'Error',\n          };\n        }\n      }\n    );\n  }\n}\n","import _ from 'lodash';\n\n// check grafana version (5.3+)\nexport default () => {\n  const version = _.get(window, ['grafanaBootData', 'settings', 'buildInfo', 'version'], '3.0.0');\n  const versions = _.split(version, '.', 2).map((v) => {\n    return parseInt(v, 10);\n  });\n  return version[0] >= 6 || (versions[0] >= 5 && versions[1] >= 3);\n};\n","import React, { ChangeEvent, PureComponent } from 'react';\n\nimport { DataSourcePluginOptionsEditorProps, DataSourceSettings, SelectableValue } from '@grafana/data';\nimport { Legend, Field, Input, Checkbox, Icon, Tooltip } from '@grafana/ui';\nimport { InstanaOptions } from '../types/instana_options';\nimport getVersion from '../util/instana_version';\nimport proxyCheck from '../util/proxy_check';\nimport _ from 'lodash';\n\ninterface Props extends DataSourcePluginOptionsEditorProps<InstanaOptions> {}\n\ninterface State {\n  canQueryOfflineSnapshots: boolean;\n  canUseProxy: boolean;\n}\n\nexport class ConfigEditor extends PureComponent<Props, State> {\n  constructor(props: Readonly<Props>) {\n    super(props);\n    this.state = { canQueryOfflineSnapshots: false, canUseProxy: false };\n\n    // check possibility every time\n    this.detectFeatures();\n\n    const { options } = this.props;\n    const { jsonData } = options;\n\n    if (jsonData.useProxy === undefined) {\n      jsonData.useProxy = proxyCheck();\n    }\n  }\n\n  onInstanaOptionsChange = (eventItem: ChangeEvent<HTMLInputElement> | SelectableValue, key: keyof InstanaOptions) => {\n    const { options, onOptionsChange } = this.props;\n    const jsonData = {\n      ...options.jsonData,\n      [key]: eventItem.currentTarget.value,\n    };\n\n    onOptionsChange({ ...options, jsonData });\n\n    if ('url' === key || 'apiToken' === key) {\n      this.debouncedDetectFeatures(options);\n    }\n  };\n\n  onSwitchChange = (eventItem: SelectableValue<HTMLInputElement> | any, key: keyof InstanaOptions) => {\n    const { options, onOptionsChange } = this.props;\n    let value = false;\n\n    if (eventItem && eventItem.currentTarget) {\n      value = !options.jsonData[key];\n    }\n\n    const jsonData = {\n      ...options.jsonData,\n      [key]: value,\n    };\n\n    onOptionsChange({ ...options, jsonData });\n  };\n\n  debouncedDetectFeatures = (settings?: DataSourceSettings<InstanaOptions, {}>) => {\n    _.debounce(() => this.detectFeatures(settings), 500);\n  };\n\n  /**\n   * Checks whether the provided tenant-unit is able to provide certain features such as querying offline snapshots.\n   */\n  detectFeatures = (settings?: DataSourceSettings<InstanaOptions, {}>) => {\n    if (!settings) {\n      settings = this.props.options;\n    }\n\n    if (!settings.id) {\n      return;\n    }\n\n    this.setState({ canUseProxy: proxyCheck() });\n    getVersion(settings.jsonData).then((version: any) => {\n      version\n        ? this.setState({ canQueryOfflineSnapshots: version >= 156 })\n        : this.setState({ canQueryOfflineSnapshots: false });\n    });\n  };\n\n  render() {\n    const { options } = this.props;\n    const { jsonData } = options;\n\n    return (\n      <div>\n        <Legend>Instana configuration</Legend>\n\n        <Field\n          className={'width-30'}\n          horizontal\n          required\n          label=\"URL\"\n          description=\"The URL of your Instana installation.\"\n        >\n          <Input\n            css={''}\n            width={30}\n            value={jsonData.url}\n            placeholder={'https://tools-acme.instana.io'}\n            onChange={(event) => this.onInstanaOptionsChange(event, 'url')}\n          />\n        </Field>\n\n        <Field\n          className={'width-30'}\n          horizontal\n          required\n          label=\"API Token\"\n          description=\"The API token to access the data.\"\n        >\n          <Input\n            type=\"password\"\n            css={''}\n            width={30}\n            value={jsonData.apiToken}\n            suffix={\n              <Tooltip\n                content={\n                  <p>\n                    You can create API tokens following the instructions at&nbsp;\n                    <a href=\"https://docs.instana.io/quick_start/api/#api-tokens\">\n                      https://docs.instana.io/quick_start/api/#api-tokens\n                    </a>\n                  </p>\n                }\n                theme={'info'}\n              >\n                <Icon name=\"info-circle\" />\n              </Tooltip>\n            }\n            onChange={(event) => this.onInstanaOptionsChange(event, 'apiToken')}\n          />\n        </Field>\n\n        <Checkbox\n          css={''}\n          label={'Use Proxy'}\n          value={jsonData.useProxy}\n          onChange={(event) => this.onSwitchChange(event, 'useProxy')}\n          description={'Use Grafana server as proxy. Needs Grafana 5.3+ and Instana datasource 2.0.0+'}\n        />\n\n        <Checkbox\n          css={''}\n          label={'Enable offline snapshots'}\n          value={jsonData.showOffline}\n          onChange={(event) => this.onSwitchChange(event, 'showOffline')}\n          description={'Enables querying offline snapshots. Needs Instana release 156+ and Instana datasource 2.3.0+'}\n        />\n\n        <Checkbox\n          css={''}\n          label={'Enable SLO dashboards'}\n          value={jsonData.allowSlo}\n          onChange={(event) => this.onSwitchChange(event, 'allowSlo')}\n          description={\n            'Adds a new category that allows retrieval of SLO information. Needs Instana release 176+ and ' +\n            'an explicit feature flag.'\n          }\n        />\n\n        <br />\n        <br />\n        <b>Maximum query intervals in hours</b>\n        <p className={'width-30'}>\n          This settings are optional values to control the load of data queries, by defining the maximum allowed query\n          intervals against the Instana API.\n        </p>\n\n        <Field className={'width-30'} horizontal label=\"Infrastructure metrics\">\n          <Input\n            css={''}\n            width={30}\n            value={jsonData.queryinterval_limit_infra}\n            placeholder={'optional: interval limit in hours'}\n            onChange={(event) => this.onInstanaOptionsChange(event, 'queryinterval_limit_infra')}\n          />\n        </Field>\n\n        <Field className={'width-30'} horizontal label=\"Application metrics\">\n          <Input\n            css={''}\n            width={30}\n            value={jsonData.queryinterval_limit_app_metrics}\n            placeholder={'optional: interval limit in hours'}\n            onChange={(event) => this.onInstanaOptionsChange(event, 'queryinterval_limit_app_metrics')}\n          />\n        </Field>\n\n        <Field className={'width-30'} horizontal label=\"Analyze application calls\">\n          <Input\n            css={''}\n            width={30}\n            value={jsonData.queryinterval_limit_app_calls}\n            placeholder={'optional: interval limit in hours'}\n            onChange={(event) => this.onInstanaOptionsChange(event, 'queryinterval_limit_app_calls')}\n          />\n        </Field>\n\n        <Field className={'width-30'} horizontal label=\"Analyze website\">\n          <Input\n            css={''}\n            width={30}\n            value={jsonData.queryinterval_limit_website_metrics}\n            placeholder={'optional: interval limit in hours'}\n            onChange={(event) => this.onInstanaOptionsChange(event, 'queryinterval_limit_website_metrics')}\n          />\n        </Field>\n      </div>\n    );\n  }\n}\n","import { Tooltip, useTheme } from '@grafana/ui';\nimport React, { useState } from 'react';\n\nimport './ApplicationBoundaryScope.css';\n\nconst INBOUND = 'INBOUND';\nconst ALL = 'ALL';\n\nconst dropdown = {\n  position: 'relative',\n  background: 'transparent',\n  width: '32px',\n  height: '32px',\n  marginRight: '4px',\n} as React.CSSProperties;\n\nconst iconSize = 30;\n\nconst inboundIcon = (\n  <svg className={'iconStyle'} height={iconSize} width={iconSize}>\n    <path\n      transform=\"translate(3, 5)\"\n      fill=\"#33a2e5\"\n      d=\"M12.7891666,14.6051302 L12.7751756,19.8293818 L11.4691127,19.8328795 L11.4776628,16.6402814 L6.96695389,21.1509902 L6.2433066,20.427343 L10.7540155,15.9166341 L7.56141732,15.9251842 L7.56491507,14.6191213 L12.7891666,14.6051302 Z M15.754133,9.38135895 C17.1795716,9.38135895 18.3857119,10.5874993 18.3857119,12.0129379 C18.3857119,13.4383765 17.1795716,14.6445168 15.754133,14.6445168 C14.3286944,14.6445168 13.122554,13.4383765 13.122554,12.0129379 C13.122554,10.5874993 14.3286944,9.38135895 15.754133,9.38135895 Z M6.96695389,3.2433066 L11.4776628,7.75401547 L11.4691127,4.56141732 L12.7751756,4.56491507 L12.7891666,9.7891666 L7.56491507,9.77517557 L7.56141732,8.46911269 L10.7540155,8.47766276 L6.2433066,3.96695389 L6.96695389,3.2433066 Z\"\n    />\n  </svg>\n);\n\nconst allIcon = (\n  <svg className={'iconStyle'} height={iconSize} width={iconSize}>\n    <path\n      transform=\"translate(3, 5)\"\n      fill=\"#33a2e5\"\n      d=\"M7.54586,15 L7.53186897,20.2242515 L6.22580608,20.2277493 L6.23435616,17.0351511 L1.72364729,21.54586 L1,20.8222127 L5.51070887,16.3115038 L2.31811071,16.3200539 L2.32160847,15.013991 L7.54586,15 Z M14.1975552,7.94441147 L17.901552,11.628622 L14.1975552,15.3128325 L13.271556,14.3917799 L15.5351096,12.1403179 L12.4724561,12.1407167 C12.2827518,13.474447 11.1361413,14.5 9.75,14.5 C8.23121694,14.5 7,13.2687831 7,11.75 C7,10.2312169 8.23121694,9 9.75,9 C11.0508538,9 12.1407461,9.90323356 12.4267385,11.1167623 L15.5351096,11.1169261 L13.271556,8.8654641 L14.1975552,7.94441147 Z M20.75,9 C22.2687831,9 23.5,10.2312169 23.5,11.75 C23.5,13.2687831 22.2687831,14.5 20.75,14.5 C19.2312169,14.5 18,13.2687831 18,11.75 C18,10.2312169 19.2312169,9 20.75,9 Z M1.72364729,2 L6.23435616,6.51070887 L6.22580608,3.31811071 L7.53186897,3.32160847 L7.54586,8.54586 L2.32160847,8.53186897 L2.31811071,7.22580608 L5.51070887,7.23435616 L1,2.72364729 L1.72364729,2 Z\"\n    />\n  </svg>\n);\n\n/**\n * Props have to be:\n *   value: string\n *   onChange: function that accepts a string as a parameter and returns void\n *   disabled: boolean\n */\nexport default function ApplicationBoundaryScope(props: any) {\n  const theme = useTheme();\n\n  const opacity = props.disabled ? 0.5 : 1;\n\n  const dropdown__list__item = {\n    background: theme.colors.bg2,\n    cursor: 'pointer',\n    listStyle: 'none',\n    borderRadius: '3px',\n    height: '32px',\n    opacity: opacity,\n  } as React.CSSProperties;\n\n  const [active, setActive] = useState(false);\n\n  function toggleDropdown() {\n    if (!props.disabled) {\n      setActive(!active);\n    }\n  }\n\n  function handleClick(entity: string) {\n    props.onChange(entity);\n    setActive(false);\n  }\n\n  return (\n    <div style={dropdown}>\n      <div\n        onClick={() => toggleDropdown()}\n        onBlur={() => setActive(false)}\n        style={dropdown__list__item}\n        contentEditable\n      >\n        <Tooltip content={props.value ? props.value : ALL} theme={'info'} placement={'top'}>\n          {props.value === INBOUND ? inboundIcon : allIcon}\n        </Tooltip>\n      </div>\n\n      <ul className={active ? 'dropdown-list-active' : 'dropdown-list'}>\n        <li onClick={() => handleClick(INBOUND)} key={INBOUND} style={dropdown__list__item}>\n          <div className={'iconTextContainer'}>\n            {inboundIcon} <span className={'iconTextStyle'}>{INBOUND}</span>\n          </div>\n        </li>\n        <li onClick={() => handleClick(ALL)} key={ALL} style={dropdown__list__item}>\n          <div className={'iconTextContainer'}>\n            {allIcon} <span className={'iconTextStyle'}>{ALL}</span>\n          </div>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { ALL_APPLICATIONS, ALL_ENDPOINTS, ALL_SERVICES } from '../../GlobalVariables';\nimport ApplicationBoundaryScope from './ApplicationBoundaryScope';\nimport { InlineFormLabel, Input, Select } from '@grafana/ui';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { SelectableValue } from '@grafana/data';\nimport _ from 'lodash';\n\ninterface ApplicationServiceEndpointMetricsState {\n  applications: SelectableValue[];\n  services: SelectableValue[];\n  endpoints: SelectableValue[];\n  value: SelectableValue;\n}\n\ninterface Props {\n  query: InstanaQuery;\n\n  onRunQuery(): void;\n\n  onChange(value: InstanaQuery): void;\n\n  updateMetrics(metrics: SelectableValue[]): void;\n\n  datasource: DataSource;\n}\n\nlet isUnmounting = false;\n\nexport class ApplicationServiceEndpointMetrics extends React.Component<Props, ApplicationServiceEndpointMetricsState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      applications: [],\n      services: [],\n      endpoints: [],\n      value: {\n        value: 2,\n        imgUrl: '../../resources/dest.png',\n      },\n    };\n  }\n\n  componentDidMount() {\n    isUnmounting = false;\n    this.loadApplications();\n    this.loadServices();\n    this.loadEndpoints();\n\n    const { datasource } = this.props;\n    this.props.updateMetrics(datasource.dataSourceApplication.getApplicationMetricsCatalog());\n  }\n\n  componentWillUnmount() {\n    isUnmounting = true;\n  }\n\n  loadApplications() {\n    const { query, onChange, datasource } = this.props;\n    datasource.fetchApplications().then((applications) => {\n      if (!isUnmounting) {\n        this.setState({\n          applications: applications,\n        });\n\n        if (!_.find(this.state.applications, { key: null })) {\n          let apps = this.state.applications;\n          apps.unshift({ key: null, label: ALL_APPLICATIONS });\n          this.setState({\n            applications: apps,\n          });\n        }\n\n        // replace removed application\n        if (\n          query.entity &&\n          query.entity.key &&\n          !_.find(this.state.applications, (app) => app.key === query.entity.key)\n        ) {\n          query.entity = this.state.applications[0];\n        } else if ((!query.entity || !query.entity.key) && applications) {\n          query.entity = this.state.applications[0];\n        }\n\n        onChange(query);\n      }\n    });\n  }\n\n  loadServices() {\n    const { query, onChange, datasource } = this.props;\n    datasource.fetchServices(query).then((services) => {\n      if (!isUnmounting) {\n        this.setState({\n          services: services,\n        });\n\n        if (!_.find(this.state.services, { key: null })) {\n          let s = this.state.services;\n          s.unshift({ key: null, label: ALL_SERVICES });\n          this.setState({\n            services: s,\n          });\n        }\n\n        if (query.service && query.service.key) {\n          if (!_.find(this.state.services, (app) => app.key === query.service.key)) {\n            query.service = this.state.services[0];\n          }\n        } else {\n          query.service = this.state.services[0];\n        }\n\n        onChange(query);\n      }\n    });\n  }\n\n  loadEndpoints() {\n    const { query, onChange, datasource } = this.props;\n    datasource.fetchEndpoints(query).then((endpoints) => {\n      if (!isUnmounting) {\n        this.setState({\n          endpoints: endpoints,\n        });\n\n        if (!_.find(this.state.endpoints, { key: null })) {\n          let e = this.state.endpoints;\n          e.unshift({ key: null, label: ALL_ENDPOINTS });\n          this.setState({\n            endpoints: e,\n          });\n        }\n\n        if (query.endpoint && query.endpoint.key) {\n          if (!_.find(this.state.endpoints, (app) => app.key === query.endpoint.key)) {\n            query.endpoint = { key: null, label: ALL_ENDPOINTS };\n          }\n        } else {\n          query.endpoint = { key: null, label: ALL_ENDPOINTS };\n        }\n\n        onChange(query);\n      }\n    });\n  }\n\n  onApplicationChange = (application: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.entity = application;\n    if (application.boundaryScope !== '') {\n      //set the default boundary scope that is configured for this application\n      query.applicationBoundaryScope = application.boundaryScope;\n    } else {\n      if (query.applicationBoundaryScope !== 'ALL' && query.applicationBoundaryScope !== 'INBOUND') {\n        //if no default is set, set it to INBOUND\n        query.applicationBoundaryScope = 'INBOUND';\n      }\n    }\n\n    onChange(query);\n    this.loadServices();\n    this.loadEndpoints();\n    onRunQuery();\n  };\n\n  onServiceChange = (service: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.service = service;\n    onChange(query);\n    this.loadEndpoints();\n    onRunQuery();\n  };\n\n  onEndpointChange = (endpoint: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.endpoint = endpoint;\n    onChange(query);\n    onRunQuery();\n  };\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onGroupByTagSecondLevelKeyChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.groupbyTagSecondLevelKey = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  onApplicationBoundaryScopeChange = (scope: string) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.applicationBoundaryScope = scope;\n    onChange(query);\n    this.loadServices();\n    this.loadEndpoints();\n    onRunQuery();\n  };\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <InlineFormLabel className={'query-keyword'} width={14} tooltip={'Select your application.'}>\n          Application\n        </InlineFormLabel>\n        <ApplicationBoundaryScope\n          value={query.applicationBoundaryScope}\n          disabled={!query.entity.key}\n          onChange={this.onApplicationBoundaryScopeChange}\n        />\n        <Select\n          menuPlacement={'bottom'}\n          width={0}\n          isSearchable={true}\n          value={query.entity}\n          options={this.state.applications}\n          onChange={this.onApplicationChange}\n        />\n\n        <InlineFormLabel className={'query-keyword'} width={6} tooltip={'Select your service.'}>\n          Service\n        </InlineFormLabel>\n        <Select\n          menuPlacement={'bottom'}\n          width={0}\n          isSearchable={true}\n          value={query.service}\n          options={this.state.services}\n          onChange={this.onServiceChange}\n        />\n\n        <InlineFormLabel className={'query-keyword'} width={6} tooltip={'Select your endpoint.'}>\n          Endpoint\n        </InlineFormLabel>\n        <Select\n          menuPlacement={'bottom'}\n          width={0}\n          isSearchable={true}\n          value={query.endpoint}\n          options={this.state.endpoints}\n          onChange={this.onEndpointChange}\n        />\n\n        <div style={!query.showGroupBySecondLevel ? { display: 'none' } : {}}>\n          <Input css={''} value={query.groupbyTagSecondLevelKey} onChange={this.onGroupByTagSecondLevelKeyChange} />\n        </div>\n      </div>\n    );\n  }\n}\n","export default ['DESTINATION', 'SOURCE'];\n","import React from 'react';\n\ninterface WrapperProps {\n  disabled?: boolean;\n  stretch?: boolean;\n  children: any;\n}\n\nexport default function FormWrapper(props: WrapperProps) {\n  const style: any = { display: 'flex' };\n\n  if (props.disabled) {\n    style.opacity = '0.4';\n    style.pointerEvents = 'none';\n  }\n\n  if (props.stretch) {\n    style.width = '100%';\n  }\n\n  return <div style={style}>{props.children}</div>;\n}\n","import React, { useState } from 'react';\nimport { Tooltip, useTheme } from '@grafana/ui';\n\nconst DESTINATION = 'DESTINATION';\nconst SOURCE = 'SOURCE';\n\nconst dropdown = {\n  position: 'relative',\n  background: 'transparent',\n  width: '32px',\n  height: '32px',\n  marginRight: '4px',\n} as React.CSSProperties;\n\nconst dropdown__list = {\n  transition: 'max-height .2s ease-out',\n  maxHeight: 0,\n  overflow: 'hidden',\n  zIndex: 1,\n  position: 'fixed',\n} as React.CSSProperties;\n\nconst dropdown__list__active = {\n  overflow: 'hidden',\n  zIndex: 2, // we set a zIndex to ensure that the overlay is above other elements and does not move any DOM elements.\n  position: 'fixed',\n  maxHeight: '1000px',\n  opacity: 1,\n} as React.CSSProperties;\n\nconst iconTextContainer = {\n  display: 'inline-flex',\n};\n\nconst iconStyle = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n};\n\nconst iconTextStyle = {\n  padding: '7px',\n};\n\nconst iconSize = 30;\n\nconst destinationIcon = (\n  <svg style={iconStyle} height={iconSize} width={iconSize}>\n    <path\n      transform=\"translate(3, 5)\"\n      fill=\"#33a2e5\"\n      d=\"M4 11.173h6.38L8.115 8.92 9.042 8l3.704 3.684-3.704 3.684-.926-.92 2.263-2.252H4zM16.43 14.316c-1.426 0-2.632-1.206-2.632-2.632 0-1.425 1.206-2.631 2.632-2.631 1.425 0 2.631 1.206 2.631 2.631 0 1.426-1.206 2.632-2.631 2.632z\"\n    />\n  </svg>\n);\n\nconst sourceIcon = (\n  <svg style={iconStyle} height={iconSize} width={iconSize}>\n    <path\n      transform=\"translate(3, 5)\"\n      fill=\"#33a2e5\"\n      d=\"M9.939 11.173h6.379L14.054 8.92 14.98 8l3.704 3.684-3.704 3.684-.926-.92 2.264-2.252h-6.38c-.308 1.023-1.234 1.842-2.366 1.842C6.132 14.243 5 13.117 5 11.787c0-1.33 1.132-2.457 2.47-2.457 1.234 0 2.16.717 2.469 1.843z\"\n    />\n  </svg>\n);\n\n/**\n * Props have to be:\n *   value: string\n *   onChange: function that accepts a string as a parameter and returns void\n */\nexport default function Entity(props: any) {\n  const theme = useTheme();\n\n  const dropdown__list__item = {\n    background: theme.colors.bg2,\n    cursor: 'pointer',\n    listStyle: 'none',\n    borderRadius: '3px',\n    height: '32px',\n  } as React.CSSProperties;\n\n  const [active, setActive] = useState(false);\n\n  function toggleDropdown() {\n    setActive(!active);\n  }\n\n  function handleClick(entity: string) {\n    props.onChange(entity);\n    setActive(false);\n  }\n\n  return (\n    <div style={dropdown}>\n      <div\n        onClick={() => toggleDropdown()}\n        onBlur={() => setActive(false)}\n        style={dropdown__list__item}\n        contentEditable\n      >\n        <Tooltip content={props.value} theme={'info'} placement={'top'}>\n          {props.value === DESTINATION ? destinationIcon : sourceIcon}\n        </Tooltip>\n      </div>\n\n      <ul style={active ? dropdown__list__active : dropdown__list}>\n        <li onClick={() => handleClick(DESTINATION)} key={DESTINATION} style={dropdown__list__item}>\n          <div style={iconTextContainer}>\n            {destinationIcon} <span style={iconTextStyle}>{DESTINATION}</span>\n          </div>\n        </li>\n        <li onClick={() => handleClick('SOURCE')} key={SOURCE} style={dropdown__list__item}>\n          <div style={iconTextContainer}>\n            {sourceIcon} <span style={iconTextStyle}>{SOURCE}</span>\n          </div>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { ALL_APPLICATIONS, ANALYZE_APPLICATION_METRICS } from '../../GlobalVariables';\nimport call_to_entities from '../../lists/apply_call_to_entities';\nimport { Input, Select, InlineFormLabel } from '@grafana/ui';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport FormWrapper from '../FormField/FormWrapper';\nimport { SelectableValue } from '@grafana/data';\nimport Entity from '../Entity/Entity';\nimport _ from 'lodash';\nimport '../plugin.css';\n\ninterface ApplicationCallsMetricsState {\n  applications: SelectableValue[];\n}\n\ninterface Props {\n  query: InstanaQuery;\n\n  groups: SelectableValue[];\n\n  updateGroups(groups: SelectableValue[]): void;\n\n  onRunQuery(): void;\n\n  onChange(value: InstanaQuery): void;\n\n  updateMetrics(metrics: SelectableValue[]): void;\n\n  datasource: DataSource;\n}\n\nlet isUnmounting = false;\n\nexport class ApplicationCallsMetrics extends React.Component<Props, ApplicationCallsMetricsState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      applications: [],\n    };\n  }\n\n  componentDidMount() {\n    const { query, datasource, onChange } = this.props;\n    isUnmounting = false;\n    datasource.fetchApplications().then((applications) => {\n      if (!isUnmounting) {\n        if (!_.find(applications, { key: null })) {\n          applications.unshift({ key: null, label: ALL_APPLICATIONS });\n        }\n\n        this.setState({\n          applications: applications,\n        });\n\n        if (!query.entity || (!query.entity.key && !query.entity.label)) {\n          query.entity = applications[0];\n        }\n\n        if (!query.callToEntity) {\n          query.callToEntity = call_to_entities[0];\n        }\n        if (!query.applicationCallToEntity) {\n          query.applicationCallToEntity = call_to_entities[0];\n        }\n\n        onChange(query);\n      }\n    });\n\n    datasource.fetchApplicationTags().then((applicationTags: any) => {\n      if (!isUnmounting) {\n        this.props.updateGroups(_.sortBy(applicationTags, 'key'));\n\n        // select a meaningful default group\n        if (!query.group || !query.group.key) {\n          query.group = _.find(applicationTags, ['key', 'endpoint.name']);\n          onChange(query);\n        }\n      }\n    });\n\n    this.props.updateMetrics(datasource.dataSourceApplication.getApplicationMetricsCatalog());\n  }\n\n  componentWillUnmount() {\n    isUnmounting = true;\n  }\n\n  onApplicationChange = (application: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.entity = application;\n    onChange(query);\n    onRunQuery();\n  };\n\n  onGroupChange = (group: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.group = group;\n\n    if (query.group && query.metricCategory.key === ANALYZE_APPLICATION_METRICS) {\n      query.showGroupBySecondLevel = query.group.type === 'KEY_VALUE_PAIR';\n    }\n\n    if (!query.showGroupBySecondLevel) {\n      query.groupbyTagSecondLevelKey = '';\n    }\n\n    onChange(query);\n    onRunQuery();\n  };\n\n  onApplicationCallToEntityChange = (applicationCallToEntity: string) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.applicationCallToEntity = applicationCallToEntity;\n    onChange(query);\n    onRunQuery();\n  };\n\n  onCallToEntityChange = (callToEntity: string) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.callToEntity = callToEntity;\n    onChange(query);\n    onRunQuery();\n  };\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onGroupByTagSecondLevelKeyChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.groupbyTagSecondLevelKey = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  render() {\n    const { query, groups } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormWrapper stretch={true}>\n          <InlineFormLabel className={'query-keyword'} width={14} tooltip={'Select your application.'}>\n            Application\n          </InlineFormLabel>\n          <Entity value={query.applicationCallToEntity} onChange={this.onApplicationCallToEntityChange} />\n          <Select\n            menuPlacement={'bottom'}\n            width={0}\n            isSearchable={true}\n            value={query.entity}\n            options={this.state.applications}\n            onChange={this.onApplicationChange}\n          />\n        </FormWrapper>\n\n        <FormWrapper stretch={true}>\n          <InlineFormLabel className={'query-keyword'} width={7} tooltip={'Group by tag.'}>\n            Group by\n          </InlineFormLabel>\n          <Entity value={query.callToEntity} onChange={this.onCallToEntityChange} />\n          <Select\n            menuPlacement={'bottom'}\n            width={0}\n            isSearchable={true}\n            options={groups}\n            value={query.group}\n            onChange={this.onGroupChange}\n          />\n        </FormWrapper>\n\n        <div style={!query.showGroupBySecondLevel ? { display: 'none' } : {}}>\n          <Input\n            css={''}\n            type={'text'}\n            value={query.groupbyTagSecondLevelKey}\n            onChange={this.onGroupByTagSecondLevelKeyChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { InlineFormLabel, Input, PopoverContent } from '@grafana/ui';\nimport FormWrapper from './FormWrapper';\n\ninterface State {}\n\ninterface Props {\n  label: string;\n  value: string;\n  invalid?: boolean;\n  disabled?: boolean;\n  placeholder?: string;\n  queryKeyword?: boolean;\n  labelWidth?: number | 14;\n  inputWidth?: number | 30;\n  tooltip?: PopoverContent;\n\n  onChange(event?: any): any;\n}\n\n/**\n * Default input field including label. Input element is grafana/ui <Input />.\n */\nexport default class FormInput extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    const { label, tooltip, queryKeyword, disabled, labelWidth = 14, inputWidth = 30, ...remainingProps } = this.props;\n\n    return (\n      <FormWrapper disabled={disabled} stretch={!inputWidth}>\n        <InlineFormLabel className={queryKeyword ? 'query-keyword' : ''} width={labelWidth} tooltip={tooltip}>\n          {label}\n        </InlineFormLabel>\n        <Input css={''} width={inputWidth} disabled={disabled} {...remainingProps} />\n      </FormWrapper>\n    );\n  }\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { PLEASE_SPECIFY } from '../../../GlobalVariables';\nimport { DataSource } from '../../../datasources/DataSource';\nimport { InstanaQuery } from '../../../types/instana_query';\nimport { Button, InlineFormLabel } from '@grafana/ui';\nimport FormInput from '../../FormField/FormInput';\nimport { SelectableValue } from '@grafana/data';\n\ninterface MetricFilterState {\n  customFilters: string[];\n}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  availableMetrics: SelectableValue[];\n  onFilterChange(customFilters: string[]): void;\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n}\n\nexport class MetricFilter extends React.Component<Props, MetricFilterState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      customFilters: [],\n    };\n  }\n\n  componentDidMount() {\n    const { query } = this.props;\n    this.setState({ customFilters: query.customFilters });\n  }\n\n  onFilterChange = (eventItem: ChangeEvent<HTMLInputElement>, index: number) => {\n    const customFilters: string[] = this.state.customFilters;\n    customFilters[index] = eventItem.currentTarget.value;\n    this.setState({ customFilters: customFilters });\n\n    this.props.onFilterChange(customFilters);\n  };\n\n  addCustomFilter = () => {\n    let customFilters = this.state.customFilters;\n    customFilters.push('');\n    this.setState({ customFilters: customFilters });\n\n    const { query, onChange } = this.props;\n    query.customFilters = customFilters;\n    onChange(query);\n  };\n\n  removeCustomFilter = (index: number) => {\n    let customFilters: string[] = this.state.customFilters;\n    customFilters.splice(index, 1);\n    this.setState({ customFilters: customFilters });\n\n    this.props.onFilterChange(customFilters);\n  };\n\n  render() {\n    let filter = null;\n    let listFilter = this.state.customFilters.map((filters, index) => {\n      filter = (\n        <div className={'gf-form'}>\n          <FormInput\n            label={index + 1 + '. filter metric select'}\n            value={this.state.customFilters[index]}\n            placeholder={PLEASE_SPECIFY}\n            onChange={(event) => this.onFilterChange(event, index)}\n            tooltip={'Type to suggest metrics.'}\n          />\n          <Button variant={'secondary'} onClick={() => this.removeCustomFilter(index)}>\n            -\n          </Button>\n        </div>\n      );\n      return filter;\n    });\n\n    return (\n      <div>\n        {listFilter}\n\n        <div className={'gf-form'}>\n          <InlineFormLabel width={14} tooltip={'Add an additional metric select filter.'}>\n            Add filter metric select\n          </InlineFormLabel>\n          <Button variant={'secondary'} onClick={this.addCustomFilter}>\n            +\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { InlineFormLabel, LegacyForms, PopoverContent } from '@grafana/ui';\nimport FormWrapper from './FormWrapper';\n\nconst { Switch } = LegacyForms;\n\ninterface State {}\n\ninterface Props {\n  label: string;\n  value: boolean;\n  disabled?: boolean;\n  queryKeyword?: boolean;\n  labelWidth?: number | 14;\n  tooltip?: PopoverContent;\n\n  onChange(event?: any): any;\n}\n\n/**\n * Default switch field including label. Switch element is grafana/ui <Switch />.\n */\nexport default class FormSwitch extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    const { label, tooltip, queryKeyword, disabled, labelWidth = 14, value, ...remainingProps } = this.props;\n\n    return (\n      <FormWrapper disabled={disabled} stretch={false}>\n        <InlineFormLabel className={queryKeyword ? 'query-keyword' : ''} width={labelWidth} tooltip={tooltip}>\n          {label}\n        </InlineFormLabel>\n        <Switch checked={value} label={''} {...remainingProps} />\n      </FormWrapper>\n    );\n  }\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { InstanaQuery } from '../../../types/instana_query';\nimport FormSwitch from '../../FormField/FormSwitch';\nimport { Input } from '@grafana/ui';\nimport _ from 'lodash';\n\ninterface FreeTextMetricsState {}\n\ninterface Props {\n  query: InstanaQuery;\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n  loadEntityTypes(filterResult?: boolean): void;\n}\n\nexport class FreeTextMetrics extends React.Component<Props, FreeTextMetricsState> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onUseFreeTextMetricsChange = (event: React.SyntheticEvent<HTMLInputElement> | undefined) => {\n    const { query, onChange, loadEntityTypes } = this.props;\n    if (event && event.currentTarget) {\n      query.useFreeTextMetrics = event.currentTarget.checked;\n      if (query.useFreeTextMetrics) {\n        loadEntityTypes(false);\n        query.metric = {};\n      } else {\n        loadEntityTypes(true);\n      }\n      onChange(query);\n    }\n  };\n\n  onFreeTextMetricsChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.freeTextMetrics = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSwitch\n          queryKeyword\n          label={'Enable free text metrics'}\n          tooltip={\n            'Specify comma separated metrics directly in this text field. Once this field has a value,' +\n            ' selected metrics from above will be ignored. Enabled as soon as a query is entered.' +\n            ' Max 4 metrics supported.'\n          }\n          value={query.useFreeTextMetrics}\n          onChange={this.onUseFreeTextMetricsChange}\n          disabled={false}\n        />\n        <Input\n          css={''}\n          width={0}\n          disabled={!query.useFreeTextMetrics}\n          value={query.freeTextMetrics}\n          placeholder={'metric.one,metric.two,metric.three'}\n          onChange={this.onFreeTextMetricsChange}\n        />\n      </div>\n    );\n  }\n}\n","export default [\n  {\n    label: 'SUM',\n  },\n  {\n    label: 'MEAN',\n  },\n  {\n    label: 'MIN',\n  },\n  {\n    label: 'MAX',\n  },\n];\n","import React from 'react';\n\nimport AggregationFunctions from '../../lists/aggregation_function';\nimport { InstanaQuery } from '../../types/instana_query';\nimport FormSwitch from '../FormField/FormSwitch';\nimport { SelectableValue } from '@grafana/data';\nimport { Select } from '@grafana/ui';\n\ninterface AggregateQueryState {}\n\ninterface Props {\n  query: InstanaQuery;\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n}\n\nexport class AggregateQuery extends React.Component<Props, AggregateQueryState> {\n  constructor(props: any) {\n    super(props);\n    this.state = { showAdditionalSettings: false, legendFormat: '' };\n    const { query } = this.props;\n    if (!query.aggregationFunction) {\n      query.aggregationFunction = AggregationFunctions[0];\n    }\n  }\n\n  onAggregateGraphs = (event: React.SyntheticEvent<HTMLInputElement> | undefined) => {\n    const { query, onRunQuery } = this.props;\n    if (event && event.currentTarget) {\n      query.aggregateGraphs = event.currentTarget.checked;\n      onRunQuery();\n    }\n  };\n\n  onHideOriginalGraph = (event: React.SyntheticEvent<HTMLInputElement> | undefined) => {\n    const { query, onRunQuery } = this.props;\n    if (event && event.currentTarget) {\n      query.hideOriginalGraphs = event.currentTarget.checked;\n      onRunQuery();\n    }\n  };\n\n  onAggregationFunctionChange = (event: SelectableValue) => {\n    const { query, onRunQuery } = this.props;\n    query.aggregationFunction = event;\n    onRunQuery();\n  };\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSwitch\n          queryKeyword\n          label={'Aggregate query graphs'}\n          tooltip={'Aggregate all graphs of a query.'}\n          value={query.aggregateGraphs}\n          onChange={this.onAggregateGraphs}\n        />\n\n        <Select\n          menuPlacement={'bottom'}\n          width={12}\n          isSearchable={true}\n          options={AggregationFunctions}\n          value={query.aggregationFunction}\n          disabled={!query.aggregateGraphs}\n          onChange={this.onAggregationFunctionChange}\n        />\n\n        <FormSwitch\n          queryKeyword\n          disabled={!query.aggregateGraphs}\n          labelWidth={10}\n          label={'Hide original graphs'}\n          tooltip={'Removes the original graphs resulted from the query and only shows the aggregated graph.'}\n          value={query.hideOriginalGraphs}\n          onChange={this.onHideOriginalGraph}\n        />\n      </div>\n    );\n  }\n}\n","import React, { ChangeEvent, FormEvent } from 'react';\n\nimport { BUILT_IN_METRICS, CUSTOM_METRICS, SLO_INFORMATION } from '../../GlobalVariables';\nimport { FreeTextMetrics } from '../Infrastructure/Custom/FreeTextMetrics';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { AggregateQuery } from './AggregateQuery';\nimport FormSwitch from '../FormField/FormSwitch';\nimport FormInput from '../FormField/FormInput';\nimport _ from 'lodash';\n\nconst legendFormatPlaceholders = [\n  '$label (on host $host)',\n  '$label (on host $host)',\n  '$label ($application) - $key',\n  '$label ($website) - $key',\n  '$label ($application) - $key',\n  '',\n  '',\n  '',\n];\n\nconst legendFormatTooltips = [\n  <div>\n    Default: $label (on host $host)\n    <ul>\n      <li>• $label - entity label</li>\n      <li>• $host - corresponding host</li>\n      <li>• $pid - corresponding PID</li>\n      <li>• $timeShift - corresponding timeShift</li>\n      <li>• $metric - displayed metric</li>\n      <li>• $type - entity type</li>\n      <li>• $service - service label</li>\n      <li>• $name - label alternative</li>\n      <li>• $index - index in the list</li>\n    </ul>\n  </div>,\n  <div>\n    Default: $label (on host $host)\n    <ul>\n      <li>• $label - entity label</li>\n      <li>• $host - corresponding host</li>\n      <li>• $pid - corresponding PID</li>\n      <li>• $timeShift - corresponding timeShift</li>\n      <li>• $metric - displayed metric</li>\n      <li>• $type - entity type</li>\n      <li>• $service - service label</li>\n      <li>• $name - label alternative</li>\n      <li>• $index - index in the list</li>\n    </ul>\n  </div>,\n  <div>\n    Default: $label ($application) - $key\n    <ul>\n      <li>• $label - entity label</li>\n      <li>• $application - application label</li>\n      <li>• $timeShift - corresponding timeShift</li>\n      <li>• $metric - displayed metric</li>\n      <li>• $key - metric key with aggregation and rollup</li>\n      <li>• $index - index in the list</li>\n    </ul>\n  </div>,\n  <div>\n    Default: $label ($website) - $key\n    <ul>\n      <li>• $label - entity label</li>\n      <li>• $website - application label</li>\n      <li>• $type - entity type</li>\n      <li>• $timeShift - corresponding timeShift</li>\n      <li>• $metric - displayed metric</li>\n      <li>• $key - metric key with aggregation and rollup</li>\n      <li>• $index - index in the list</li>\n    </ul>\n  </div>,\n  <div>\n    Default: $label ($application) - $key\n    <ul>\n      <li>• $label - entity label</li>\n      <li>• $application - application label</li>\n      <li>• $service - service label</li>\n      <li>• $endpoint - endpoint label</li>\n      <li>• $timeShift - corresponding timeShift</li>\n      <li>• $metric - displayed metric</li>\n      <li>• $key - metric key with aggregation and rollup</li>\n      <li>• $index - index in the list</li>\n    </ul>\n  </div>,\n  '',\n  '',\n  '',\n];\n\ninterface AdvancedSettingsState {\n  legendFormatPlaceholder: string;\n}\n\ninterface Props {\n  query: InstanaQuery;\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n  loadEntityTypes(filterResult?: boolean): void;\n}\n\nexport default class AdvancedSettings extends React.Component<Props, AdvancedSettingsState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      legendFormatPlaceholder: this.setLegendFormatPlaceholder(),\n    };\n  }\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onLegendFormatChange = (eventItem: FormEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.labelFormat = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  onTimeShiftChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.timeShift = eventItem.currentTarget.value;\n\n    if (query.timeShift) {\n      query.timeShiftIsValid = query.timeShift.match(/\\d+[m,s,h,d,w]{1}/) ? true : false;\n    } else {\n      query.timeShiftIsValid = true;\n    }\n\n    onChange(query);\n\n    if (query.timeShiftIsValid) {\n      // onRunQuery with 500ms delay after last debounce\n      this.debouncedRunQuery();\n    }\n  };\n\n  setLegendFormatPlaceholder(): string {\n    const { query } = this.props;\n    return legendFormatPlaceholders[query.metricCategory.key];\n  }\n\n  setLegendFormatTooltip() {\n    const { query } = this.props;\n    return legendFormatTooltips[query.metricCategory.key];\n  }\n\n  onShowAdvancedSettingsChange = (event: React.SyntheticEvent<HTMLInputElement> | undefined) => {\n    if (event && event.currentTarget) {\n      const { query, onChange } = this.props;\n      query.showAdvancedSettings = event.currentTarget.checked;\n      onChange(query);\n    }\n  };\n\n  render() {\n    const { query, onRunQuery, onChange, loadEntityTypes } = this.props;\n\n    return (\n      <div>\n        <div className={'gf-form'}>\n          <FormSwitch\n            label={'Show advanced settings'}\n            tooltip={'Show all additional settings'}\n            value={query.showAdvancedSettings}\n            onChange={(e) => this.onShowAdvancedSettingsChange(e)}\n          />\n        </div>\n\n        <div hidden={!query.showAdvancedSettings}>\n          <div className={'gf-form'} hidden={query.metricCategory.key === SLO_INFORMATION}>\n            <FormInput\n              queryKeyword\n              inputWidth={0}\n              label={'Legend format'}\n              tooltip={this.setLegendFormatTooltip()}\n              value={query.labelFormat}\n              placeholder={this.setLegendFormatPlaceholder()}\n              onChange={(event) => this.onLegendFormatChange(event)}\n            />\n          </div>\n\n          <div className={'gf-form'}>\n            <FormInput\n              queryKeyword\n              inputWidth={0}\n              label={'Time shift'}\n              tooltip={\n                'Specify the amount of hours that shall be used. The time shift function always go back in time, ' +\n                'not forward. Accepts values such as 1s, 1m, 1h, 1d, 1w.'\n              }\n              value={query.timeShift}\n              invalid={!query.timeShiftIsValid}\n              placeholder={'1h'}\n              onChange={(event) => this.onTimeShiftChange(event)}\n            />\n          </div>\n\n          <div hidden={query.metricCategory.key !== CUSTOM_METRICS}>\n            <FreeTextMetrics\n              query={query}\n              onRunQuery={onRunQuery}\n              onChange={onChange}\n              loadEntityTypes={loadEntityTypes}\n            />\n          </div>\n\n          <div hidden={query.metricCategory.key !== BUILT_IN_METRICS && query.metricCategory.key !== CUSTOM_METRICS}>\n            <AggregateQuery query={query} onRunQuery={onRunQuery} onChange={onChange} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { InlineFormLabel, Select, PopoverContent } from '@grafana/ui';\nimport FormWrapper from './FormWrapper';\nimport { SelectableValue } from '@grafana/data';\n\ninterface State {}\n\ninterface Props {\n  label: string;\n  value: SelectableValue;\n  options: any;\n  queryKeyword?: boolean;\n  disabled?: boolean;\n  defaultValue?: SelectableValue;\n  noOptionsMessage?: string;\n  searchable?: boolean | true;\n  labelWidth?: number | 14;\n  inputWidth?: number | 30;\n  placeholder?: string | '-';\n  tooltip?: PopoverContent;\n\n  onChange(event?: any): any;\n}\n\n/**\n * Default select field including label. Select element is grafana/ui <Select />.\n */\nexport default class FormSelect extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    const {\n      label,\n      tooltip,\n      searchable = true,\n      disabled,\n      queryKeyword,\n      placeholder = '-',\n      labelWidth = 14,\n      inputWidth = 30,\n      ...remainingProps\n    } = this.props;\n\n    return (\n      <FormWrapper disabled={disabled} stretch={!inputWidth}>\n        <InlineFormLabel className={queryKeyword ? 'query-keyword' : ''} width={labelWidth} tooltip={tooltip}>\n          {label}\n        </InlineFormLabel>\n        <Select\n          menuPlacement={'bottom'}\n          disabled={disabled}\n          width={inputWidth}\n          isSearchable={searchable}\n          placeholder={placeholder}\n          {...remainingProps}\n        />\n      </FormWrapper>\n    );\n  }\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { PLEASE_SPECIFY } from '../../GlobalVariables';\nimport FormSelect from '../FormField/FormSelect';\nimport { SelectableValue } from '@grafana/data';\nimport FormInput from '../FormField/FormInput';\nimport _ from 'lodash';\n\ninterface QueryTypeState {}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  queryTypes: SelectableValue[];\n  onRunQuery(): void;\n  loadEntityTypes(filterResult?: boolean): void;\n  onChange(value: InstanaQuery): void;\n  updateMetrics(metrics: SelectableValue[]): void;\n  updateQueryTypes(types: SelectableValue[]): void;\n}\n\nexport class QueryType extends React.Component<Props, QueryTypeState> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const { query, loadEntityTypes } = this.props;\n    if (query.entityQuery) {\n      loadEntityTypes();\n    }\n  }\n\n  onQueryChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange, updateQueryTypes } = this.props;\n    if (eventItem.currentTarget && eventItem.currentTarget.value) {\n      query.entityQuery = eventItem.currentTarget.value;\n    } else {\n      updateQueryTypes([]);\n      query.entityQuery = '';\n      query.entityType = { key: null, label: '-' };\n    }\n\n    onChange(query);\n\n    // loadEntityTypes with 500ms delay after last debounce\n    this.debouncedEntityTypes();\n  };\n\n  onTypeChange = (eventItem: SelectableValue) => {\n    const { query, datasource, onChange } = this.props;\n    query.entityType = eventItem;\n    onChange(query);\n\n    datasource.dataSourceInfrastructure\n      .getMetricsCatalog(query.entityType, query.metricCategory.key)\n      .then((results) => {\n        this.props.updateMetrics(results);\n      });\n  };\n\n  debouncedEntityTypes = _.debounce(this.props.loadEntityTypes, 500);\n\n  render() {\n    const { query, queryTypes } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormInput\n          queryKeyword\n          inputWidth={0}\n          label={'Query'}\n          tooltip={\n            <div>\n              Specify a query for the entities you wish to plot. Use the dynamic focus syntax:\n              <a href=\"https://docs.instana.io/core_concepts/dynamic_focus/#syntax\">\n                https://docs.instana.io/core_concepts/dynamic_focus/#syntax\n              </a>\n            </div>\n          }\n          value={query.entityQuery}\n          placeholder={PLEASE_SPECIFY}\n          onChange={this.onQueryChange}\n        />\n\n        <FormSelect\n          queryKeyword\n          labelWidth={6}\n          label={'Type'}\n          tooltip={'Select an entity type for a list of available metrics.'}\n          noOptionsMessage={'No types found with query'}\n          value={query.entityType}\n          options={queryTypes}\n          onChange={this.onTypeChange}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { SelectableValue } from '@grafana/data';\nimport { QueryType } from './QueryType';\n\ninterface InfrastructureBuiltInState {}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  queryTypes: SelectableValue[];\n  onRunQuery(): void;\n  loadEntityTypes(filterResult?: boolean): void;\n  onChange(value: InstanaQuery): void;\n  updateMetrics(metrics: SelectableValue[]): void;\n  updateQueryTypes(types: SelectableValue[]): void;\n}\n\nlet isUnmounting = false;\n\nexport class Infrastructure extends React.Component<Props, InfrastructureBuiltInState> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const { query, onChange, datasource } = this.props;\n    isUnmounting = false;\n\n    if (query.entityQuery && query.entityType && query.entityType.key) {\n      datasource.dataSourceInfrastructure\n        .getMetricsCatalog(query.entityType, query.metricCategory.key)\n        .then((results) => {\n          if (!isUnmounting) {\n            this.props.updateMetrics(results);\n          }\n        });\n    } else {\n      query.metric = {\n        key: null,\n        label: '-',\n      };\n    }\n\n    onChange(query);\n  }\n\n  componentWillUnmount() {\n    isUnmounting = true;\n  }\n\n  render() {\n    const {\n      query,\n      onRunQuery,\n      onChange,\n      updateMetrics,\n      loadEntityTypes,\n      datasource,\n      queryTypes,\n      updateQueryTypes,\n    } = this.props;\n\n    return (\n      <QueryType\n        query={query}\n        onChange={onChange}\n        queryTypes={queryTypes}\n        onRunQuery={onRunQuery}\n        datasource={datasource}\n        updateMetrics={updateMetrics}\n        loadEntityTypes={loadEntityTypes}\n        updateQueryTypes={updateQueryTypes}\n      />\n    );\n  }\n}\n","export default [\n  {\n    key: 'SLI',\n    label: 'SLI',\n  },\n  {\n    key: 'Remaining Error Budget',\n    label: 'Remaining Error Budget',\n  },\n  {\n    key: 'Timeseries',\n    label: 'Timeseries',\n  },\n];\n","import React, { ChangeEvent } from 'react';\n\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { SLO_INFORMATION } from '../../GlobalVariables';\nimport SloSpecifics from '../../lists/slo_specifics';\nimport FormSelect from '../FormField/FormSelect';\nimport { SelectableValue } from '@grafana/data';\nimport FormInput from '../FormField/FormInput';\nimport _ from 'lodash';\n\nconst MAX_VAL = 0.9999;\n\ninterface SloInformationState {\n  sloReports: SelectableValue[];\n  isValidSlo: boolean;\n}\n\ninterface Props {\n  query: InstanaQuery;\n\n  onRunQuery(): void;\n\n  onChange(value: InstanaQuery): void;\n\n  datasource: DataSource;\n}\n\nlet isUnmounting = false;\n\nexport class SloInformation extends React.Component<Props, SloInformationState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      sloReports: [],\n      isValidSlo: true,\n    };\n  }\n\n  componentDidMount() {\n    isUnmounting = false;\n    this.loadSloReports();\n    this.isValid(this.props.query.sloValue);\n  }\n\n  componentWillUnmount() {\n    isUnmounting = true;\n  }\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onSloChange = (slo: SelectableValue) => {\n    const { query, onRunQuery } = this.props;\n    query.sloReport = slo;\n    onRunQuery();\n  };\n\n  onSloValueChange = (sloValue: ChangeEvent<HTMLInputElement>) => {\n    const { query } = this.props;\n    query.sloValue = sloValue.currentTarget.value;\n\n    if (this.isValid(query.sloValue)) {\n      // onRunQuery with 500ms delay after last debounce\n      this.debouncedRunQuery();\n    }\n  };\n\n  onSloSpecificChange = (sloSpecific: SelectableValue) => {\n    const { query, onRunQuery } = this.props;\n    query.sloSpecific = sloSpecific;\n    onRunQuery();\n  };\n\n  isValid(val: string): boolean {\n    const valid = !val || (+val >= 0 && +val <= MAX_VAL);\n    this.setState({\n      isValidSlo: valid,\n    });\n    return valid;\n  }\n\n  shouldComponentUpdate(\n    nextProps: Readonly<Props>,\n    nextState: Readonly<SloInformationState>,\n    nextContext: any\n  ): boolean {\n    return nextProps.query.metricCategory.key === SLO_INFORMATION;\n  }\n\n  loadSloReports() {\n    const { query } = this.props;\n    this.props.datasource.getSloReports().then((sloReports) => {\n      if (!isUnmounting) {\n        this.setState({ sloReports: sloReports });\n\n        if (!query.sloReport && sloReports.length >= 1) {\n          query.sloReport = sloReports[0];\n        }\n      }\n    });\n  }\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSelect\n          queryKeyword\n          inputWidth={0}\n          label={'Configured SLI'}\n          tooltip={'SLI configuration used to compute error budget and SLI values.'}\n          noOptionsMessage={'No configured SLI found'}\n          value={query.sloReport}\n          options={this.state.sloReports}\n          onChange={this.onSloChange}\n        />\n\n        <FormInput\n          queryKeyword\n          labelWidth={7}\n          inputWidth={0}\n          label={'SLO'}\n          tooltip={'Type in your desired SLO threshold from 0 to ' + MAX_VAL}\n          value={query.sloValue}\n          invalid={!this.state.isValidSlo}\n          placeholder={'0.99'}\n          onChange={this.onSloValueChange}\n        />\n\n        <FormSelect\n          queryKeyword\n          labelWidth={7}\n          inputWidth={0}\n          label={'Value type'}\n          tooltip={\n            <div>\n              Select your specific SLO information:\n              <ul>\n                <li>'SLI' requires Gauge visualization</li>\n                <li>'Remaining Error Budget' requires Singlestat visualization</li>\n                <li>'Timeseries' requires Bars draw mode on Graph visualization</li>\n              </ul>\n            </div>\n          }\n          value={query.sloSpecific}\n          options={SloSpecifics}\n          onChange={this.onSloSpecificChange}\n        />\n      </div>\n    );\n  }\n}\n","export default [\n  { key: 'pageLoad', label: 'Page Loads' },\n  { key: 'page_change', label: 'Page Transitions' },\n  { key: 'resourceLoad', label: 'Resources' },\n  { key: 'httpRequest', label: 'HTTP Requests' },\n  { key: 'error', label: 'Errors' },\n  { key: 'custom', label: 'Custom Events' },\n];\n","import React, { ChangeEvent } from 'react';\n\nimport { ALL_WEBSITES, ANALYZE_WEBSITE_METRICS } from '../../GlobalVariables';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport beacon_types from '../../lists/beacon_types';\nimport FormSelect from '../FormField/FormSelect';\nimport { SelectableValue } from '@grafana/data';\nimport { Input } from '@grafana/ui';\nimport _ from 'lodash';\n\ninterface WebsiteMetricsState {\n  websites: SelectableValue[];\n}\n\ninterface Props {\n  query: InstanaQuery;\n  groups: SelectableValue[];\n  datasource: DataSource;\n\n  updateGroups(groups: SelectableValue[]): void;\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n  updateMetrics(metrics: SelectableValue[]): void;\n  filterMetricsOnType(type: string): any;\n}\n\nlet isUnmounting = false;\n\nexport class WebsiteMetrics extends React.Component<Props, WebsiteMetricsState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      websites: [],\n    };\n  }\n\n  componentDidMount() {\n    const { query, datasource, onChange } = this.props;\n    isUnmounting = false;\n    datasource.fetchWebsites().then((websites) => {\n      if (!isUnmounting) {\n        if (!_.find(websites, { key: null })) {\n          websites.unshift({ key: null, label: ALL_WEBSITES });\n        }\n\n        this.setState({\n          websites: websites,\n        });\n\n        if ((!query.entity || !query.entity.key) && websites) {\n          query.entity = websites[0];\n        } else if (query.entity && !_.find(websites, ['key', query.entity.key])) {\n          query.entity = websites[0];\n        }\n\n        onChange(query);\n      }\n    });\n\n    datasource.dataSourceWebsite.getWebsiteTags().then((websiteTags: any) => {\n      if (!isUnmounting) {\n        this.props.updateGroups(_.sortBy(websiteTags, 'key'));\n\n        // select a meaningful default group\n        if (!query.group || !query.group.key) {\n          query.group = _.find(websiteTags, ['key', 'beacon.page.name']);\n          onChange(query);\n        }\n      }\n    });\n\n    if (!query.entityType || !query.entityType.key) {\n      query.entityType = beacon_types[0];\n      onChange(query);\n    }\n\n    datasource.dataSourceWebsite.getWebsiteMetricsCatalog().then((websiteMetrics: any) => {\n      if (!isUnmounting) {\n        this.props.updateMetrics(_.filter(websiteMetrics, (m) => m.beaconTypes.includes(query.entityType.key)));\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    isUnmounting = true;\n  }\n\n  onWebsiteChange = (website: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.entity = website;\n    onChange(query);\n    onRunQuery();\n  };\n\n  onBeaconTypeChange = (type: SelectableValue) => {\n    const { query, onChange, filterMetricsOnType } = this.props;\n    query.entityType = type;\n    onChange(query);\n    filterMetricsOnType(query.entityType.key);\n  };\n\n  onGroupChange = (group: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.group = group;\n\n    if (query.group && query.metricCategory.key === ANALYZE_WEBSITE_METRICS) {\n      query.showGroupBySecondLevel = query.group.type === 'KEY_VALUE_PAIR';\n    }\n    if (!query.showGroupBySecondLevel) {\n      query.groupbyTagSecondLevelKey = '';\n    }\n\n    onChange(query);\n    onRunQuery();\n  };\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onGroupByTagSecondLevelKeyChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.groupbyTagSecondLevelKey = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  render() {\n    const { query, groups } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSelect\n          queryKeyword\n          inputWidth={0}\n          label={'Website'}\n          tooltip={'Select your website.'}\n          noOptionsMessage={'No websites found'}\n          value={query.entity}\n          options={this.state.websites}\n          onChange={this.onWebsiteChange}\n        />\n\n        <FormSelect\n          queryKeyword\n          labelWidth={6}\n          label={'Type'}\n          tooltip={'Select a beacon type.'}\n          value={query.entityType}\n          options={beacon_types}\n          onChange={this.onBeaconTypeChange}\n        />\n\n        <FormSelect\n          queryKeyword\n          labelWidth={6}\n          label={'Group by'}\n          tooltip={'Group by tag.'}\n          value={query.group}\n          options={groups}\n          onChange={this.onGroupChange}\n        />\n\n        <div style={!query.showGroupBySecondLevel ? { display: 'none' } : {}}>\n          <Input css={''} value={query.groupbyTagSecondLevelKey} onChange={this.onGroupByTagSecondLevelKeyChange} />\n        </div>\n      </div>\n    );\n  }\n}\n","export default [\n  // STRING\n  { key: 'EQUALS', label: 'equals', type: 'STRING' },\n  { key: 'NOT_EQUAL', label: 'does not equal', type: 'STRING' },\n  { key: 'CONTAINS', label: 'contains', type: 'STRING' },\n  { key: 'NOT_CONTAIN', label: 'does not contain', type: 'STRING' },\n  { key: 'NOT_EMPTY', label: 'is present', type: 'STRING' },\n  { key: 'IS_EMPTY', label: 'is not present', type: 'STRING' },\n  // NUMBER\n  { key: 'EQUALS', label: '=', type: 'NUMBER' },\n  { key: 'NOT_EQUAL', label: '!=', type: 'NUMBER' },\n  { key: 'LESS_THAN', label: '<', type: 'NUMBER' },\n  { key: 'GREATER_THAN', label: '>', type: 'NUMBER' },\n  { key: 'IS_EMPTY', label: 'is empty', type: 'NUMBER' },\n  // BOOLEAN\n  { key: 'EQUALS', label: 'is', type: 'BOOLEAN' },\n  // KEY_VALUE_PAIR\n  { key: 'EQUALS', label: 'equals', type: 'KEY_VALUE_PAIR' },\n  { key: 'NOT_EQUAL', label: 'does not equal', type: 'KEY_VALUE_PAIR' },\n  { key: 'CONTAINS', label: 'contains', type: 'KEY_VALUE_PAIR' },\n  { key: 'NOT_CONTAIN', label: 'does not contain', type: 'KEY_VALUE_PAIR' },\n  { key: 'NOT_EMPTY', label: 'is present', type: 'KEY_VALUE_PAIR' },\n  { key: 'IS_EMPTY', label: 'is not present', type: 'KEY_VALUE_PAIR' },\n  // STRING_SET\n  { key: 'EQUALS', label: 'equals', type: 'STRING_SET' },\n  { key: 'NOT_EQUAL', label: 'does not equal', type: 'STRING_SET' },\n  { key: 'CONTAINS', label: 'contains', type: 'STRING_SET' },\n  { key: 'NOT_CONTAIN', label: 'does not contain', type: 'STRING_SET' },\n  { key: 'NOT_EMPTY', label: 'is present', type: 'STRING_SET' },\n  { key: 'IS_EMPTY', label: 'is not present', type: 'STRING_SET' },\n];\n","import React, { FormEvent } from 'react';\n\nimport { ANALYZE_APPLICATION_METRICS, PLEASE_SPECIFY } from '../../GlobalVariables';\nimport { Button, InlineFormLabel, Input, Select } from '@grafana/ui';\nimport call_to_entities from '../../lists/apply_call_to_entities';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { SelectableValue } from '@grafana/data';\nimport TagFilter from '../../types/tag_filter';\nimport operators from '../../lists/operators';\nimport Entity from '../Entity/Entity';\nimport _ from 'lodash';\n\ninterface FilterState {}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  groups: SelectableValue[];\n\n  onRunQuery(): void;\n\n  onChange(value: InstanaQuery): void;\n}\n\nexport class Filters extends React.Component<Props, FilterState> {\n  OPERATOR_STRING = 'STRING';\n  OPERATOR_STRING_SET = 'STRING_SET';\n  OPERATOR_NUMBER = 'NUMBER';\n  OPERATOR_BOOLEAN = 'BOOLEAN';\n  OPERATOR_KEY_VALUE = 'KEY_VALUE_PAIR';\n\n  constructor(props: any) {\n    super(props);\n  }\n\n  addTagFilter = () => {\n    const { query, onChange } = this.props;\n    query.filters.push({\n      tag: query.group,\n      entity: call_to_entities[0],\n      operator: this.filterOperatorsOnType(query.group.type)[0],\n      booleanValue: false,\n      numberValue: 0,\n      stringValue: '',\n      isValid: false,\n    });\n\n    onChange(query);\n  };\n\n  removeTagFilter = (index: number) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.filters.splice(index, 1);\n\n    onChange(query);\n    onRunQuery();\n  };\n\n  filterOperatorsOnType(type: any): SelectableValue[] {\n    return _.filter(operators, (o) => o.type === type);\n  }\n\n  onGroupChange(group: SelectableValue, index: number) {\n    const { query } = this.props;\n    query.filters[index].tag = group;\n\n    let ops = this.filterOperatorsOnType(group.type);\n    if (!_.includes(ops, query.filters[index].operator)) {\n      query.filters[index].operator = ops[0];\n    }\n\n    this.validateChangeAndRun(index);\n  }\n\n  onCallToEntityChange = (callToEntity: string, index: number) => {\n    const { query } = this.props;\n    query.filters[index].entity = callToEntity;\n\n    this.validateChangeAndRun(index);\n  };\n\n  onOperatorChange = (operator: SelectableValue, index: number) => {\n    const { query } = this.props;\n    query.filters[index].operator = operator;\n\n    this.validateChangeAndRun(index);\n  };\n\n  canShowStringInput(filter: TagFilter) {\n    return (\n      filter.tag.type === this.OPERATOR_KEY_VALUE ||\n      (!filter.operator.key.includes('EMPTY') &&\n        (filter.tag.type === this.OPERATOR_STRING || filter.tag.type === this.OPERATOR_STRING_SET))\n    );\n  }\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onTagFilterStringValueChange = (value: FormEvent<HTMLInputElement>, index: number) => {\n    const { query } = this.props;\n    query.filters[index].stringValue = value.currentTarget.value;\n\n    this.validateChangeAndRun(index, true);\n  };\n\n  onTagFilterNumberValueChange = (value: FormEvent<HTMLInputElement>, index: number) => {\n    const { query } = this.props;\n    query.filters[index].numberValue = value.currentTarget.valueAsNumber;\n\n    this.validateChangeAndRun(index, true);\n  };\n\n  onTagFilterBooleanValueChange(value: SelectableValue, index: number) {\n    const { query } = this.props;\n    query.filters[index].booleanValue = value.key;\n\n    this.validateChangeAndRun(index);\n  }\n\n  validateChangeAndRun(index: number, runDebounced = false) {\n    const { query, onChange, onRunQuery } = this.props;\n    if (query.filters[index].tag) {\n      if (\n        query.filters[index].operator.key.includes('EMPTY') &&\n        (this.OPERATOR_STRING === query.filters[index].tag.type ||\n          this.OPERATOR_STRING_SET === query.filters[index].tag.type)\n      ) {\n        query.filters[index].isValid = true;\n        // to avoid sending value with query.filters[index] operators that do not require a value (such as is-present/is-not-present)\n        query.filters[index].stringValue = '';\n        query.filters[index].numberValue = 0;\n        query.filters[index].booleanValue = true;\n      } else if (\n        (this.OPERATOR_STRING === query.filters[index].tag.type ||\n          this.OPERATOR_STRING_SET === query.filters[index].tag.type) &&\n        query.filters[index].stringValue\n      ) {\n        query.filters[index].isValid = true;\n      } else if (\n        this.OPERATOR_KEY_VALUE === query.filters[index].tag.type &&\n        query.filters[index].stringValue &&\n        query.filters[index].stringValue.includes('=')\n      ) {\n        query.filters[index].isValid = true;\n      } else if (this.OPERATOR_NUMBER === query.filters[index].tag.type && query.filters[index].numberValue !== null) {\n        query.filters[index].isValid = true;\n      } else {\n        query.filters[index].isValid =\n          this.OPERATOR_BOOLEAN === query.filters[index].tag.type && query.filters[index].booleanValue;\n      }\n    } else {\n      query.filters[index].isValid = false;\n    }\n\n    onChange(query);\n    if (runDebounced) {\n      // onRunQuery with 500ms delay after last debounce\n      this.debouncedRunQuery();\n    } else {\n      onRunQuery();\n    }\n  }\n\n  render() {\n    const { query, groups } = this.props;\n\n    let listFilter = query.filters.map((singleFilter, index) => {\n      return (\n        <div className={'gf-form'}>\n          <InlineFormLabel className={'query-keyword'} width={14} tooltip={'Filter by tag.'}>\n            {index + 1}. filter\n          </InlineFormLabel>\n          {query.metricCategory.key === ANALYZE_APPLICATION_METRICS && (\n            <Entity\n              value={query.filters[index].entity}\n              onChange={(callToEntity: string) => this.onCallToEntityChange(callToEntity, index)}\n            />\n          )}\n          <Select\n            menuPlacement={'bottom'}\n            width={30}\n            isSearchable={true}\n            value={query.filters[index].tag}\n            options={groups}\n            onChange={(group) => this.onGroupChange(group, index)}\n          />\n          <Select\n            menuPlacement={'bottom'}\n            width={12}\n            isSearchable={true}\n            value={query.filters[index].operator}\n            options={this.filterOperatorsOnType(query.filters[index].tag.type)}\n            onChange={(operator) => this.onOperatorChange(operator, index)}\n          />\n\n          {this.canShowStringInput(query.filters[index]) && (\n            <Input\n              css={''}\n              width={30}\n              value={query.filters[index].stringValue}\n              placeholder={query.filters[index].tag.type === 'KEY_VALUE_PAIR' ? 'key=value' : PLEASE_SPECIFY}\n              onChange={(event) => this.onTagFilterStringValueChange(event, index)}\n            />\n          )}\n\n          {query.filters[index].tag.type === 'NUMBER' && (\n            <Input\n              css={''}\n              type={'number'}\n              width={30}\n              value={query.filters[index].numberValue}\n              placeholder={PLEASE_SPECIFY}\n              onChange={(event) => this.onTagFilterNumberValueChange(event, index)}\n            />\n          )}\n\n          {query.filters[index].tag.type === 'BOOLEAN' && (\n            <Select\n              menuPlacement={'bottom'}\n              width={30}\n              isSearchable={true}\n              onChange={(e) => this.onTagFilterBooleanValueChange(e, index)}\n              value={{ key: '' + query.filters[index].booleanValue, label: '' + query.filters[index].booleanValue }}\n              options={[\n                { key: 'false', label: 'false' },\n                { key: 'true', label: 'true' },\n              ]}\n            />\n          )}\n\n          <Button variant={'secondary'} onClick={() => this.removeTagFilter(index)}>\n            -\n          </Button>\n        </div>\n      );\n    });\n\n    return (\n      <div>\n        {listFilter}\n\n        <div className={'gf-form'}>\n          <InlineFormLabel width={14} tooltip={'Add an additional tag filter.'}>\n            Add filter\n          </InlineFormLabel>\n          <Button variant={'secondary'} onClick={this.addTagFilter}>\n            +\n          </Button>\n          <div hidden={!query.showWarningCantShowAllResults}>\n            <InlineFormLabel width={12} tooltip={'Add Filter to narrow down the data.'}>\n              ⚠️ Can't show all results\n            </InlineFormLabel>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { BUILT_IN_METRICS, CUSTOM_METRICS, ANALYZE_APPLICATION_METRICS } from '../../GlobalVariables';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport max_metrics from '../../lists/max_metrics';\nimport FormSelect from '../FormField/FormSelect';\nimport FormSwitch from '../FormField/FormSwitch';\nimport { SelectableValue } from '@grafana/data';\nimport _ from 'lodash';\n\ninterface MetricState {\n  possibleTimeIntervals: SelectableValue[];\n  possibleAggregations: SelectableValue[];\n}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  availableMetrics: SelectableValue[];\n\n  updateMetrics(metrics: SelectableValue[]): void;\n\n  onRunQuery(): void;\n\n  onChange(value: InstanaQuery): void;\n}\n\nexport default class Metric extends React.Component<Props, MetricState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      possibleTimeIntervals: [],\n      possibleAggregations: [],\n    };\n  }\n\n  componentDidMount() {\n    const { query, datasource, onChange } = this.props;\n\n    if (\n      !query.timeInterval ||\n      !query.timeInterval.key ||\n      !datasource.availableTimeIntervals.find((i) => i.key === query.timeInterval.key)\n    ) {\n      query.timeInterval = datasource.getDefaultTimeInterval(query);\n    }\n\n    onChange(query);\n  }\n\n  onMetricChange = (metric: SelectableValue) => {\n    const { query, onRunQuery, onChange } = this.props;\n    query.metric = metric;\n\n    if (query.metric && query.metric.key && !_.includes(query.metric.aggregations, query.aggregation)) {\n      query.aggregation = query.metric.aggregations[0];\n    }\n\n    if (query.displayMaxMetricValue && !this.canShowMaxMetricValue()) {\n      query.displayMaxMetricValue = false;\n    }\n\n    query.allMetrics = [];\n    query.showAllMetrics = false;\n\n    onChange(query);\n    onRunQuery();\n  };\n\n  canShowMaxMetricValue() {\n    const { query } = this.props;\n    return (\n      query.entityType &&\n      query.entityType.key === 'host' &&\n      query.metric &&\n      _.find(max_metrics, (m) => m.key === query.metric.key)\n    );\n  }\n\n  onTimeIntervalChange = (timeInterval: SelectableValue) => {\n    const { query, onRunQuery, onChange } = this.props;\n    query.timeInterval = timeInterval;\n    onChange(query);\n    onRunQuery();\n  };\n\n  onAggregationChange = (aggregation: SelectableValue) => {\n    const { query, onRunQuery, onChange } = this.props;\n    query.aggregation = aggregation;\n    onChange(query);\n    onRunQuery();\n  };\n\n  onShowMaxValueChange = (event?: React.SyntheticEvent<HTMLInputElement>) => {\n    const { query, onChange, onRunQuery } = this.props;\n    if (event && event.currentTarget) {\n      query.displayMaxMetricValue = event.currentTarget.checked;\n      onChange(query);\n      onRunQuery();\n    }\n  };\n\n  onShowAllMetricsChange = (event?: React.SyntheticEvent<HTMLInputElement>) => {\n    const { query, onChange, onRunQuery } = this.props;\n    if (event && event.currentTarget) {\n      query.showAllMetrics = event.currentTarget.checked;\n      if (query.showAllMetrics) {\n        query.metric = { key: null, label: `Displaying ${this.props.availableMetrics.length} metrics` };\n        query.allMetrics = this.props.availableMetrics;\n      }\n      onChange(query);\n      onRunQuery();\n    }\n  };\n\n  canShowAggregation() {\n    const { query } = this.props;\n    return query.metricCategory.key >= ANALYZE_APPLICATION_METRICS;\n  }\n\n  canSelectAggregation() {\n    const { query } = this.props;\n    return query.metric && query.metric.aggregations && query.metric.aggregations.length > 1;\n  }\n\n  render() {\n    const { query, datasource } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSelect\n          queryKeyword\n          disabled={query.useFreeTextMetrics}\n          inputWidth={0}\n          label={'Metric'}\n          tooltip={'Select the metric you wish to plot.'}\n          value={query.metric}\n          noOptionsMessage={'No metrics found'}\n          options={this.props.availableMetrics}\n          onChange={this.onMetricChange}\n        />\n\n        {query.metricCategory.key === BUILT_IN_METRICS && (\n          <FormSwitch\n            queryKeyword\n            disabled={!this.canShowMaxMetricValue()}\n            labelWidth={9}\n            label={'Show max value'}\n            tooltip={\n              \"Displays the maximal value of current metric. Supported for 'Type=Host' with cpu.used, \" +\n              'memory.used and openFiles.used only.'\n            }\n            value={query.displayMaxMetricValue}\n            onChange={this.onShowMaxValueChange}\n          />\n        )}\n\n        {query.metricCategory.key === CUSTOM_METRICS && (\n          <FormSwitch\n            queryKeyword\n            disabled={!query.canShowAllMetrics}\n            labelWidth={9}\n            label={'Show all metrics'}\n            tooltip={\n              'You have the option to show all metrics in the graph once the amount of possible, selectable ' +\n              'metrics is between 1 and 5.'\n            }\n            value={query.showAllMetrics}\n            onChange={this.onShowAllMetricsChange}\n          />\n        )}\n\n        {this.canShowAggregation() && (\n          <FormSelect\n            queryKeyword\n            disabled={!this.canSelectAggregation()}\n            labelWidth={7}\n            inputWidth={12}\n            label={'Aggregation'}\n            tooltip={'Select a metric aggregation.'}\n            value={query.aggregation}\n            options={query.metric.aggregations}\n            onChange={this.onAggregationChange}\n          />\n        )}\n\n        <FormSelect\n          queryKeyword\n          disabled={datasource.availableTimeIntervals.length <= 1}\n          labelWidth={5}\n          inputWidth={12}\n          label={'Rollup'}\n          tooltip={'Select the rollup value.'}\n          value={query.timeInterval}\n          options={datasource.availableTimeIntervals}\n          onChange={this.onTimeIntervalChange}\n        />\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\n\nimport {\n  ANALYZE_APPLICATION_METRICS,\n  ANALYZE_WEBSITE_METRICS,\n  APPLICATION_SERVICE_ENDPOINT_METRICS,\n  BUILT_IN_METRICS,\n  CUSTOM_METRICS,\n  SLO_INFORMATION,\n} from '../GlobalVariables';\nimport { ApplicationServiceEndpointMetrics } from './ApplicationServiceEndpointMetrics/ApplicationServiceEndpointMetrics';\nimport { ApplicationCallsMetrics } from './Analyze/ApplicationCallsMetrics';\nimport { MetricFilter } from './Infrastructure/Custom/MetricFilter';\nimport AdvancedSettings from './AdvancedSettings/AdvancedSettings';\nimport { QueryEditorProps, SelectableValue } from '@grafana/data';\nimport { Infrastructure } from './Infrastructure/Infrastructure';\nimport { SloInformation } from './SLOInformation/SloInformation';\nimport AggregationFunctions from '../lists/aggregation_function';\nimport { InstanaOptions } from '../types/instana_options';\nimport MetricCategories from '../lists/metric_categories';\nimport { WebsiteMetrics } from './Analyze/WebsiteMetrics';\nimport { DataSource } from '../datasources/DataSource';\nimport { InstanaQuery } from '../types/instana_query';\nimport FormSelect from './FormField/FormSelect';\nimport { readTime } from '../util/time_util';\nimport { Filters } from './Analyze/Filter';\nimport Metric from './Metric/Metric';\nimport { Badge } from '@grafana/ui';\nimport migrate from '../migration';\nimport _ from 'lodash';\n\nimport '../instana-grafana.css';\n\ntype Props = QueryEditorProps<DataSource, InstanaQuery, InstanaOptions>;\n\ninterface QueryState {\n  groups: SelectableValue[];\n  queryTypes: SelectableValue[];\n  allMetrics: SelectableValue[];\n  availableMetrics: SelectableValue[];\n  selectedWindowSize: number;\n}\n\nexport class QueryEditor extends PureComponent<Props, QueryState> {\n  query: InstanaQuery;\n  snapshots: any;\n\n  constructor(props: Props) {\n    super(props);\n    const defaultQuery: Partial<InstanaQuery> = {\n      metricCategory: MetricCategories[0],\n      timeShiftIsValid: true,\n      customFilters: [],\n    };\n\n    this.query = Object.assign(defaultQuery, props.query);\n\n    migrate(this.query);\n\n    this.state = {\n      groups: [],\n      allMetrics: [],\n      queryTypes: [],\n      availableMetrics: [],\n      selectedWindowSize: this.props.range ? readTime(this.props.range).windowSize : 21600000,\n    };\n\n    this.filterMetricsOnType = this.filterMetricsOnType.bind(this);\n    this.loadEntityTypes = this.loadEntityTypes.bind(this);\n\n    this.props.onChange(this.query);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>, prevState: Readonly<QueryState>, snapshot?: any) {\n    const { onChange, range, datasource } = this.props;\n    if (range && this.state.selectedWindowSize !== readTime(range).windowSize) {\n      this.setState({\n        ...this.state,\n        selectedWindowSize: readTime(range).windowSize,\n      });\n      datasource.setPossibleTimeIntervals(this.query);\n      if (!datasource.availableTimeIntervals.find((i) => i.key === this.query.timeInterval.key)) {\n        this.query.timeInterval = datasource.getDefaultTimeInterval(this.query);\n        onChange(this.query);\n        // no need to execute onRunQuery() here because the change of time frame triggers\n        // datasource.query() anyways and datasource will take care of correcting the timeInterval\n      }\n    }\n  }\n\n  onCategoryChange = (newCategory: SelectableValue) => {\n    if (this.query.metricCategory === newCategory) {\n      // nothing needs to be done\n    } else {\n      this.selectionReset();\n      this.query.metricCategory = newCategory;\n      this.query.timeInterval = this.props.datasource.getDefaultTimeInterval(this.query);\n\n      this.changeAndRun();\n    }\n  };\n\n  changeAndRun = () => {\n    this.props.onChange(this.query);\n    this.props.onRunQuery();\n  };\n\n  setMetricPlaceholder(nrOfTotalResults: number) {\n    if (this.query.metricCategory.key === CUSTOM_METRICS) {\n      this.query.metric = {\n        key: null,\n        label: 'Please select (' + nrOfTotalResults + '/' + this.state.allMetrics.length + ')',\n      };\n    } else {\n      this.query.metric = {\n        key: null,\n        label: 'Please select (' + nrOfTotalResults + ')',\n      };\n    }\n\n    this.props.onChange(this.query);\n  }\n\n  updateMetrics = (metrics: SelectableValue[]) => {\n    this.setState({\n      availableMetrics: _.sortBy(metrics, 'key'),\n      allMetrics: _.sortBy(metrics, 'key'),\n    });\n\n    if ((this.query.metric && this.query.metric.key) || this.query.showAllMetrics) {\n      const metric = _.find(metrics, (m) => m.key === this.query.metric.key);\n      metric ? (this.query.metric = metric) : (this.query.metric = { key: null });\n    }\n\n    if (this.query.metricCategory.key === CUSTOM_METRICS) {\n      this.onMetricsFilter(this.query.customFilters); // this contains setMetricPlaceholder\n    } else if (!this.query.metric || !this.query.metric.key) {\n      this.setMetricPlaceholder(metrics.length);\n    }\n\n    this.changeAndRun();\n  };\n\n  loadEntityTypes(filterResult = true) {\n    const { query, datasource, onRunQuery } = this.props;\n\n    if (query.entityQuery) {\n      datasource.fetchTypesForTarget(query).then((response: any) => {\n        this.snapshots = response.data;\n        this.filterForEntityType(true, filterResult);\n        onRunQuery();\n      });\n    } else {\n      this.setState({ queryTypes: [] });\n    }\n  }\n\n  filterForEntityType = (findMatchingEntityTypes = true, filterResults = true) => {\n    const { query, datasource, onChange } = this.props;\n    datasource.getEntityTypes().then((entityTypes) => {\n      let queryTypes = entityTypes;\n      if (filterResults && !query.useFreeTextMetrics) {\n        queryTypes = this.filterEntityTypes(entityTypes, findMatchingEntityTypes);\n      }\n\n      this.setState({ queryTypes: queryTypes });\n\n      if (!query.entityType || !query.entityType.key || !_.find(queryTypes, (m) => m.key === query.entityType.key)) {\n        query.entityType = { key: null, label: 'Please select (' + queryTypes.length + ')' };\n      }\n\n      onChange(query);\n    });\n  };\n\n  filterEntityTypes = (entityTypes: SelectableValue[], findMatchingEntityTypes: boolean) => {\n    if (findMatchingEntityTypes) {\n      return _.sortBy(\n        _.filter(entityTypes, (entityType) => this.findMatchingEntityTypes(entityType)),\n        'label'\n      );\n    }\n\n    return _.sortBy(entityTypes, 'label');\n  };\n\n  findMatchingEntityTypes = (entityType: SelectableValue) => {\n    const { query } = this.props;\n    // workaround as long the api does not support returning plugins with custom metrics only\n    if (\n      query.metricCategory.key === BUILT_IN_METRICS ||\n      entityType.key === 'statsd' ||\n      entityType.key === 'prometheus' ||\n      entityType.key === 'jvmRuntimePlatform' ||\n      entityType.key === 'dropwizardApplicationContainer'\n    ) {\n      return this.snapshots.find((type: any) => type === entityType.key) && entityType.label != null;\n    }\n\n    return false;\n  };\n\n  updateQueryTypes = (types: SelectableValue[]) => {\n    this.setState({\n      queryTypes: types,\n    });\n  };\n\n  updateGroups = (groups: SelectableValue[]) => {\n    this.setState({\n      groups: groups,\n    });\n  };\n\n  onMetricsFilter = (customFilters: string[]) => {\n    let newAvailableMetrics: SelectableValue[] = [];\n    if (!customFilters || customFilters.length === 0) {\n      newAvailableMetrics = this.state.allMetrics;\n    } else {\n      newAvailableMetrics = this.applyFilterToMetricList(customFilters);\n    }\n    this.query.canShowAllMetrics = this.isAbleToShowAllMetrics(newAvailableMetrics);\n    if (!this.query.canShowAllMetrics) {\n      this.query.showAllMetrics = false;\n    }\n    this.query.customFilters = customFilters;\n    if (!this.query.metric || !this.query.metric.key) {\n      this.setMetricPlaceholder(newAvailableMetrics.length);\n    }\n\n    this.setState((state) => ({ ...state, availableMetrics: newAvailableMetrics }));\n\n    this.props.onChange(this.query);\n    this.checkMetricAndRefresh();\n  };\n\n  applyFilterToMetricList(filters: string[]) {\n    let filteredMetrics: any = this.state.allMetrics;\n    _.forEach(filters, (filter) => {\n      if (filter !== '') {\n        filteredMetrics = _.sortBy(\n          _.filter(filteredMetrics, (metric) => metric.key.toLowerCase().includes(filter.toLowerCase())),\n          'key'\n        );\n      }\n    });\n\n    return filteredMetrics;\n  }\n\n  filterMetricsOnType(type: string) {\n    let filteredMetrics: SelectableValue[] = this.state.allMetrics.filter((metric) => {\n      return metric.beaconTypes.includes(type);\n    });\n\n    this.setState({\n      availableMetrics: filteredMetrics,\n    });\n\n    if (!this.query.metric || !this.query.metric.key || !this.query.metric.beaconTypes.includes(type)) {\n      this.setMetricPlaceholder(filteredMetrics.length);\n    }\n\n    this.changeAndRun();\n  }\n\n  isAbleToShowAllMetrics(metrics: SelectableValue[]) {\n    return this.query.metricCategory.key === CUSTOM_METRICS && metrics.length > 0 && metrics.length <= 5;\n  }\n\n  checkMetricAndRefresh() {\n    if (\n      this.query.metric &&\n      this.query.metric.key &&\n      !_.includes(\n        _.map(this.state.availableMetrics, (m) => m.key),\n        this.query.metric.key\n      )\n    ) {\n      this.resetMetricSelection();\n    }\n\n    this.changeAndRun();\n  }\n\n  selectionReset() {\n    const { query } = this.props;\n    if (query.metricCategory.key > CUSTOM_METRICS) {\n      query.entityQuery = '';\n    }\n\n    this.setState({\n      availableMetrics: [],\n      allMetrics: [],\n      groups: [],\n    });\n\n    this.resetEntityTypeSelection();\n    this.resetEntitySelection();\n    this.resetMetricSelection();\n  }\n\n  resetEntityTypeSelection() {\n    const { query } = this.props;\n    query.entityType = {\n      key: null,\n      label: '-',\n    };\n    query.customFilters = [];\n  }\n\n  resetEntitySelection() {\n    const { query } = this.props;\n    query.entity = {};\n    query.group = {};\n    query.showGroupBySecondLevel = false;\n    query.groupbyTagSecondLevelKey = '';\n    query.aggregateGraphs = false;\n    query.aggregationFunction = AggregationFunctions[0];\n    query.hideOriginalGraphs = false;\n    query.filters = [];\n    query.showWarningCantShowAllResults = false;\n    query.showAllMetrics = false;\n    query.canShowAllMetrics = false;\n    query.displayMaxMetricValue = false;\n    query.applicationCallToEntity = '';\n    query.callToEntity = '';\n    this.resetServices();\n    this.resetEndpoints();\n    this.resetSLO();\n  }\n\n  resetMetricSelection() {\n    const { query } = this.props;\n    query.metric = {};\n    query.timeShift = '';\n    query.timeShiftIsValid = true;\n    query.showWarningCantShowAllResults = false;\n    query.showAllMetrics = false;\n    query.labelFormat = '';\n    query.freeTextMetrics = '';\n    query.useFreeTextMetrics = false;\n  }\n\n  resetServices() {\n    this.props.query.service = {};\n  }\n\n  resetEndpoints() {\n    this.props.query.endpoint = {};\n  }\n\n  resetSLO() {\n    const { query } = this.props;\n    query.sloValue = '';\n    query.sloReport = {};\n  }\n\n  render() {\n    const { query, onCategoryChange } = this;\n\n    return (\n      <div className={'gf-form-group'}>\n        <div className={'gf-form'}>\n          <FormSelect\n            queryKeyword\n            inputWidth={0}\n            label={'Category'}\n            tooltip={'Select a metric category.'}\n            value={query.metricCategory}\n            options={MetricCategories}\n            onChange={onCategoryChange}\n          />\n        </div>\n\n        {query.metricCategory.key === BUILT_IN_METRICS && (\n          <Infrastructure\n            query={query}\n            queryTypes={this.state.queryTypes}\n            datasource={this.props.datasource}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            loadEntityTypes={this.loadEntityTypes}\n            updateQueryTypes={this.updateQueryTypes}\n          />\n        )}\n\n        {query.metricCategory.key === CUSTOM_METRICS && (\n          <Infrastructure\n            query={query}\n            queryTypes={this.state.queryTypes}\n            datasource={this.props.datasource}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            loadEntityTypes={this.loadEntityTypes}\n            updateQueryTypes={this.updateQueryTypes}\n          />\n        )}\n\n        {query.metricCategory.key === ANALYZE_APPLICATION_METRICS && (\n          <ApplicationCallsMetrics\n            query={query}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            groups={this.state.groups}\n            updateGroups={this.updateGroups}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {query.metricCategory.key === ANALYZE_WEBSITE_METRICS && (\n          <WebsiteMetrics\n            query={query}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            groups={this.state.groups}\n            updateGroups={this.updateGroups}\n            filterMetricsOnType={this.filterMetricsOnType}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {query.metricCategory.key === APPLICATION_SERVICE_ENDPOINT_METRICS && (\n          <ApplicationServiceEndpointMetrics\n            query={query}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {query.metricCategory.key === SLO_INFORMATION && (\n          <SloInformation\n            query={query}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {query.metricCategory.key !== SLO_INFORMATION && (\n          <Metric\n            query={query}\n            onChange={this.props.onChange}\n            onRunQuery={this.props.onRunQuery}\n            updateMetrics={this.updateMetrics}\n            availableMetrics={this.state.availableMetrics}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {query.metricCategory.key === CUSTOM_METRICS && (\n          <MetricFilter\n            query={query}\n            onChange={this.props.onChange}\n            onRunQuery={this.props.onRunQuery}\n            onFilterChange={this.onMetricsFilter}\n            availableMetrics={this.state.availableMetrics}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {(query.metricCategory.key === ANALYZE_APPLICATION_METRICS ||\n          query.metricCategory.key === ANALYZE_WEBSITE_METRICS) && (\n          <Filters\n            query={query}\n            onChange={this.props.onChange}\n            onRunQuery={this.props.onRunQuery}\n            datasource={this.props.datasource}\n            groups={this.state.groups}\n          />\n        )}\n\n        <AdvancedSettings\n          query={query}\n          onRunQuery={this.props.onRunQuery}\n          onChange={this.props.onChange}\n          loadEntityTypes={this.loadEntityTypes}\n        />\n\n        <Badge text={'3.1.3'} color={'blue'} />\n      </div>\n    );\n  }\n}\n","import { InstanaOptions } from './types/instana_options';\nimport { DataSourcePlugin } from '@grafana/data';\nimport { DataSource } from './datasources/DataSource';\nimport { ConfigEditor } from './components/ConfigEditor';\nimport { QueryEditor } from './components/QueryEditor';\nimport { InstanaQuery } from './types/instana_query';\n\nexport const plugin = new DataSourcePlugin<DataSource, InstanaQuery, InstanaOptions>(DataSource)\n  .setConfigEditor(ConfigEditor)\n  .setQueryEditor(QueryEditor);\n"],"sourceRoot":""}