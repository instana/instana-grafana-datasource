{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./components/plugin.css","webpack:///./instana-grafana.css","webpack:///../node_modules/css-loader/dist/runtime/api.js","webpack:///../node_modules/style-loader/lib/addStyles.js","webpack:///../node_modules/style-loader/lib/urls.js","webpack:///../node_modules/tslib/tslib.es6.js","webpack:///./GlobalVariables.ts","webpack:///./cache.ts","webpack:///./components/AdvancedSettings/AdvancedSettings.tsx","webpack:///./components/AdvancedSettings/AggregateQuery.tsx","webpack:///./components/Analyze/ApplicationCallsMetrics.tsx","webpack:///./components/Analyze/Filter.tsx","webpack:///./components/Analyze/WebsiteMetrics.tsx","webpack:///./components/ApplicationServiceEndpointMetrics/ApplicationBoundaryScope.tsx","webpack:///./components/ApplicationServiceEndpointMetrics/ApplicationServiceEndpointMetrics.tsx","webpack:///./components/ConfigEditor.tsx","webpack:///./components/Entity/Entity.tsx","webpack:///./components/FormField/FormInput.tsx","webpack:///./components/FormField/FormSelect.tsx","webpack:///./components/FormField/FormSwitch.tsx","webpack:///./components/FormField/FormWrapper.tsx","webpack:///./components/Infrastructure/Custom/FreeTextMetrics.tsx","webpack:///./components/Infrastructure/Custom/MetricFilter.tsx","webpack:///./components/Infrastructure/Infrastructure.tsx","webpack:///./components/Infrastructure/QueryType.tsx","webpack:///./components/Metric/Metric.tsx","webpack:///./components/QueryEditor.tsx","webpack:///./components/SLOInformation/SloInformation.tsx","webpack:///./components/plugin.css?fa54","webpack:///./datasources/DataSource.ts","webpack:///./datasources/DataSource_Application.ts","webpack:///./datasources/DataSource_Endpoint.ts","webpack:///./datasources/DataSource_Service.ts","webpack:///./datasources/DataSource_Slo.ts","webpack:///./datasources/DataSource_Website.ts","webpack:///./datasources/Datasource_Infrastructure.ts","webpack:///./instana-grafana.css?07a9","webpack:///./lists/aggregation_function.ts","webpack:///./lists/apply_call_to_entities.ts","webpack:///./lists/beacon_types.ts","webpack:///./lists/default_metric_catalog.ts","webpack:///./lists/granularities.ts","webpack:///./lists/max_metrics.ts","webpack:///./lists/metric_categories.ts","webpack:///./lists/operators.ts","webpack:///./lists/rollups.ts","webpack:///./lists/slo_specifics.ts","webpack:///./migration.ts","webpack:///./module.ts","webpack:///./util/aggregation_util.ts","webpack:///./util/analyze_util.ts","webpack:///./util/delta_util.ts","webpack:///./util/instana_version.ts","webpack:///./util/proxy_check.ts","webpack:///./util/queryInterval_check.ts","webpack:///./util/request_handler.ts","webpack:///./util/rollup_granularity_util.ts","webpack:///./util/target_util.ts","webpack:///./util/time_util.ts","webpack:///external \"@grafana/data\"","webpack:///external \"@grafana/runtime\"","webpack:///external \"@grafana/ui\"","webpack:///external \"lodash\"","webpack:///external \"react\""],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA,kCAAkC,mBAAO,CAAC,yGAAmD;AAC7F;AACA;AACA,cAAc,QAAS,oBAAoB,oBAAoB,EAAE,SAAS,iEAAiE,wEAAwE,oBAAoB,EAAE,KAAK;AAC9O;AACA;;;;;;;;;;;;ACNA;AACA,kCAAkC,mBAAO,CAAC,sGAAgD;AAC1F;AACA;AACA,cAAc,QAAS,gJAAgJ,kBAAkB,EAAE,SAAS,0EAA0E,6MAA6M,kBAAkB,EAAE,KAAK;AACpf;AACA;;;;;;;;;;;;;ACNa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;;AAEA;AACA,4CAA4C,qBAAqB;AACjE;;AAEA;AACA,KAAK;AACL,IAAI;AACJ;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,qBAAqB,iBAAiB;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,qBAAqB;AACzC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8BAA8B;;AAE9B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,CAAC;;;AAGD;AACA;AACA;AACA,qDAAqD,cAAc;AACnE;AACA,C;;;;;;;;;;;AC7FA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,wDAAQ;;AAE9B;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,iBAAiB,mBAAmB;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA,mBAAmB,2BAA2B;;AAE9C;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,mBAAmB;AACnC;AACA;;AAEA;AACA;;AAEA,iBAAiB,2BAA2B;AAC5C;AACA;;AAEA,QAAQ,uBAAuB;AAC/B;AACA;AACA,GAAG;AACH;;AAEA,iBAAiB,uBAAuB;AACxC;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA;AACA,cAAc;;AAEd,kDAAkD,sBAAsB;AACxE;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA,KAAK,KAAwC,EAAE,EAE7C;;AAEF,QAAQ,sBAAiB;AACzB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD;AACvD;;AAEA,6BAA6B,mBAAmB;;AAEhD;;AAEA;;AAEA;AACA;;;;;;;;;;;;;AC9YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,WAAW,EAAE;AACrD,wCAAwC,WAAW,EAAE;;AAErD;AACA;AACA;AACA;;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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./module.ts\");\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \".entityDropdown {\\n  min-width: 80px; }\\n\", \"\",{\"version\":3,\"sources\":[\"plugin.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,eAAe,EAAE\",\"file\":\"plugin.css\",\"sourcesContent\":[\".entityDropdown {\\n  min-width: 80px; }\\n\"]}]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \"path[d=\\\"M18.71,7.21a1,1,0,0,0-1.42,0L9.84,14.67,6.71,11.53A1,1,0,1,0,5.29,13l3.84,3.84a1,1,0,0,0,1.42,0l8.16-8.16A1,1,0,0,0,18.71,7.21Z\\\"] {\\n  display: none; }\\n\", \"\",{\"version\":3,\"sources\":[\"instana-grafana.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,aAAa,EAAE\",\"file\":\"instana-grafana.css\",\"sourcesContent\":[\"path[d=\\\"M18.71,7.21a1,1,0,0,0-1.42,0L9.84,14.67,6.71,11.53A1,1,0,1,0,5.29,13l3.84,3.84a1,1,0,0,0,1.42,0l8.16-8.16A1,1,0,0,0,18.71,7.21Z\\\"] {\\n  display: none; }\\n\"]}]);\n// Exports\nmodule.exports = exports;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/* CONFIG */\nexport const PAGINATION_LIMIT = 15; // pagesize=200 => 3000 results in dropdown (~30sec.)\nexport const CACHE_MAX_AGE = 60000;\nexport const SEPARATOR = '|';\n\n/* CATEGORIES */\nexport const BUILT_IN_METRICS = 0;\nexport const CUSTOM_METRICS = 1;\nexport const ANALYZE_APPLICATION_METRICS = 2;\nexport const ANALYZE_WEBSITE_METRICS = 3;\nexport const APPLICATION_SERVICE_ENDPOINT_METRICS = 4; // replaces previous ->\n// APPLICATION_METRICS = '4';\n// SERVICE_METRICS = '5';\n// ENDPOINT_METRICS = '6';\nexport const SLO_INFORMATION = 7;\n\n/* DROPDOWN DEFAULTS */\nexport const ALL_APPLICATIONS = '-- No Application Filter --';\nexport const ALL_SERVICES = '-- No Service Filter --';\nexport const ALL_ENDPOINTS = '-- No Endpoint Filter --';\n\n/* PLACEHOLDER */\nexport const PLEASE_SPECIFY = 'Please specify';\n","export default class Cache<T> {\n  store: any;\n\n  constructor() {\n    this.store = {};\n  }\n\n  put(key: string, value: T, ttl = 70000): void {\n    if (key === undefined || value === undefined) {\n      return;\n    }\n\n    this.del(key);\n    this.store[key] = {\n      value,\n      expiry: Date.now() + ttl,\n      timeout: setTimeout(() => {\n        this.del(key);\n      }, ttl),\n    };\n  }\n\n  get(key: string): T {\n    var item = this.store[key];\n    if (item && !(item.expiry && item.expiry > Date.now())) {\n      this.del(key);\n      item = undefined;\n    }\n    return item && item.value;\n  }\n\n  del(key: string): void {\n    if (this.store.hasOwnProperty(key)) {\n      clearTimeout(this.store[key].timeout);\n      delete this.store[key];\n    }\n  }\n}\n","import React, { ChangeEvent, FormEvent } from 'react';\n\nimport { BUILT_IN_METRICS, CUSTOM_METRICS, SLO_INFORMATION } from '../../GlobalVariables';\nimport { FreeTextMetrics } from '../Infrastructure/Custom/FreeTextMetrics';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { AggregateQuery } from './AggregateQuery';\nimport FormSwitch from '../FormField/FormSwitch';\nimport FormInput from '../FormField/FormInput';\nimport _ from 'lodash';\n\nconst legendFormatPlaceholders = [\n  '$label (on host $host)',\n  '$label (on host $host)',\n  '$label ($application) - $key',\n  '$label ($website) - $key',\n  '$label ($application) - $key',\n  '',\n  '',\n  '',\n];\n\nconst legendFormatTooltips = [\n  <div>\n    Default: $label (on host $host)\n    <ul>\n      <li>• $label - entity label</li>\n      <li>• $host - corresponding host</li>\n      <li>• $pid - corresponding PID</li>\n      <li>• $timeShift - corresponding timeShift</li>\n      <li>• $metric - displayed metric</li>\n      <li>• $type - entity type</li>\n      <li>• $service - service label</li>\n      <li>• $name - label alternative</li>\n      <li>• $index - index in the list</li>\n    </ul>\n  </div>,\n  <div>\n    Default: $label (on host $host)\n    <ul>\n      <li>• $label - entity label</li>\n      <li>• $host - corresponding host</li>\n      <li>• $pid - corresponding PID</li>\n      <li>• $timeShift - corresponding timeShift</li>\n      <li>• $metric - displayed metric</li>\n      <li>• $type - entity type</li>\n      <li>• $service - service label</li>\n      <li>• $name - label alternative</li>\n      <li>• $index - index in the list</li>\n    </ul>\n  </div>,\n  <div>\n    Default: $label ($application) - $key\n    <ul>\n      <li>• $label - entity label</li>\n      <li>• $application - application label</li>\n      <li>• $timeShift - corresponding timeShift</li>\n      <li>• $metric - displayed metric</li>\n      <li>• $key - metric key with aggregation and rollup</li>\n      <li>• $index - index in the list</li>\n    </ul>\n  </div>,\n  <div>\n    Default: $label ($website) - $key\n    <ul>\n      <li>• $label - entity label</li>\n      <li>• $website - application label</li>\n      <li>• $type - entity type</li>\n      <li>• $timeShift - corresponding timeShift</li>\n      <li>• $metric - displayed metric</li>\n      <li>• $key - metric key with aggregation and rollup</li>\n      <li>• $index - index in the list</li>\n    </ul>\n  </div>,\n  <div>\n    Default: $label ($application) - $key\n    <ul>\n      <li>• $label - entity label</li>\n      <li>• $application - application label</li>\n      <li>• $service - service label</li>\n      <li>• $endpoint - endpoint label</li>\n      <li>• $timeShift - corresponding timeShift</li>\n      <li>• $metric - displayed metric</li>\n      <li>• $key - metric key with aggregation and rollup</li>\n      <li>• $index - index in the list</li>\n    </ul>\n  </div>,\n  '',\n  '',\n  '',\n];\n\ninterface AdvancedSettingsState {\n  legendFormatPlaceholder: string;\n}\n\ninterface Props {\n  query: InstanaQuery;\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n  loadEntityTypes(filterResult?: boolean): void;\n}\n\nexport default class AdvancedSettings extends React.Component<Props, AdvancedSettingsState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      legendFormatPlaceholder: this.setLegendFormatPlaceholder(),\n    };\n  }\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onLegendFormatChange = (eventItem: FormEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.labelFormat = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  onTimeShiftChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.timeShift = eventItem.currentTarget.value;\n\n    if (query.timeShift) {\n      query.timeShiftIsValid = query.timeShift.match(/\\d+[m,s,h,d,w]{1}/) ? true : false;\n    } else {\n      query.timeShiftIsValid = true;\n    }\n\n    onChange(query);\n\n    if (query.timeShiftIsValid) {\n      // onRunQuery with 500ms delay after last debounce\n      this.debouncedRunQuery();\n    }\n  };\n\n  setLegendFormatPlaceholder(): string {\n    const { query } = this.props;\n    return legendFormatPlaceholders[query.metricCategory.key];\n  }\n\n  setLegendFormatTooltip() {\n    const { query } = this.props;\n    return legendFormatTooltips[query.metricCategory.key];\n  }\n\n  onShowAdvancedSettingsChange = (event: React.SyntheticEvent<HTMLInputElement> | undefined) => {\n    if (event && event.currentTarget) {\n      const { query, onChange } = this.props;\n      query.showAdvancedSettings = event.currentTarget.checked;\n      onChange(query);\n    }\n  };\n\n  render() {\n    const { query, onRunQuery, onChange, loadEntityTypes } = this.props;\n\n    return (\n      <div>\n        <div className={'gf-form'}>\n          <FormSwitch\n            label={'Show advanced settings'}\n            tooltip={'Show all additional settings'}\n            value={query.showAdvancedSettings}\n            onChange={(e) => this.onShowAdvancedSettingsChange(e)}\n          />\n        </div>\n\n        <div hidden={!query.showAdvancedSettings}>\n          <div className={'gf-form'} hidden={query.metricCategory.key === SLO_INFORMATION}>\n            <FormInput\n              queryKeyword\n              inputWidth={0}\n              label={'Legend format'}\n              tooltip={this.setLegendFormatTooltip()}\n              value={query.labelFormat}\n              placeholder={this.setLegendFormatPlaceholder()}\n              onChange={(event) => this.onLegendFormatChange(event)}\n            />\n          </div>\n\n          <div className={'gf-form'}>\n            <FormInput\n              queryKeyword\n              inputWidth={0}\n              label={'Time shift'}\n              tooltip={\n                'Specify the amount of hours that shall be used. The time shift function always go back in time, ' +\n                'not forward. Accepts values such as 1s, 1m, 1h, 1d, 1w.'\n              }\n              value={query.timeShift}\n              invalid={!query.timeShiftIsValid}\n              placeholder={'1h'}\n              onChange={(event) => this.onTimeShiftChange(event)}\n            />\n          </div>\n\n          <div hidden={query.metricCategory.key !== CUSTOM_METRICS}>\n            <FreeTextMetrics\n              query={query}\n              onRunQuery={onRunQuery}\n              onChange={onChange}\n              loadEntityTypes={loadEntityTypes}\n            />\n          </div>\n\n          <div hidden={query.metricCategory.key !== BUILT_IN_METRICS && query.metricCategory.key !== CUSTOM_METRICS}>\n            <AggregateQuery query={query} onRunQuery={onRunQuery} onChange={onChange} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport AggregationFunctions from '../../lists/aggregation_function';\nimport { InstanaQuery } from '../../types/instana_query';\nimport FormSwitch from '../FormField/FormSwitch';\nimport { SelectableValue } from '@grafana/data';\nimport { Select } from '@grafana/ui';\n\ninterface AggregateQueryState {}\n\ninterface Props {\n  query: InstanaQuery;\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n}\n\nexport class AggregateQuery extends React.Component<Props, AggregateQueryState> {\n  constructor(props: any) {\n    super(props);\n    this.state = { showAdditionalSettings: false, legendFormat: '' };\n    const { query } = this.props;\n    if (!query.aggregationFunction) {\n      query.aggregationFunction = AggregationFunctions[0];\n    }\n  }\n\n  onAggregateGraphs = (event: React.SyntheticEvent<HTMLInputElement> | undefined) => {\n    const { query, onRunQuery } = this.props;\n    if (event && event.currentTarget) {\n      query.aggregateGraphs = event.currentTarget.checked;\n      onRunQuery();\n    }\n  };\n\n  onHideOriginalGraph = (event: React.SyntheticEvent<HTMLInputElement> | undefined) => {\n    const { query, onRunQuery } = this.props;\n    if (event && event.currentTarget) {\n      query.hideOriginalGraphs = event.currentTarget.checked;\n      onRunQuery();\n    }\n  };\n\n  onAggregationFunctionChange = (event: SelectableValue) => {\n    const { query, onRunQuery } = this.props;\n    query.aggregationFunction = event;\n    onRunQuery();\n  };\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSwitch\n          queryKeyword\n          label={'Aggregate query graphs'}\n          tooltip={'Aggregate all graphs of a query.'}\n          value={query.aggregateGraphs}\n          onChange={this.onAggregateGraphs}\n        />\n\n        <Select\n          menuPlacement={'bottom'}\n          width={12}\n          isSearchable={true}\n          options={AggregationFunctions}\n          value={query.aggregationFunction}\n          disabled={!query.aggregateGraphs}\n          onChange={this.onAggregationFunctionChange}\n        />\n\n        <FormSwitch\n          queryKeyword\n          disabled={!query.aggregateGraphs}\n          labelWidth={10}\n          label={'Hide original graphs'}\n          tooltip={'Removes the original graphs resulted from the query and only shows the aggregated graph.'}\n          value={query.hideOriginalGraphs}\n          onChange={this.onHideOriginalGraph}\n        />\n      </div>\n    );\n  }\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { ALL_APPLICATIONS, ANALYZE_APPLICATION_METRICS } from '../../GlobalVariables';\nimport call_to_entities from '../../lists/apply_call_to_entities';\nimport { Input, Select, InlineFormLabel } from '@grafana/ui';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport FormWrapper from '../FormField/FormWrapper';\nimport { SelectableValue } from '@grafana/data';\nimport Entity from '../Entity/Entity';\nimport _ from 'lodash';\nimport '../plugin.css';\n\ninterface ApplicationCallsMetricsState {\n  applications: SelectableValue[];\n}\n\ninterface Props {\n  query: InstanaQuery;\n\n  groups: SelectableValue[];\n\n  updateGroups(groups: SelectableValue[]): void;\n\n  onRunQuery(): void;\n\n  onChange(value: InstanaQuery): void;\n\n  updateMetrics(metrics: SelectableValue[]): void;\n\n  datasource: DataSource;\n}\n\nlet isUnmounting = false;\n\nexport class ApplicationCallsMetrics extends React.Component<Props, ApplicationCallsMetricsState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      applications: [],\n    };\n  }\n\n  componentDidMount() {\n    const { query, datasource, onChange } = this.props;\n    isUnmounting = false;\n    datasource.fetchApplications().then((applications) => {\n      if (!isUnmounting) {\n        if (!_.find(applications, { key: null })) {\n          applications.unshift({ key: null, label: ALL_APPLICATIONS });\n        }\n\n        this.setState({\n          applications: applications,\n        });\n\n        if (!query.entity || (!query.entity.key && !query.entity.label)) {\n          query.entity = applications[0];\n        }\n\n        if (!query.callToEntity) {\n          query.callToEntity = call_to_entities[0];\n        }\n        if (!query.applicationCallToEntity) {\n          query.applicationCallToEntity = call_to_entities[0];\n        }\n\n        onChange(query);\n      }\n    });\n\n    datasource.dataSourceApplication.getApplicationTags().then((applicationTags: any) => {\n      if (!isUnmounting) {\n        this.props.updateGroups(_.sortBy(applicationTags, 'key'));\n\n        // select a meaningful default group\n        if (!query.group || !query.group.key) {\n          query.group = _.find(applicationTags, ['key', 'endpoint.name']);\n          onChange(query);\n        }\n      }\n    });\n\n    this.props.updateMetrics(datasource.dataSourceApplication.getApplicationMetricsCatalog());\n  }\n\n  componentWillUnmount() {\n    isUnmounting = true;\n  }\n\n  onApplicationChange = (application: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.entity = application;\n    onChange(query);\n    onRunQuery();\n  };\n\n  onGroupChange = (group: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.group = group;\n\n    if (query.group && query.metricCategory.key === ANALYZE_APPLICATION_METRICS) {\n      query.showGroupBySecondLevel = query.group.type === 'KEY_VALUE_PAIR';\n    }\n\n    if (!query.showGroupBySecondLevel) {\n      query.groupbyTagSecondLevelKey = '';\n    }\n\n    onChange(query);\n    onRunQuery();\n  };\n\n  onApplicationCallToEntityChange = (applicationCallToEntity: string) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.applicationCallToEntity = applicationCallToEntity;\n    onChange(query);\n    onRunQuery();\n  };\n\n  onCallToEntityChange = (callToEntity: string) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.callToEntity = callToEntity;\n    onChange(query);\n    onRunQuery();\n  };\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onGroupByTagSecondLevelKeyChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.groupbyTagSecondLevelKey = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  render() {\n    const { query, groups } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormWrapper stretch={true}>\n          <InlineFormLabel className={'query-keyword'} width={14} tooltip={'Select your application.'}>\n            Application\n          </InlineFormLabel>\n          <Entity value={query.applicationCallToEntity} onChange={this.onApplicationCallToEntityChange} />\n          <Select\n            menuPlacement={'bottom'}\n            width={0}\n            isSearchable={true}\n            value={query.entity}\n            options={this.state.applications}\n            onChange={this.onApplicationChange}\n          />\n        </FormWrapper>\n\n        <FormWrapper stretch={true}>\n          <InlineFormLabel className={'query-keyword'} width={7} tooltip={'Group by tag.'}>\n            Group by\n          </InlineFormLabel>\n          <Entity value={query.callToEntity} onChange={this.onCallToEntityChange} />\n          <Select\n            menuPlacement={'bottom'}\n            width={0}\n            isSearchable={true}\n            options={groups}\n            value={query.group}\n            onChange={this.onGroupChange}\n          />\n        </FormWrapper>\n\n        <div style={!query.showGroupBySecondLevel ? { display: 'none' } : {}}>\n          <Input\n            css={''}\n            type={'text'}\n            value={query.groupbyTagSecondLevelKey}\n            onChange={this.onGroupByTagSecondLevelKeyChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { FormEvent } from 'react';\n\nimport { ANALYZE_APPLICATION_METRICS, PLEASE_SPECIFY } from '../../GlobalVariables';\nimport { Button, InlineFormLabel, Input, Select } from '@grafana/ui';\nimport call_to_entities from '../../lists/apply_call_to_entities';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { SelectableValue } from '@grafana/data';\nimport TagFilter from '../../types/tag_filter';\nimport operators from '../../lists/operators';\nimport Entity from '../Entity/Entity';\nimport _ from 'lodash';\n\ninterface FilterState {}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  groups: SelectableValue[];\n\n  onRunQuery(): void;\n\n  onChange(value: InstanaQuery): void;\n}\n\nexport class Filters extends React.Component<Props, FilterState> {\n  OPERATOR_STRING = 'STRING';\n  OPERATOR_NUMBER = 'NUMBER';\n  OPERATOR_BOOLEAN = 'BOOLEAN';\n  OPERATOR_KEY_VALUE = 'KEY_VALUE_PAIR';\n\n  constructor(props: any) {\n    super(props);\n  }\n\n  addTagFilter = () => {\n    const { query, onChange } = this.props;\n    query.filters.push({\n      tag: query.group,\n      entity: call_to_entities[0],\n      operator: this.filterOperatorsOnType(query.group.type)[0],\n      booleanValue: false,\n      numberValue: 0,\n      stringValue: '',\n      isValid: false,\n    });\n\n    onChange(query);\n  };\n\n  removeTagFilter = (index: number) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.filters.splice(index, 1);\n\n    onChange(query);\n    onRunQuery();\n  };\n\n  filterOperatorsOnType(type: any): SelectableValue[] {\n    return _.filter(operators, (o) => o.type === type);\n  }\n\n  onGroupChange(group: SelectableValue, index: number) {\n    const { query } = this.props;\n    query.filters[index].tag = group;\n\n    let ops = this.filterOperatorsOnType(group.type);\n    if (!_.includes(ops, query.filters[index].operator)) {\n      query.filters[index].operator = ops[0];\n    }\n\n    this.validateChangeAndRun(index);\n  }\n\n  onCallToEntityChange = (callToEntity: string, index: number) => {\n    const { query } = this.props;\n    query.filters[index].entity = callToEntity;\n\n    this.validateChangeAndRun(index);\n  };\n\n  onOperatorChange = (operator: SelectableValue, index: number) => {\n    const { query } = this.props;\n    query.filters[index].operator = operator;\n\n    this.validateChangeAndRun(index);\n  };\n\n  canShowStringInput(filter: TagFilter) {\n    return (\n      !filter.operator.key.includes('EMPTY') && (filter.tag.type === 'STRING' || filter.tag.type === 'KEY_VALUE_PAIR')\n    );\n  }\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onTagFilterStringValueChange = (value: FormEvent<HTMLInputElement>, index: number) => {\n    const { query } = this.props;\n    query.filters[index].stringValue = value.currentTarget.value;\n\n    this.validateChangeAndRun(index, true);\n  };\n\n  onTagFilterNumberValueChange = (value: FormEvent<HTMLInputElement>, index: number) => {\n    const { query } = this.props;\n    query.filters[index].numberValue = value.currentTarget.valueAsNumber;\n\n    this.validateChangeAndRun(index, true);\n  };\n\n  onTagFilterBooleanValueChange(value: SelectableValue, index: number) {\n    const { query } = this.props;\n    query.filters[index].booleanValue = value.key;\n\n    this.validateChangeAndRun(index);\n  }\n\n  validateChangeAndRun(index: number, runDebounced = false) {\n    const { query, onChange, onRunQuery } = this.props;\n    if (query.filters[index].tag) {\n      if (query.filters[index].operator.key.includes('EMPTY')) {\n        query.filters[index].isValid = true;\n        // to avoid sending value with query.filters[index] operators that do not require a value (such as is-present/is-not-present)\n        query.filters[index].stringValue = '';\n        query.filters[index].numberValue = 0;\n        query.filters[index].booleanValue = true;\n      } else if (this.OPERATOR_STRING === query.filters[index].tag.type && query.filters[index].stringValue) {\n        query.filters[index].isValid = true;\n      } else if (\n        this.OPERATOR_KEY_VALUE === query.filters[index].tag.type &&\n        query.filters[index].stringValue &&\n        query.filters[index].stringValue.includes('=')\n      ) {\n        query.filters[index].isValid = true;\n      } else if (this.OPERATOR_NUMBER === query.filters[index].tag.type && query.filters[index].numberValue !== null) {\n        query.filters[index].isValid = true;\n      } else {\n        query.filters[index].isValid =\n          this.OPERATOR_BOOLEAN === query.filters[index].tag.type && query.filters[index].booleanValue;\n      }\n    } else {\n      query.filters[index].isValid = false;\n    }\n\n    onChange(query);\n    if (runDebounced) {\n      // onRunQuery with 500ms delay after last debounce\n      this.debouncedRunQuery();\n    } else {\n      onRunQuery();\n    }\n  }\n\n  render() {\n    const { query, groups } = this.props;\n\n    let listFilter = query.filters.map((singleFilter, index) => {\n      return (\n        <div className={'gf-form'}>\n          <InlineFormLabel className={'query-keyword'} width={14} tooltip={'Filter by tag.'}>\n            {index + 1}. filter\n          </InlineFormLabel>\n          {query.metricCategory.key === ANALYZE_APPLICATION_METRICS && (\n            <Entity\n              value={query.filters[index].entity}\n              onChange={(callToEntity: string) => this.onCallToEntityChange(callToEntity, index)}\n            />\n          )}\n          <Select\n            menuPlacement={'bottom'}\n            width={30}\n            isSearchable={true}\n            value={query.filters[index].tag}\n            options={groups}\n            onChange={(group) => this.onGroupChange(group, index)}\n          />\n          <Select\n            menuPlacement={'bottom'}\n            width={12}\n            isSearchable={true}\n            value={query.filters[index].operator}\n            options={this.filterOperatorsOnType(query.filters[index].tag.type)}\n            onChange={(operator) => this.onOperatorChange(operator, index)}\n          />\n\n          {this.canShowStringInput(query.filters[index]) && (\n            <Input\n              css={''}\n              width={30}\n              value={query.filters[index].stringValue}\n              placeholder={query.filters[index].tag.type === 'KEY_VALUE_PAIR' ? 'key=value' : PLEASE_SPECIFY}\n              onChange={(event) => this.onTagFilterStringValueChange(event, index)}\n            />\n          )}\n\n          {query.filters[index].tag.type === 'NUMBER' && (\n            <Input\n              css={''}\n              type={'number'}\n              width={30}\n              value={query.filters[index].numberValue}\n              placeholder={PLEASE_SPECIFY}\n              onChange={(event) => this.onTagFilterNumberValueChange(event, index)}\n            />\n          )}\n\n          {query.filters[index].tag.type === 'BOOLEAN' && (\n            <Select\n              menuPlacement={'bottom'}\n              width={30}\n              isSearchable={true}\n              onChange={(e) => this.onTagFilterBooleanValueChange(e, index)}\n              value={{ key: '' + query.filters[index].booleanValue, label: '' + query.filters[index].booleanValue }}\n              options={[\n                { key: 'false', label: 'false' },\n                { key: 'true', label: 'true' },\n              ]}\n            />\n          )}\n\n          <Button variant={'secondary'} onClick={() => this.removeTagFilter(index)}>\n            -\n          </Button>\n        </div>\n      );\n    });\n\n    return (\n      <div>\n        {listFilter}\n\n        <div className={'gf-form'}>\n          <InlineFormLabel width={14} tooltip={'Add an additional tag filter.'}>\n            Add filter\n          </InlineFormLabel>\n          <Button variant={'secondary'} onClick={this.addTagFilter}>\n            +\n          </Button>\n          <div hidden={!query.showWarningCantShowAllResults}>\n            <InlineFormLabel width={12} tooltip={'Add Filter to narrow down the data.'}>\n              ⚠️ Can't show all results\n            </InlineFormLabel>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { ANALYZE_WEBSITE_METRICS } from '../../GlobalVariables';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport beacon_types from '../../lists/beacon_types';\nimport FormSelect from '../FormField/FormSelect';\nimport { SelectableValue } from '@grafana/data';\nimport { Input } from '@grafana/ui';\nimport _ from 'lodash';\n\ninterface WebsiteMetricsState {\n  websites: SelectableValue[];\n}\n\ninterface Props {\n  query: InstanaQuery;\n  groups: SelectableValue[];\n  datasource: DataSource;\n\n  updateGroups(groups: SelectableValue[]): void;\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n  updateMetrics(metrics: SelectableValue[]): void;\n  filterMetricsOnType(type: string): any;\n}\n\nlet isUnmounting = false;\n\nexport class WebsiteMetrics extends React.Component<Props, WebsiteMetricsState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      websites: [],\n    };\n  }\n\n  componentDidMount() {\n    const { query, datasource, onChange } = this.props;\n    isUnmounting = false;\n    datasource.fetchWebsites().then((websites) => {\n      if (!isUnmounting) {\n        this.setState({\n          websites: websites,\n        });\n\n        // select the most loaded website for default/replacement\n        if ((!query.entity || !query.entity.key) && websites) {\n          query.entity = websites[0];\n        } else if (query.entity && !_.find(websites, ['key', query.entity.key])) {\n          query.entity = websites[0];\n        }\n\n        onChange(query);\n      }\n    });\n\n    datasource.dataSourceWebsite.getWebsiteTags().then((websiteTags: any) => {\n      if (!isUnmounting) {\n        this.props.updateGroups(_.sortBy(websiteTags, 'key'));\n\n        // select a meaningful default group\n        if (!query.group || !query.group.key) {\n          query.group = _.find(websiteTags, ['key', 'beacon.page.name']);\n          onChange(query);\n        }\n      }\n    });\n\n    if (!query.entityType || !query.entityType.key) {\n      query.entityType = beacon_types[0];\n      onChange(query);\n    }\n\n    datasource.dataSourceWebsite.getWebsiteMetricsCatalog().then((websiteMetrics: any) => {\n      if (!isUnmounting) {\n        this.props.updateMetrics(_.filter(websiteMetrics, (m) => m.beaconTypes.includes(query.entityType.key)));\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    isUnmounting = true;\n  }\n\n  onWebsiteChange = (website: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.entity = website;\n    onChange(query);\n    onRunQuery();\n  };\n\n  onBeaconTypeChange = (type: SelectableValue) => {\n    const { query, onChange, filterMetricsOnType } = this.props;\n    query.entityType = type;\n    onChange(query);\n    filterMetricsOnType(query.entityType.key);\n  };\n\n  onGroupChange = (group: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.group = group;\n\n    if (query.group && query.metricCategory.key === ANALYZE_WEBSITE_METRICS) {\n      query.showGroupBySecondLevel = query.group.type === 'KEY_VALUE_PAIR';\n    }\n    if (!query.showGroupBySecondLevel) {\n      query.groupbyTagSecondLevelKey = '';\n    }\n\n    onChange(query);\n    onRunQuery();\n  };\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onGroupByTagSecondLevelKeyChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.groupbyTagSecondLevelKey = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  render() {\n    const { query, groups } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSelect\n          queryKeyword\n          inputWidth={0}\n          label={'Website'}\n          tooltip={'Select your website.'}\n          noOptionsMessage={'No websites found'}\n          value={query.entity}\n          options={this.state.websites}\n          onChange={this.onWebsiteChange}\n        />\n\n        <FormSelect\n          queryKeyword\n          labelWidth={6}\n          label={'Type'}\n          tooltip={'Select a beacon type.'}\n          value={query.entityType}\n          options={beacon_types}\n          onChange={this.onBeaconTypeChange}\n        />\n\n        <FormSelect\n          queryKeyword\n          labelWidth={6}\n          label={'Group by'}\n          tooltip={'Group by tag.'}\n          value={query.group}\n          options={groups}\n          onChange={this.onGroupChange}\n        />\n\n        <div style={!query.showGroupBySecondLevel ? { display: 'none' } : {}}>\n          <Input css={''} value={query.groupbyTagSecondLevelKey} onChange={this.onGroupByTagSecondLevelKeyChange} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport { Tooltip, useTheme } from '@grafana/ui';\n\nconst INBOUND = 'INBOUND';\nconst ALL = 'ALL';\n\nconst dropdown = {\n  position: 'relative',\n  background: 'transparent',\n  width: '32px',\n  height: '32px',\n  marginRight: '4px',\n} as React.CSSProperties;\n\nconst dropdown__list = {\n  transition: 'max-height .2s ease-out',\n  maxHeight: 0,\n  overflow: 'hidden',\n  zIndex: 1,\n  position: 'fixed',\n} as React.CSSProperties;\n\nconst dropdown__list__active = {\n  overflow: 'hidden',\n  zIndex: 2, // we set a zIndex to ensure that the overlay is above other elements and does not move any DOM elements.\n  position: 'fixed',\n  maxHeight: '1000px',\n  opacity: 1,\n} as React.CSSProperties;\n\nconst iconTextContainer = {\n  display: 'inline-flex',\n};\n\nconst iconStyle = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n};\n\nconst iconTextStyle = {\n  padding: '7px',\n};\n\nconst iconSize = 30;\n\nconst inboundIcon = (\n  <svg style={iconStyle} height={iconSize} width={iconSize}>\n    <path\n      transform=\"translate(3, 5)\"\n      fill=\"#33a2e5\"\n      d=\"M12.7891666,14.6051302 L12.7751756,19.8293818 L11.4691127,19.8328795 L11.4776628,16.6402814 L6.96695389,21.1509902 L6.2433066,20.427343 L10.7540155,15.9166341 L7.56141732,15.9251842 L7.56491507,14.6191213 L12.7891666,14.6051302 Z M15.754133,9.38135895 C17.1795716,9.38135895 18.3857119,10.5874993 18.3857119,12.0129379 C18.3857119,13.4383765 17.1795716,14.6445168 15.754133,14.6445168 C14.3286944,14.6445168 13.122554,13.4383765 13.122554,12.0129379 C13.122554,10.5874993 14.3286944,9.38135895 15.754133,9.38135895 Z M6.96695389,3.2433066 L11.4776628,7.75401547 L11.4691127,4.56141732 L12.7751756,4.56491507 L12.7891666,9.7891666 L7.56491507,9.77517557 L7.56141732,8.46911269 L10.7540155,8.47766276 L6.2433066,3.96695389 L6.96695389,3.2433066 Z\"\n    />\n  </svg>\n);\n\nconst allIcon = (\n  <svg style={iconStyle} height={iconSize} width={iconSize}>\n    <path\n      transform=\"translate(3, 5)\"\n      fill=\"#33a2e5\"\n      d=\"M7.54586,15 L7.53186897,20.2242515 L6.22580608,20.2277493 L6.23435616,17.0351511 L1.72364729,21.54586 L1,20.8222127 L5.51070887,16.3115038 L2.31811071,16.3200539 L2.32160847,15.013991 L7.54586,15 Z M14.1975552,7.94441147 L17.901552,11.628622 L14.1975552,15.3128325 L13.271556,14.3917799 L15.5351096,12.1403179 L12.4724561,12.1407167 C12.2827518,13.474447 11.1361413,14.5 9.75,14.5 C8.23121694,14.5 7,13.2687831 7,11.75 C7,10.2312169 8.23121694,9 9.75,9 C11.0508538,9 12.1407461,9.90323356 12.4267385,11.1167623 L15.5351096,11.1169261 L13.271556,8.8654641 L14.1975552,7.94441147 Z M20.75,9 C22.2687831,9 23.5,10.2312169 23.5,11.75 C23.5,13.2687831 22.2687831,14.5 20.75,14.5 C19.2312169,14.5 18,13.2687831 18,11.75 C18,10.2312169 19.2312169,9 20.75,9 Z M1.72364729,2 L6.23435616,6.51070887 L6.22580608,3.31811071 L7.53186897,3.32160847 L7.54586,8.54586 L2.32160847,8.53186897 L2.31811071,7.22580608 L5.51070887,7.23435616 L1,2.72364729 L1.72364729,2 Z\"\n    />\n  </svg>\n);\n\n/**\n * Props have to be:\n *   value: string\n *   onChange: function that accepts a string as a parameter and returns void\n *   disabled: boolean\n */\nexport default function ApplicationBoundaryScope(props: any) {\n  const theme = useTheme();\n\n  const opacity = props.disabled ? 0.5 : 1;\n\n  const dropdown__list__item = {\n    background: theme.colors.bg2,\n    cursor: 'pointer',\n    listStyle: 'none',\n    borderRadius: '3px',\n    height: '32px',\n    opacity: opacity,\n  } as React.CSSProperties;\n\n  const [active, setActive] = useState(false);\n\n  function toggleDropdown() {\n    if (!props.disabled) {\n      setActive(!active);\n    }\n  }\n\n  function handleClick(entity: string) {\n    props.onChange(entity);\n    setActive(false);\n  }\n\n  return (\n    <div style={dropdown}>\n      <div\n        onClick={() => toggleDropdown()}\n        onBlur={() => setActive(false)}\n        style={dropdown__list__item}\n        contentEditable\n      >\n        <Tooltip content={props.value ? props.value : ALL} theme={'info'} placement={'top'}>\n          {props.value === INBOUND ? inboundIcon : allIcon}\n        </Tooltip>\n      </div>\n\n      <ul style={active ? dropdown__list__active : dropdown__list}>\n        <li onClick={() => handleClick(INBOUND)} key={INBOUND} style={dropdown__list__item}>\n          <div style={iconTextContainer}>\n            {inboundIcon} <span style={iconTextStyle}>{INBOUND}</span>\n          </div>\n        </li>\n        <li onClick={() => handleClick(ALL)} key={ALL} style={dropdown__list__item}>\n          <div style={iconTextContainer}>\n            {allIcon} <span style={iconTextStyle}>{ALL}</span>\n          </div>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { ALL_APPLICATIONS, ALL_ENDPOINTS, ALL_SERVICES } from '../../GlobalVariables';\nimport ApplicationBoundaryScope from './ApplicationBoundaryScope';\nimport { InlineFormLabel, Input, Select } from '@grafana/ui';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { SelectableValue } from '@grafana/data';\nimport _ from 'lodash';\n\ninterface ApplicationServiceEndpointMetricsState {\n  applications: SelectableValue[];\n  services: SelectableValue[];\n  endpoints: SelectableValue[];\n  value: SelectableValue;\n}\n\ninterface Props {\n  query: InstanaQuery;\n\n  onRunQuery(): void;\n\n  onChange(value: InstanaQuery): void;\n\n  updateMetrics(metrics: SelectableValue[]): void;\n\n  datasource: DataSource;\n}\n\nlet isUnmounting = false;\n\nexport class ApplicationServiceEndpointMetrics extends React.Component<Props, ApplicationServiceEndpointMetricsState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      applications: [],\n      services: [],\n      endpoints: [],\n      value: {\n        value: 2,\n        imgUrl: '../../resources/dest.png',\n      },\n    };\n  }\n\n  componentDidMount() {\n    isUnmounting = false;\n    this.loadApplications();\n    this.loadServices();\n    this.loadEndpoints();\n\n    const { datasource } = this.props;\n    this.props.updateMetrics(datasource.dataSourceApplication.getApplicationMetricsCatalog());\n  }\n\n  componentWillUnmount() {\n    isUnmounting = true;\n  }\n\n  loadApplications() {\n    const { query, onChange, datasource } = this.props;\n    datasource.fetchApplications().then((applications) => {\n      if (!isUnmounting) {\n        this.setState({\n          applications: applications,\n        });\n\n        if (!_.find(this.state.applications, { key: null })) {\n          let apps = this.state.applications;\n          apps.unshift({ key: null, label: ALL_APPLICATIONS });\n          this.setState({\n            applications: apps,\n          });\n        }\n\n        // replace removed application\n        if (\n          query.entity &&\n          query.entity.key &&\n          !_.find(this.state.applications, (app) => app.key === query.entity.key)\n        ) {\n          query.entity = this.state.applications[0];\n        } else if ((!query.entity || !query.entity.key) && applications) {\n          query.entity = this.state.applications[0];\n        }\n\n        onChange(query);\n      }\n    });\n  }\n\n  loadServices() {\n    const { query, onChange, datasource } = this.props;\n    datasource.fetchServices(query).then((services) => {\n      if (!isUnmounting) {\n        this.setState({\n          services: services,\n        });\n\n        if (!_.find(this.state.services, { key: null })) {\n          let s = this.state.services;\n          s.unshift({ key: null, label: ALL_SERVICES });\n          this.setState({\n            services: s,\n          });\n        }\n\n        if (query.service && query.service.key) {\n          if (!_.find(this.state.services, (app) => app.key === query.service.key)) {\n            query.service = this.state.services[0];\n          }\n        } else {\n          query.service = this.state.services[0];\n        }\n\n        onChange(query);\n      }\n    });\n  }\n\n  loadEndpoints() {\n    const { query, onChange, datasource } = this.props;\n    datasource.fetchEndpoints(query).then((endpoints) => {\n      if (!isUnmounting) {\n        this.setState({\n          endpoints: endpoints,\n        });\n\n        if (!_.find(this.state.endpoints, { key: null })) {\n          let e = this.state.endpoints;\n          e.unshift({ key: null, label: ALL_ENDPOINTS });\n          this.setState({\n            endpoints: e,\n          });\n        }\n\n        if (query.endpoint && query.endpoint.key) {\n          if (!_.find(this.state.endpoints, (app) => app.key === query.endpoint.key)) {\n            query.endpoint = { key: null, label: ALL_ENDPOINTS };\n          }\n        } else {\n          query.endpoint = { key: null, label: ALL_ENDPOINTS };\n        }\n\n        onChange(query);\n      }\n    });\n  }\n\n  onApplicationChange = (application: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.entity = application;\n    if (application.boundaryScope !== '') {\n      //set the default boundary scope that is configured for this application\n      query.applicationBoundaryScope = application.boundaryScope;\n    } else {\n      if (query.applicationBoundaryScope !== 'ALL' && query.applicationBoundaryScope !== 'INBOUND') {\n        //if no default is set, set it to INBOUND\n        query.applicationBoundaryScope = 'INBOUND';\n      }\n    }\n\n    onChange(query);\n    this.loadServices();\n    this.loadEndpoints();\n    onRunQuery();\n  };\n\n  onServiceChange = (service: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.service = service;\n    onChange(query);\n    this.loadEndpoints();\n    onRunQuery();\n  };\n\n  onEndpointChange = (endpoint: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.endpoint = endpoint;\n    onChange(query);\n    onRunQuery();\n  };\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onGroupByTagSecondLevelKeyChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.groupbyTagSecondLevelKey = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  onApplicationBoundaryScopeChange = (scope: string) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.applicationBoundaryScope = scope;\n    onChange(query);\n    this.loadServices();\n    this.loadEndpoints();\n    onRunQuery();\n  };\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <InlineFormLabel className={'query-keyword'} width={14} tooltip={'Select your application.'}>\n          Application\n        </InlineFormLabel>\n        <ApplicationBoundaryScope\n          value={query.applicationBoundaryScope}\n          disabled={!query.entity.key}\n          onChange={this.onApplicationBoundaryScopeChange}\n        />\n        <Select\n          menuPlacement={'bottom'}\n          width={0}\n          isSearchable={true}\n          value={query.entity}\n          options={this.state.applications}\n          onChange={this.onApplicationChange}\n        />\n\n        <InlineFormLabel className={'query-keyword'} width={6} tooltip={'Select your service.'}>\n          Service\n        </InlineFormLabel>\n        <Select\n          menuPlacement={'bottom'}\n          width={0}\n          isSearchable={true}\n          value={query.service}\n          options={this.state.services}\n          onChange={this.onServiceChange}\n        />\n\n        <InlineFormLabel className={'query-keyword'} width={6} tooltip={'Select your endpoint.'}>\n          Endpoint\n        </InlineFormLabel>\n        <Select\n          menuPlacement={'bottom'}\n          width={0}\n          isSearchable={true}\n          value={query.endpoint}\n          options={this.state.endpoints}\n          onChange={this.onEndpointChange}\n        />\n\n        <div style={!query.showGroupBySecondLevel ? { display: 'none' } : {}}>\n          <Input css={''} value={query.groupbyTagSecondLevelKey} onChange={this.onGroupByTagSecondLevelKeyChange} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { ChangeEvent, PureComponent } from 'react';\n\nimport { DataSourcePluginOptionsEditorProps, DataSourceSettings, SelectableValue } from '@grafana/data';\nimport { Legend, Field, Input, Checkbox, Icon, Tooltip } from '@grafana/ui';\nimport { InstanaOptions } from '../types/instana_options';\nimport getVersion from '../util/instana_version';\nimport proxyCheck from '../util/proxy_check';\nimport _ from 'lodash';\n\ninterface Props extends DataSourcePluginOptionsEditorProps<InstanaOptions> {}\n\ninterface State {\n  canQueryOfflineSnapshots: boolean;\n  canUseProxy: boolean;\n}\n\nexport class ConfigEditor extends PureComponent<Props, State> {\n  constructor(props: Readonly<Props>) {\n    super(props);\n    this.state = { canQueryOfflineSnapshots: false, canUseProxy: false };\n\n    // check possibility every time\n    this.detectFeatures();\n\n    const { options } = this.props;\n    const { jsonData } = options;\n\n    if (jsonData.useProxy === undefined) {\n      jsonData.useProxy = proxyCheck();\n    }\n  }\n\n  onInstanaOptionsChange = (eventItem: ChangeEvent<HTMLInputElement> | SelectableValue, key: keyof InstanaOptions) => {\n    const { options, onOptionsChange } = this.props;\n    const jsonData = {\n      ...options.jsonData,\n      [key]: eventItem.currentTarget.value,\n    };\n\n    onOptionsChange({ ...options, jsonData });\n\n    if ('url' === key || 'apiToken' === key) {\n      this.debouncedDetectFeatures(options);\n    }\n  };\n\n  onSwitchChange = (eventItem: SelectableValue<HTMLInputElement> | any, key: keyof InstanaOptions) => {\n    const { options, onOptionsChange } = this.props;\n    let value = false;\n\n    if (eventItem && eventItem.currentTarget) {\n      value = !options.jsonData[key];\n    }\n\n    const jsonData = {\n      ...options.jsonData,\n      [key]: value,\n    };\n\n    onOptionsChange({ ...options, jsonData });\n  };\n\n  debouncedDetectFeatures = (settings?: DataSourceSettings<InstanaOptions, {}>) => {\n    _.debounce(() => this.detectFeatures(settings), 500);\n  };\n\n  /**\n   * Checks whether the provided tenant-unit is able to provide certain features such as querying offline snapshots.\n   */\n  detectFeatures = (settings?: DataSourceSettings<InstanaOptions, {}>) => {\n    if (!settings) {\n      settings = this.props.options;\n    }\n\n    if (!settings.id) {\n      return;\n    }\n\n    this.setState({ canUseProxy: proxyCheck() });\n    getVersion(settings.jsonData).then((version: any) => {\n      version\n        ? this.setState({ canQueryOfflineSnapshots: version >= 156 })\n        : this.setState({ canQueryOfflineSnapshots: false });\n    });\n  };\n\n  render() {\n    const { options } = this.props;\n    const { jsonData } = options;\n\n    return (\n      <div>\n        <Legend>Instana configuration</Legend>\n\n        <Field\n          className={'width-30'}\n          horizontal\n          required\n          label=\"URL\"\n          description=\"The URL of your Instana installation.\"\n        >\n          <Input\n            css={''}\n            width={30}\n            value={jsonData.url}\n            placeholder={'https://tools-acme.instana.io'}\n            onChange={(event) => this.onInstanaOptionsChange(event, 'url')}\n          />\n        </Field>\n\n        <Field\n          className={'width-30'}\n          horizontal\n          required\n          label=\"API Token\"\n          description=\"The API token to access the data.\"\n        >\n          <Input\n            type=\"password\"\n            css={''}\n            width={30}\n            value={jsonData.apiToken}\n            suffix={\n              <Tooltip\n                content={\n                  <p>\n                    You can create API tokens following the instructions at <a href=\"https://docs.instana.io/quick_start/api/#api-tokens\">\n                      https://docs.instana.io/quick_start/api/#api-tokens\n                    </a>\n                  </p>\n                }\n                theme={'info'}\n              >\n                <Icon name=\"info-circle\" />\n              </Tooltip>\n            }\n            onChange={(event) => this.onInstanaOptionsChange(event, 'apiToken')}\n          />\n        </Field>\n\n        <Checkbox\n          css={''}\n          label={'Use Proxy'}\n          value={jsonData.useProxy}\n          onChange={(event) => this.onSwitchChange(event, 'useProxy')}\n          description={'Use Grafana server as proxy. Needs Grafana 5.3+ and Instana datasource 2.0.0+'}\n        />\n\n        <Checkbox\n          css={''}\n          label={'Enable offline snapshots'}\n          value={jsonData.showOffline}\n          onChange={(event) => this.onSwitchChange(event, 'showOffline')}\n          description={'Enables querying offline snapshots. Needs Instana release 156+ and Instana datasource 2.3.0+'}\n        />\n\n        <Checkbox\n          css={''}\n          label={'Enable SLO dashboards'}\n          value={jsonData.allowSlo}\n          onChange={(event) => this.onSwitchChange(event, 'allowSlo')}\n          description={\n            'Adds a new category that allows retrieval of SLO information. Needs Instana release 176+ and ' +\n            'an explicit feature flag.'\n          }\n        />\n\n        <br />\n        <br />\n        <b>Maximum query intervals in hours</b>\n        <p className={'width-30'}>\n          This settings are optional values to control the load of data queries, by defining the maximum allowed query\n          intervals against the Instana API.\n        </p>\n\n        <Field className={'width-30'} horizontal label=\"Infrastructure metrics\">\n          <Input\n            css={''}\n            width={30}\n            value={jsonData.queryinterval_limit_infra}\n            placeholder={'optional: interval limit in hours'}\n            onChange={(event) => this.onInstanaOptionsChange(event, 'queryinterval_limit_infra')}\n          />\n        </Field>\n\n        <Field className={'width-30'} horizontal label=\"Application metrics\">\n          <Input\n            css={''}\n            width={30}\n            value={jsonData.queryinterval_limit_app_metrics}\n            placeholder={'optional: interval limit in hours'}\n            onChange={(event) => this.onInstanaOptionsChange(event, 'queryinterval_limit_app_metrics')}\n          />\n        </Field>\n\n        <Field className={'width-30'} horizontal label=\"Analyze application calls\">\n          <Input\n            css={''}\n            width={30}\n            value={jsonData.queryinterval_limit_app_calls}\n            placeholder={'optional: interval limit in hours'}\n            onChange={(event) => this.onInstanaOptionsChange(event, 'queryinterval_limit_app_calls')}\n          />\n        </Field>\n\n        <Field className={'width-30'} horizontal label=\"Analyze website\">\n          <Input\n            css={''}\n            width={30}\n            value={jsonData.queryinterval_limit_website_metrics}\n            placeholder={'optional: interval limit in hours'}\n            onChange={(event) => this.onInstanaOptionsChange(event, 'queryinterval_limit_website_metrics')}\n          />\n        </Field>\n      </div>\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport { Tooltip, useTheme } from '@grafana/ui';\n\nconst DESTINATION = 'DESTINATION';\nconst SOURCE = 'SOURCE';\n\nconst dropdown = {\n  position: 'relative',\n  background: 'transparent',\n  width: '32px',\n  height: '32px',\n  marginRight: '4px',\n} as React.CSSProperties;\n\nconst dropdown__list = {\n  transition: 'max-height .2s ease-out',\n  maxHeight: 0,\n  overflow: 'hidden',\n  zIndex: 1,\n  position: 'fixed',\n} as React.CSSProperties;\n\nconst dropdown__list__active = {\n  overflow: 'hidden',\n  zIndex: 2, // we set a zIndex to ensure that the overlay is above other elements and does not move any DOM elements.\n  position: 'fixed',\n  maxHeight: '1000px',\n  opacity: 1,\n} as React.CSSProperties;\n\nconst iconTextContainer = {\n  display: 'inline-flex',\n};\n\nconst iconStyle = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n};\n\nconst iconTextStyle = {\n  padding: '7px',\n};\n\nconst iconSize = 30;\n\nconst destinationIcon = (\n  <svg style={iconStyle} height={iconSize} width={iconSize}>\n    <path\n      transform=\"translate(3, 5)\"\n      fill=\"#33a2e5\"\n      d=\"M4 11.173h6.38L8.115 8.92 9.042 8l3.704 3.684-3.704 3.684-.926-.92 2.263-2.252H4zM16.43 14.316c-1.426 0-2.632-1.206-2.632-2.632 0-1.425 1.206-2.631 2.632-2.631 1.425 0 2.631 1.206 2.631 2.631 0 1.426-1.206 2.632-2.631 2.632z\"\n    />\n  </svg>\n);\n\nconst sourceIcon = (\n  <svg style={iconStyle} height={iconSize} width={iconSize}>\n    <path\n      transform=\"translate(3, 5)\"\n      fill=\"#33a2e5\"\n      d=\"M9.939 11.173h6.379L14.054 8.92 14.98 8l3.704 3.684-3.704 3.684-.926-.92 2.264-2.252h-6.38c-.308 1.023-1.234 1.842-2.366 1.842C6.132 14.243 5 13.117 5 11.787c0-1.33 1.132-2.457 2.47-2.457 1.234 0 2.16.717 2.469 1.843z\"\n    />\n  </svg>\n);\n\n/**\n * Props have to be:\n *   value: string\n *   onChange: function that accepts a string as a parameter and returns void\n */\nexport default function Entity(props: any) {\n  const theme = useTheme();\n\n  const dropdown__list__item = {\n    background: theme.colors.bg2,\n    cursor: 'pointer',\n    listStyle: 'none',\n    borderRadius: '3px',\n    height: '32px',\n  } as React.CSSProperties;\n\n  const [active, setActive] = useState(false);\n\n  function toggleDropdown() {\n    setActive(!active);\n  }\n\n  function handleClick(entity: string) {\n    props.onChange(entity);\n    setActive(false);\n  }\n\n  return (\n    <div style={dropdown}>\n      <div\n        onClick={() => toggleDropdown()}\n        onBlur={() => setActive(false)}\n        style={dropdown__list__item}\n        contentEditable\n      >\n        <Tooltip content={props.value} theme={'info'} placement={'top'}>\n          {props.value === DESTINATION ? destinationIcon : sourceIcon}\n        </Tooltip>\n      </div>\n\n      <ul style={active ? dropdown__list__active : dropdown__list}>\n        <li onClick={() => handleClick(DESTINATION)} key={DESTINATION} style={dropdown__list__item}>\n          <div style={iconTextContainer}>\n            {destinationIcon} <span style={iconTextStyle}>{DESTINATION}</span>\n          </div>\n        </li>\n        <li onClick={() => handleClick('SOURCE')} key={SOURCE} style={dropdown__list__item}>\n          <div style={iconTextContainer}>\n            {sourceIcon} <span style={iconTextStyle}>{SOURCE}</span>\n          </div>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport { InlineFormLabel, Input, PopoverContent } from '@grafana/ui';\nimport FormWrapper from './FormWrapper';\n\ninterface State {}\n\ninterface Props {\n  label: string;\n  value: string;\n  invalid?: boolean;\n  disabled?: boolean;\n  placeholder?: string;\n  queryKeyword?: boolean;\n  labelWidth?: number | 14;\n  inputWidth?: number | 30;\n  tooltip?: PopoverContent;\n\n  onChange(event?: any): any;\n}\n\n/**\n * Default input field including label. Input element is grafana/ui <Input />.\n */\nexport default class FormInput extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    const { label, tooltip, queryKeyword, disabled, labelWidth = 14, inputWidth = 30, ...remainingProps } = this.props;\n\n    return (\n      <FormWrapper disabled={disabled} stretch={!inputWidth}>\n        <InlineFormLabel className={queryKeyword ? 'query-keyword' : ''} width={labelWidth} tooltip={tooltip}>\n          {label}\n        </InlineFormLabel>\n        <Input css={''} width={inputWidth} disabled={disabled} {...remainingProps} />\n      </FormWrapper>\n    );\n  }\n}\n","import React from 'react';\n\nimport { InlineFormLabel, Select, PopoverContent } from '@grafana/ui';\nimport FormWrapper from './FormWrapper';\nimport { SelectableValue } from '@grafana/data';\n\ninterface State {}\n\ninterface Props {\n  label: string;\n  value: SelectableValue;\n  options: any;\n  queryKeyword?: boolean;\n  disabled?: boolean;\n  defaultValue?: SelectableValue;\n  noOptionsMessage?: string;\n  searchable?: boolean | true;\n  labelWidth?: number | 14;\n  inputWidth?: number | 30;\n  placeholder?: string | '-';\n  tooltip?: PopoverContent;\n\n  onChange(event?: any): any;\n}\n\n/**\n * Default select field including label. Select element is grafana/ui <Select />.\n */\nexport default class FormSelect extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    const {\n      label,\n      tooltip,\n      searchable = true,\n      disabled,\n      queryKeyword,\n      placeholder = '-',\n      labelWidth = 14,\n      inputWidth = 30,\n      ...remainingProps\n    } = this.props;\n\n    return (\n      <FormWrapper disabled={disabled} stretch={!inputWidth}>\n        <InlineFormLabel className={queryKeyword ? 'query-keyword' : ''} width={labelWidth} tooltip={tooltip}>\n          {label}\n        </InlineFormLabel>\n        <Select\n          menuPlacement={'bottom'}\n          disabled={disabled}\n          width={inputWidth}\n          isSearchable={searchable}\n          placeholder={placeholder}\n          {...remainingProps}\n        />\n      </FormWrapper>\n    );\n  }\n}\n","import React from 'react';\n\nimport { InlineFormLabel, LegacyForms, PopoverContent } from '@grafana/ui';\nimport FormWrapper from './FormWrapper';\n\nconst { Switch } = LegacyForms;\n\ninterface State {}\n\ninterface Props {\n  label: string;\n  value: boolean;\n  disabled?: boolean;\n  queryKeyword?: boolean;\n  labelWidth?: number | 14;\n  tooltip?: PopoverContent;\n\n  onChange(event?: any): any;\n}\n\n/**\n * Default switch field including label. Switch element is grafana/ui <Switch />.\n */\nexport default class FormSwitch extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    const { label, tooltip, queryKeyword, disabled, labelWidth = 14, value, ...remainingProps } = this.props;\n\n    return (\n      <FormWrapper disabled={disabled} stretch={false}>\n        <InlineFormLabel className={queryKeyword ? 'query-keyword' : ''} width={labelWidth} tooltip={tooltip}>\n          {label}\n        </InlineFormLabel>\n        <Switch checked={value} label={''} {...remainingProps} />\n      </FormWrapper>\n    );\n  }\n}\n","import React from 'react';\n\ninterface WrapperProps {\n  disabled?: boolean;\n  stretch?: boolean;\n  children: any;\n}\n\nexport default function FormWrapper(props: WrapperProps) {\n  const style: any = { display: 'flex' };\n\n  if (props.disabled) {\n    style.opacity = '0.4';\n    style.pointerEvents = 'none';\n  }\n\n  if (props.stretch) {\n    style.width = '100%';\n  }\n\n  return <div style={style}>{props.children}</div>;\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { InstanaQuery } from '../../../types/instana_query';\nimport FormSwitch from '../../FormField/FormSwitch';\nimport { Input } from '@grafana/ui';\nimport _ from 'lodash';\n\ninterface FreeTextMetricsState {}\n\ninterface Props {\n  query: InstanaQuery;\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n  loadEntityTypes(filterResult?: boolean): void;\n}\n\nexport class FreeTextMetrics extends React.Component<Props, FreeTextMetricsState> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onUseFreeTextMetricsChange = (event: React.SyntheticEvent<HTMLInputElement> | undefined) => {\n    const { query, onChange, loadEntityTypes } = this.props;\n    if (event && event.currentTarget) {\n      query.useFreeTextMetrics = event.currentTarget.checked;\n      if (query.useFreeTextMetrics) {\n        loadEntityTypes(false);\n        query.metric = {};\n      } else {\n        loadEntityTypes(true);\n      }\n      onChange(query);\n    }\n  };\n\n  onFreeTextMetricsChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.freeTextMetrics = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSwitch\n          queryKeyword\n          label={'Enable free text metrics'}\n          tooltip={\n            'Specify comma separated metrics directly in this text field. Once this field has a value,' +\n            ' selected metrics from above will be ignored. Enabled as soon as a query is entered.' +\n            ' Max 4 metrics supported.'\n          }\n          value={query.useFreeTextMetrics}\n          onChange={this.onUseFreeTextMetricsChange}\n          disabled={false}\n        />\n        <Input\n          css={''}\n          width={0}\n          disabled={!query.useFreeTextMetrics}\n          value={query.freeTextMetrics}\n          placeholder={'metric.one,metric.two,metric.three'}\n          onChange={this.onFreeTextMetricsChange}\n        />\n      </div>\n    );\n  }\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { PLEASE_SPECIFY } from '../../../GlobalVariables';\nimport { DataSource } from '../../../datasources/DataSource';\nimport { InstanaQuery } from '../../../types/instana_query';\nimport { Button, InlineFormLabel } from '@grafana/ui';\nimport FormInput from '../../FormField/FormInput';\nimport { SelectableValue } from '@grafana/data';\n\ninterface MetricFilterState {\n  customFilters: string[];\n}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  availableMetrics: SelectableValue[];\n  onFilterChange(customFilters: string[]): void;\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n}\n\nexport class MetricFilter extends React.Component<Props, MetricFilterState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      customFilters: [],\n    };\n  }\n\n  componentDidMount() {\n    const { query } = this.props;\n    this.setState({ customFilters: query.customFilters });\n  }\n\n  onFilterChange = (eventItem: ChangeEvent<HTMLInputElement>, index: number) => {\n    const customFilters: string[] = this.state.customFilters;\n    customFilters[index] = eventItem.currentTarget.value;\n    this.setState({ customFilters: customFilters });\n\n    this.props.onFilterChange(customFilters);\n  };\n\n  addCustomFilter = () => {\n    let customFilters = this.state.customFilters;\n    customFilters.push('');\n    this.setState({ customFilters: customFilters });\n\n    const { query, onChange } = this.props;\n    query.customFilters = customFilters;\n    onChange(query);\n  };\n\n  removeCustomFilter = (index: number) => {\n    let customFilters: string[] = this.state.customFilters;\n    customFilters.splice(index, 1);\n    this.setState({ customFilters: customFilters });\n\n    this.props.onFilterChange(customFilters);\n  };\n\n  render() {\n    let filter = null;\n    let listFilter = this.state.customFilters.map((filters, index) => {\n      filter = (\n        <div className={'gf-form'}>\n          <FormInput\n            label={index + 1 + '. filter metric select'}\n            value={this.state.customFilters[index]}\n            placeholder={PLEASE_SPECIFY}\n            onChange={(event) => this.onFilterChange(event, index)}\n            tooltip={'Type to suggest metrics.'}\n          />\n          <Button variant={'secondary'} onClick={() => this.removeCustomFilter(index)}>\n            -\n          </Button>\n        </div>\n      );\n      return filter;\n    });\n\n    return (\n      <div>\n        {listFilter}\n\n        <div className={'gf-form'}>\n          <InlineFormLabel width={14} tooltip={'Add an additional metric select filter.'}>\n            Add filter metric select\n          </InlineFormLabel>\n          <Button variant={'secondary'} onClick={this.addCustomFilter}>\n            +\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { SelectableValue } from '@grafana/data';\nimport { QueryType } from './QueryType';\n\ninterface InfrastructureBuiltInState {}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  queryTypes: SelectableValue[];\n  onRunQuery(): void;\n  loadEntityTypes(filterResult?: boolean): void;\n  onChange(value: InstanaQuery): void;\n  updateMetrics(metrics: SelectableValue[]): void;\n  updateQueryTypes(types: SelectableValue[]): void;\n}\n\nlet isUnmounting = false;\n\nexport class Infrastructure extends React.Component<Props, InfrastructureBuiltInState> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const { query, onChange, datasource } = this.props;\n    isUnmounting = false;\n\n    if (query.entityQuery && query.entityType && query.entityType.key) {\n      datasource.dataSourceInfrastructure\n        .getMetricsCatalog(query.entityType, query.metricCategory.key)\n        .then((results) => {\n          if (!isUnmounting) {\n            this.props.updateMetrics(results);\n          }\n        });\n    } else {\n      query.metric = {\n        key: null,\n        label: '-',\n      };\n    }\n\n    onChange(query);\n  }\n\n  componentWillUnmount() {\n    isUnmounting = true;\n  }\n\n  render() {\n    const {\n      query,\n      onRunQuery,\n      onChange,\n      updateMetrics,\n      loadEntityTypes,\n      datasource,\n      queryTypes,\n      updateQueryTypes,\n    } = this.props;\n\n    return (\n      <QueryType\n        query={query}\n        onChange={onChange}\n        queryTypes={queryTypes}\n        onRunQuery={onRunQuery}\n        datasource={datasource}\n        updateMetrics={updateMetrics}\n        loadEntityTypes={loadEntityTypes}\n        updateQueryTypes={updateQueryTypes}\n      />\n    );\n  }\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { PLEASE_SPECIFY } from '../../GlobalVariables';\nimport FormSelect from '../FormField/FormSelect';\nimport { SelectableValue } from '@grafana/data';\nimport FormInput from '../FormField/FormInput';\nimport _ from 'lodash';\n\ninterface QueryTypeState {}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  queryTypes: SelectableValue[];\n  onRunQuery(): void;\n  loadEntityTypes(filterResult?: boolean): void;\n  onChange(value: InstanaQuery): void;\n  updateMetrics(metrics: SelectableValue[]): void;\n  updateQueryTypes(types: SelectableValue[]): void;\n}\n\nexport class QueryType extends React.Component<Props, QueryTypeState> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const { query, loadEntityTypes } = this.props;\n    if (query.entityQuery) {\n      loadEntityTypes();\n    }\n  }\n\n  onQueryChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange, updateQueryTypes } = this.props;\n    if (eventItem.currentTarget && eventItem.currentTarget.value) {\n      query.entityQuery = eventItem.currentTarget.value;\n    } else {\n      updateQueryTypes([]);\n      query.entityQuery = '';\n      query.entityType = { key: null, label: '-' };\n    }\n\n    onChange(query);\n\n    // loadEntityTypes with 500ms delay after last debounce\n    this.debouncedEntityTypes();\n  };\n\n  onTypeChange = (eventItem: SelectableValue) => {\n    const { query, datasource, onChange } = this.props;\n    query.entityType = eventItem;\n    onChange(query);\n\n    datasource.dataSourceInfrastructure\n      .getMetricsCatalog(query.entityType, query.metricCategory.key)\n      .then((results) => {\n        this.props.updateMetrics(results);\n      });\n  };\n\n  debouncedEntityTypes = _.debounce(this.props.loadEntityTypes, 500);\n\n  render() {\n    const { query, queryTypes } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormInput\n          queryKeyword\n          inputWidth={0}\n          label={'Query'}\n          tooltip={\n            <div>\n              Specify a query for the entities you wish to plot. Use the dynamic focus syntax:\n              <a href=\"https://docs.instana.io/core_concepts/dynamic_focus/#syntax\">\n                https://docs.instana.io/core_concepts/dynamic_focus/#syntax\n              </a>\n            </div>\n          }\n          value={query.entityQuery}\n          placeholder={PLEASE_SPECIFY}\n          onChange={this.onQueryChange}\n        />\n\n        <FormSelect\n          queryKeyword\n          labelWidth={6}\n          label={'Type'}\n          tooltip={'Select an entity type for a list of available metrics.'}\n          noOptionsMessage={'No types found with query'}\n          value={query.entityType}\n          options={queryTypes}\n          onChange={this.onTypeChange}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { BUILT_IN_METRICS, CUSTOM_METRICS, ANALYZE_APPLICATION_METRICS } from '../../GlobalVariables';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport max_metrics from '../../lists/max_metrics';\nimport FormSelect from '../FormField/FormSelect';\nimport FormSwitch from '../FormField/FormSwitch';\nimport { SelectableValue } from '@grafana/data';\nimport _ from 'lodash';\n\ninterface MetricState {\n  possibleTimeIntervals: SelectableValue[];\n  possibleAggregations: SelectableValue[];\n}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  availableMetrics: SelectableValue[];\n\n  updateMetrics(metrics: SelectableValue[]): void;\n\n  onRunQuery(): void;\n\n  onChange(value: InstanaQuery): void;\n}\n\nexport default class Metric extends React.Component<Props, MetricState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      possibleTimeIntervals: [],\n      possibleAggregations: [],\n    };\n  }\n\n  componentDidMount() {\n    const { query, datasource, onChange } = this.props;\n\n    if (\n      !query.timeInterval ||\n      !query.timeInterval.key ||\n      !datasource.availableTimeIntervals.find((i) => i.key === query.timeInterval.key)\n    ) {\n      query.timeInterval = datasource.getDefaultTimeInterval(query);\n    }\n\n    onChange(query);\n  }\n\n  onMetricChange = (metric: SelectableValue) => {\n    const { query, onRunQuery, onChange } = this.props;\n    query.metric = metric;\n\n    if (query.metric && query.metric.key && !_.includes(query.metric.aggregations, query.aggregation)) {\n      query.aggregation = query.metric.aggregations[0];\n    }\n\n    if (query.displayMaxMetricValue && !this.canShowMaxMetricValue()) {\n      query.displayMaxMetricValue = false;\n    }\n\n    query.allMetrics = [];\n    query.showAllMetrics = false;\n\n    onChange(query);\n    onRunQuery();\n  };\n\n  canShowMaxMetricValue() {\n    const { query } = this.props;\n    return (\n      query.entityType &&\n      query.entityType.key === 'host' &&\n      query.metric &&\n      _.find(max_metrics, (m) => m.key === query.metric.key)\n    );\n  }\n\n  onTimeIntervalChange = (timeInterval: SelectableValue) => {\n    const { query, onRunQuery, onChange } = this.props;\n    query.timeInterval = timeInterval;\n    onChange(query);\n    onRunQuery();\n  };\n\n  onAggregationChange = (aggregation: SelectableValue) => {\n    const { query, onRunQuery, onChange } = this.props;\n    query.aggregation = aggregation;\n    onChange(query);\n    onRunQuery();\n  };\n\n  onShowMaxValueChange = (event?: React.SyntheticEvent<HTMLInputElement>) => {\n    const { query, onChange, onRunQuery } = this.props;\n    if (event && event.currentTarget) {\n      query.displayMaxMetricValue = event.currentTarget.checked;\n      onChange(query);\n      onRunQuery();\n    }\n  };\n\n  onShowAllMetricsChange = (event?: React.SyntheticEvent<HTMLInputElement>) => {\n    const { query, onChange, onRunQuery } = this.props;\n    if (event && event.currentTarget) {\n      query.showAllMetrics = event.currentTarget.checked;\n      if (query.showAllMetrics) {\n        query.metric = { key: null, label: `Displaying ${this.props.availableMetrics.length} metrics` };\n        query.allMetrics = this.props.availableMetrics;\n      }\n      onChange(query);\n      onRunQuery();\n    }\n  };\n\n  canShowAggregation() {\n    const { query } = this.props;\n    return query.metricCategory.key >= ANALYZE_APPLICATION_METRICS;\n  }\n\n  canSelectAggregation() {\n    const { query } = this.props;\n    return query.metric && query.metric.aggregations && query.metric.aggregations.length > 1;\n  }\n\n  render() {\n    const { query, datasource } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSelect\n          queryKeyword\n          disabled={query.useFreeTextMetrics}\n          inputWidth={0}\n          label={'Metric'}\n          tooltip={'Select the metric you wish to plot.'}\n          value={query.metric}\n          noOptionsMessage={'No metrics found'}\n          options={this.props.availableMetrics}\n          onChange={this.onMetricChange}\n        />\n\n        {query.metricCategory.key === BUILT_IN_METRICS && (\n          <FormSwitch\n            queryKeyword\n            disabled={!this.canShowMaxMetricValue()}\n            labelWidth={9}\n            label={'Show max value'}\n            tooltip={\n              \"Displays the maximal value of current metric. Supported for 'Type=Host' with cpu.used, \" +\n              'memory.used and openFiles.used only.'\n            }\n            value={query.displayMaxMetricValue}\n            onChange={this.onShowMaxValueChange}\n          />\n        )}\n\n        {query.metricCategory.key === CUSTOM_METRICS && (\n          <FormSwitch\n            queryKeyword\n            disabled={!query.canShowAllMetrics}\n            labelWidth={9}\n            label={'Show all metrics'}\n            tooltip={\n              'You have the option to show all metrics in the graph once the amount of possible, selectable ' +\n              'metrics is between 1 and 5.'\n            }\n            value={query.showAllMetrics}\n            onChange={this.onShowAllMetricsChange}\n          />\n        )}\n\n        {this.canShowAggregation() && (\n          <FormSelect\n            queryKeyword\n            disabled={!this.canSelectAggregation()}\n            labelWidth={7}\n            inputWidth={12}\n            label={'Aggregation'}\n            tooltip={'Select a metric aggregation.'}\n            value={query.aggregation}\n            options={query.metric.aggregations}\n            onChange={this.onAggregationChange}\n          />\n        )}\n\n        <FormSelect\n          queryKeyword\n          disabled={datasource.availableTimeIntervals.length <= 1}\n          labelWidth={5}\n          inputWidth={12}\n          label={'Rollup'}\n          tooltip={'Select the rollup value.'}\n          value={query.timeInterval}\n          options={datasource.availableTimeIntervals}\n          onChange={this.onTimeIntervalChange}\n        />\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\n\nimport {\n  ANALYZE_APPLICATION_METRICS,\n  ANALYZE_WEBSITE_METRICS,\n  APPLICATION_SERVICE_ENDPOINT_METRICS,\n  BUILT_IN_METRICS,\n  CUSTOM_METRICS,\n  SLO_INFORMATION,\n} from '../GlobalVariables';\nimport { ApplicationServiceEndpointMetrics } from './ApplicationServiceEndpointMetrics/ApplicationServiceEndpointMetrics';\nimport { ApplicationCallsMetrics } from './Analyze/ApplicationCallsMetrics';\nimport { MetricFilter } from './Infrastructure/Custom/MetricFilter';\nimport AdvancedSettings from './AdvancedSettings/AdvancedSettings';\nimport { QueryEditorProps, SelectableValue } from '@grafana/data';\nimport { Infrastructure } from './Infrastructure/Infrastructure';\nimport { SloInformation } from './SLOInformation/SloInformation';\nimport AggregationFunctions from '../lists/aggregation_function';\nimport { InstanaOptions } from '../types/instana_options';\nimport MetricCategories from '../lists/metric_categories';\nimport { WebsiteMetrics } from './Analyze/WebsiteMetrics';\nimport { DataSource } from '../datasources/DataSource';\nimport { InstanaQuery } from '../types/instana_query';\nimport FormSelect from './FormField/FormSelect';\nimport { readTime } from '../util/time_util';\nimport { Filters } from './Analyze/Filter';\nimport Metric from './Metric/Metric';\nimport { Badge } from '@grafana/ui';\nimport migrate from '../migration';\nimport _ from 'lodash';\n\nimport '../instana-grafana.css';\n\ntype Props = QueryEditorProps<DataSource, InstanaQuery, InstanaOptions>;\n\ninterface QueryState {\n  groups: SelectableValue[];\n  queryTypes: SelectableValue[];\n  allMetrics: SelectableValue[];\n  availableMetrics: SelectableValue[];\n  selectedWindowSize: number;\n}\n\nexport class QueryEditor extends PureComponent<Props, QueryState> {\n  query: InstanaQuery;\n  snapshots: any;\n\n  constructor(props: Props) {\n    super(props);\n    const defaultQuery: Partial<InstanaQuery> = {\n      metricCategory: MetricCategories[0],\n      timeShiftIsValid: true,\n      customFilters: [],\n    };\n\n    this.query = Object.assign(defaultQuery, props.query);\n\n    migrate(this.query);\n\n    this.state = {\n      groups: [],\n      allMetrics: [],\n      queryTypes: [],\n      availableMetrics: [],\n      selectedWindowSize: this.props.range ? readTime(this.props.range).windowSize : 21600000,\n    };\n\n    this.filterMetricsOnType = this.filterMetricsOnType.bind(this);\n    this.loadEntityTypes = this.loadEntityTypes.bind(this);\n\n    this.props.onChange(this.query);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>, prevState: Readonly<QueryState>, snapshot?: any) {\n    const { onChange, range, datasource } = this.props;\n    if (range && this.state.selectedWindowSize !== readTime(range).windowSize) {\n      this.setState({\n        ...this.state,\n        selectedWindowSize: readTime(range).windowSize,\n      });\n      datasource.setPossibleTimeIntervals(this.query);\n      if (!datasource.availableTimeIntervals.find((i) => i.key === this.query.timeInterval.key)) {\n        this.query.timeInterval = datasource.getDefaultTimeInterval(this.query);\n        onChange(this.query);\n        // no need to execute onRunQuery() here because the change of time frame triggers\n        // datasource.query() anyways and datasource will take care of correcting the timeInterval\n      }\n    }\n  }\n\n  onCategoryChange = (newCategory: SelectableValue) => {\n    if (this.query.metricCategory === newCategory) {\n      // nothing needs to be done\n    } else {\n      this.selectionReset();\n      this.query.metricCategory = newCategory;\n      this.query.timeInterval = this.props.datasource.getDefaultTimeInterval(this.query);\n\n      this.changeAndRun();\n    }\n  };\n\n  changeAndRun = () => {\n    this.props.onChange(this.query);\n    this.props.onRunQuery();\n  };\n\n  setMetricPlaceholder(nrOfTotalResults: number) {\n    if (this.query.metricCategory.key === CUSTOM_METRICS) {\n      this.query.metric = {\n        key: null,\n        label: 'Please select (' + nrOfTotalResults + '/' + this.state.allMetrics.length + ')',\n      };\n    } else {\n      this.query.metric = {\n        key: null,\n        label: 'Please select (' + nrOfTotalResults + ')',\n      };\n    }\n\n    this.props.onChange(this.query);\n  }\n\n  updateMetrics = (metrics: SelectableValue[]) => {\n    this.setState({\n      availableMetrics: _.sortBy(metrics, 'key'),\n      allMetrics: _.sortBy(metrics, 'key'),\n    });\n\n    if ((this.query.metric && this.query.metric.key) || this.query.showAllMetrics) {\n      const metric = _.find(metrics, (m) => m.key === this.query.metric.key);\n      metric ? (this.query.metric = metric) : (this.query.metric = { key: null });\n    }\n\n    if (this.query.metricCategory.key === CUSTOM_METRICS) {\n      this.onMetricsFilter(this.query.customFilters); // this contains setMetricPlaceholder\n    } else if (!this.query.metric || !this.query.metric.key) {\n      this.setMetricPlaceholder(metrics.length);\n    }\n\n    this.changeAndRun();\n  };\n\n  loadEntityTypes(filterResult = true) {\n    const { query, datasource, onRunQuery } = this.props;\n\n    if (query.entityQuery) {\n      datasource.fetchTypesForTarget(query).then((response: any) => {\n        this.snapshots = response.data;\n        this.filterForEntityType(true, filterResult);\n        onRunQuery();\n      });\n    } else {\n      this.setState({ queryTypes: [] });\n    }\n  }\n\n  filterForEntityType = (findMatchingEntityTypes = true, filterResults = true) => {\n    const { query, datasource, onChange } = this.props;\n    datasource.getEntityTypes().then((entityTypes) => {\n      let queryTypes = entityTypes;\n      if (filterResults && !query.useFreeTextMetrics) {\n        queryTypes = this.filterEntityTypes(entityTypes, findMatchingEntityTypes);\n      }\n\n      this.setState({ queryTypes: queryTypes });\n\n      if (!query.entityType || !query.entityType.key || !_.find(queryTypes, (m) => m.key === query.entityType.key)) {\n        query.entityType = { key: null, label: 'Please select (' + queryTypes.length + ')' };\n      }\n\n      onChange(query);\n    });\n  };\n\n  filterEntityTypes = (entityTypes: SelectableValue[], findMatchingEntityTypes: boolean) => {\n    if (findMatchingEntityTypes) {\n      return _.sortBy(\n        _.filter(entityTypes, (entityType) => this.findMatchingEntityTypes(entityType)),\n        'label'\n      );\n    }\n\n    return _.sortBy(entityTypes, 'label');\n  };\n\n  findMatchingEntityTypes = (entityType: SelectableValue) => {\n    const { query } = this.props;\n    // workaround as long the api does not support returning plugins with custom metrics only\n    if (\n      query.metricCategory.key === BUILT_IN_METRICS ||\n      entityType.key === 'statsd' ||\n      entityType.key === 'prometheus' ||\n      entityType.key === 'jvmRuntimePlatform' ||\n      entityType.key === 'dropwizardApplicationContainer'\n    ) {\n      return this.snapshots.find((type: any) => type === entityType.key) && entityType.label != null;\n    }\n\n    return false;\n  };\n\n  updateQueryTypes = (types: SelectableValue[]) => {\n    this.setState({\n      queryTypes: types,\n    });\n  };\n\n  updateGroups = (groups: SelectableValue[]) => {\n    this.setState({\n      groups: groups,\n    });\n  };\n\n  onMetricsFilter = (customFilters: string[]) => {\n    let newAvailableMetrics: SelectableValue[] = [];\n    if (!customFilters || customFilters.length === 0) {\n      newAvailableMetrics = this.state.allMetrics;\n    } else {\n      newAvailableMetrics = this.applyFilterToMetricList(customFilters);\n    }\n    this.query.canShowAllMetrics = this.isAbleToShowAllMetrics(newAvailableMetrics);\n    if (!this.query.canShowAllMetrics) {\n      this.query.showAllMetrics = false;\n    }\n    this.query.customFilters = customFilters;\n    if (!this.query.metric || !this.query.metric.key) {\n      this.setMetricPlaceholder(newAvailableMetrics.length);\n    }\n\n    this.setState((state) => ({ ...state, availableMetrics: newAvailableMetrics }));\n\n    this.props.onChange(this.query);\n    this.checkMetricAndRefresh();\n  };\n\n  applyFilterToMetricList(filters: string[]) {\n    let filteredMetrics: any = this.state.allMetrics;\n    _.forEach(filters, (filter) => {\n      if (filter !== '') {\n        filteredMetrics = _.sortBy(\n          _.filter(filteredMetrics, (metric) => metric.key.toLowerCase().includes(filter.toLowerCase())),\n          'key'\n        );\n      }\n    });\n\n    return filteredMetrics;\n  }\n\n  filterMetricsOnType(type: string) {\n    let filteredMetrics: SelectableValue[] = this.state.allMetrics.filter((metric) => {\n      return metric.beaconTypes.includes(type);\n    });\n\n    this.setState({\n      availableMetrics: filteredMetrics,\n    });\n\n    if (!this.query.metric || !this.query.metric.key || !this.query.metric.beaconTypes.includes(type)) {\n      this.setMetricPlaceholder(filteredMetrics.length);\n    }\n\n    this.changeAndRun();\n  }\n\n  isAbleToShowAllMetrics(metrics: SelectableValue[]) {\n    return this.query.metricCategory.key === CUSTOM_METRICS && metrics.length > 0 && metrics.length <= 5;\n  }\n\n  checkMetricAndRefresh() {\n    if (\n      this.query.metric &&\n      this.query.metric.key &&\n      !_.includes(\n        _.map(this.state.availableMetrics, (m) => m.key),\n        this.query.metric.key\n      )\n    ) {\n      this.resetMetricSelection();\n    }\n\n    this.changeAndRun();\n  }\n\n  selectionReset() {\n    const { query } = this.props;\n    if (query.metricCategory.key > CUSTOM_METRICS) {\n      query.entityQuery = '';\n    }\n\n    this.setState({\n      availableMetrics: [],\n      allMetrics: [],\n      groups: [],\n    });\n\n    this.resetEntityTypeSelection();\n    this.resetEntitySelection();\n    this.resetMetricSelection();\n  }\n\n  resetEntityTypeSelection() {\n    const { query } = this.props;\n    query.entityType = {\n      key: null,\n      label: '-',\n    };\n    query.customFilters = [];\n  }\n\n  resetEntitySelection() {\n    const { query } = this.props;\n    query.entity = {};\n    query.group = {};\n    query.showGroupBySecondLevel = false;\n    query.groupbyTagSecondLevelKey = '';\n    query.aggregateGraphs = false;\n    query.aggregationFunction = AggregationFunctions[0];\n    query.hideOriginalGraphs = false;\n    query.filters = [];\n    query.showWarningCantShowAllResults = false;\n    query.showAllMetrics = false;\n    query.canShowAllMetrics = false;\n    query.displayMaxMetricValue = false;\n    query.applicationCallToEntity = '';\n    query.callToEntity = '';\n    this.resetServices();\n    this.resetEndpoints();\n    this.resetSLO();\n  }\n\n  resetMetricSelection() {\n    const { query } = this.props;\n    query.metric = {};\n    query.timeShift = '';\n    query.timeShiftIsValid = true;\n    query.showWarningCantShowAllResults = false;\n    query.showAllMetrics = false;\n    query.labelFormat = '';\n    query.freeTextMetrics = '';\n    query.useFreeTextMetrics = false;\n  }\n\n  resetServices() {\n    this.props.query.service = {};\n  }\n\n  resetEndpoints() {\n    this.props.query.endpoint = {};\n  }\n\n  resetSLO() {\n    const { query } = this.props;\n    query.sloValue = '';\n    query.sloReport = {};\n  }\n\n  render() {\n    const { query, onCategoryChange } = this;\n\n    return (\n      <div className={'gf-form-group'}>\n        <div className={'gf-form'}>\n          <FormSelect\n            queryKeyword\n            inputWidth={0}\n            label={'Category'}\n            tooltip={'Select a metric category.'}\n            value={query.metricCategory}\n            options={MetricCategories}\n            onChange={onCategoryChange}\n          />\n        </div>\n\n        {query.metricCategory.key === BUILT_IN_METRICS && (\n          <Infrastructure\n            query={query}\n            queryTypes={this.state.queryTypes}\n            datasource={this.props.datasource}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            loadEntityTypes={this.loadEntityTypes}\n            updateQueryTypes={this.updateQueryTypes}\n          />\n        )}\n\n        {query.metricCategory.key === CUSTOM_METRICS && (\n          <Infrastructure\n            query={query}\n            queryTypes={this.state.queryTypes}\n            datasource={this.props.datasource}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            loadEntityTypes={this.loadEntityTypes}\n            updateQueryTypes={this.updateQueryTypes}\n          />\n        )}\n\n        {query.metricCategory.key === ANALYZE_APPLICATION_METRICS && (\n          <ApplicationCallsMetrics\n            query={query}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            groups={this.state.groups}\n            updateGroups={this.updateGroups}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {query.metricCategory.key === ANALYZE_WEBSITE_METRICS && (\n          <WebsiteMetrics\n            query={query}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            groups={this.state.groups}\n            updateGroups={this.updateGroups}\n            filterMetricsOnType={this.filterMetricsOnType}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {query.metricCategory.key === APPLICATION_SERVICE_ENDPOINT_METRICS && (\n          <ApplicationServiceEndpointMetrics\n            query={query}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {query.metricCategory.key === SLO_INFORMATION && (\n          <SloInformation\n            query={query}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {query.metricCategory.key !== SLO_INFORMATION && (\n          <Metric\n            query={query}\n            onChange={this.props.onChange}\n            onRunQuery={this.props.onRunQuery}\n            updateMetrics={this.updateMetrics}\n            availableMetrics={this.state.availableMetrics}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {query.metricCategory.key === CUSTOM_METRICS && (\n          <MetricFilter\n            query={query}\n            onChange={this.props.onChange}\n            onRunQuery={this.props.onRunQuery}\n            onFilterChange={this.onMetricsFilter}\n            availableMetrics={this.state.availableMetrics}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {(query.metricCategory.key === ANALYZE_APPLICATION_METRICS ||\n          query.metricCategory.key === ANALYZE_WEBSITE_METRICS) && (\n          <Filters\n            query={query}\n            onChange={this.props.onChange}\n            onRunQuery={this.props.onRunQuery}\n            datasource={this.props.datasource}\n            groups={this.state.groups}\n          />\n        )}\n\n        <AdvancedSettings\n          query={query}\n          onRunQuery={this.props.onRunQuery}\n          onChange={this.props.onChange}\n          loadEntityTypes={this.loadEntityTypes}\n        />\n\n        <Badge text={'3.1.1'} color={'blue'} />\n      </div>\n    );\n  }\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { SLO_INFORMATION } from '../../GlobalVariables';\nimport SloSpecifics from '../../lists/slo_specifics';\nimport FormSelect from '../FormField/FormSelect';\nimport { SelectableValue } from '@grafana/data';\nimport FormInput from '../FormField/FormInput';\nimport _ from 'lodash';\n\nconst MAX_VAL = 0.9999;\n\ninterface SloInformationState {\n  sloReports: SelectableValue[];\n  isValidSlo: boolean;\n}\n\ninterface Props {\n  query: InstanaQuery;\n\n  onRunQuery(): void;\n\n  onChange(value: InstanaQuery): void;\n\n  datasource: DataSource;\n}\n\nlet isUnmounting = false;\n\nexport class SloInformation extends React.Component<Props, SloInformationState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      sloReports: [],\n      isValidSlo: true,\n    };\n  }\n\n  componentDidMount() {\n    isUnmounting = false;\n    this.loadSloReports();\n    this.isValid(this.props.query.sloValue);\n  }\n\n  componentWillUnmount() {\n    isUnmounting = true;\n  }\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onSloChange = (slo: SelectableValue) => {\n    const { query, onRunQuery } = this.props;\n    query.sloReport = slo;\n    onRunQuery();\n  };\n\n  onSloValueChange = (sloValue: ChangeEvent<HTMLInputElement>) => {\n    const { query } = this.props;\n    query.sloValue = sloValue.currentTarget.value;\n\n    if (this.isValid(query.sloValue)) {\n      // onRunQuery with 500ms delay after last debounce\n      this.debouncedRunQuery();\n    }\n  };\n\n  onSloSpecificChange = (sloSpecific: SelectableValue) => {\n    const { query, onRunQuery } = this.props;\n    query.sloSpecific = sloSpecific;\n    onRunQuery();\n  };\n\n  isValid(val: string): boolean {\n    const valid = !val || (+val >= 0 && +val <= MAX_VAL);\n    this.setState({\n      isValidSlo: valid,\n    });\n    return valid;\n  }\n\n  shouldComponentUpdate(\n    nextProps: Readonly<Props>,\n    nextState: Readonly<SloInformationState>,\n    nextContext: any\n  ): boolean {\n    return nextProps.query.metricCategory.key === SLO_INFORMATION;\n  }\n\n  loadSloReports() {\n    const { query } = this.props;\n    this.props.datasource.getSloReports().then((sloReports) => {\n      if (!isUnmounting) {\n        this.setState({ sloReports: sloReports });\n\n        if (!query.sloReport && sloReports.length >= 1) {\n          query.sloReport = sloReports[0];\n        }\n      }\n    });\n  }\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSelect\n          queryKeyword\n          inputWidth={0}\n          label={'Configured SLI'}\n          tooltip={'SLI configuration used to compute error budget and SLI values.'}\n          noOptionsMessage={'No configured SLI found'}\n          value={query.sloReport}\n          options={this.state.sloReports}\n          onChange={this.onSloChange}\n        />\n\n        <FormInput\n          queryKeyword\n          labelWidth={7}\n          inputWidth={0}\n          label={'SLO'}\n          tooltip={'Type in your desired SLO threshold from 0 to ' + MAX_VAL}\n          value={query.sloValue}\n          invalid={!this.state.isValidSlo}\n          placeholder={'0.99'}\n          onChange={this.onSloValueChange}\n        />\n\n        <FormSelect\n          queryKeyword\n          labelWidth={7}\n          inputWidth={0}\n          label={'Value type'}\n          tooltip={\n            <div>\n              Select your specific SLO information:\n              <ul>\n                <li>'SLI' requires Gauge visualization</li>\n                <li>'Remaining Error Budget' requires Singlestat visualization</li>\n                <li>'Timeseries' requires Bars draw mode on Graph visualization</li>\n              </ul>\n            </div>\n          }\n          value={query.sloSpecific}\n          options={SloSpecifics}\n          onChange={this.onSloSpecificChange}\n        />\n      </div>\n    );\n  }\n}\n","\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../node_modules/postcss-loader/src/index.js??ref--8-2!../../node_modules/sass-loader/lib/loader.js!./plugin.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../node_modules/postcss-loader/src/index.js??ref--8-2!../../node_modules/sass-loader/lib/loader.js!./plugin.css\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../node_modules/postcss-loader/src/index.js??ref--8-2!../../node_modules/sass-loader/lib/loader.js!./plugin.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import {\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceApi,\n  DataSourceInstanceSettings,\n  SelectableValue,\n} from '@grafana/data';\nimport { InstanaQuery } from '../types/instana_query';\nimport { InstanaOptions } from '../types/instana_options';\nimport { getRequest, instanaUrl } from '../util/request_handler';\nimport { DataSourceSlo } from './DataSource_Slo';\nimport MetricCategories from '../lists/metric_categories';\nimport TimeFilter from '../types/time_filter';\nimport { hoursToMs, readTime } from '../util/time_util';\nimport Cache from '../cache';\nimport { emptyResultData } from '../util/target_util';\nimport _ from 'lodash';\nimport { DataSourceInfrastructure } from './Datasource_Infrastructure';\nimport {\n  getDefaultChartGranularity,\n  getDefaultMetricRollupDuration,\n  getPossibleGranularities,\n  getPossibleRollups,\n} from '../util/rollup_granularity_util';\nimport { appendData, generateStableHash, hasIntersection } from '../util/delta_util';\nimport {\n  ANALYZE_APPLICATION_METRICS,\n  ANALYZE_WEBSITE_METRICS,\n  APPLICATION_SERVICE_ENDPOINT_METRICS,\n  BUILT_IN_METRICS,\n  CUSTOM_METRICS,\n  SLO_INFORMATION,\n} from '../GlobalVariables';\nimport getVersion from '../util/instana_version';\nimport { aggregateTarget } from '../util/aggregation_util';\nimport { DataSourceWebsite } from './DataSource_Website';\nimport { DataSourceApplication } from './DataSource_Application';\nimport { DataSourceService } from './DataSource_Service';\nimport { DataSourceEndpoint } from './DataSource_Endpoint';\nimport { isInvalidQueryInterval } from '../util/queryInterval_check';\nimport { readItemMetrics } from '../util/analyze_util';\nimport migrate from '../migration';\n\nexport class DataSource extends DataSourceApi<InstanaQuery, InstanaOptions> {\n  options: InstanaOptions;\n  dataSourceInfrastructure: DataSourceInfrastructure;\n  dataSourceWebsite: DataSourceWebsite;\n  dataSourceApplication: DataSourceApplication;\n  dataSourceService: DataSourceService;\n  dataSourceEndpoint: DataSourceEndpoint;\n  dataSourceSlo: DataSourceSlo;\n  timeFilter!: TimeFilter;\n  availableGranularities: SelectableValue[];\n  availableRollups: SelectableValue[];\n  availableTimeIntervals: SelectableValue[];\n  resultCache: Cache<any>;\n\n  constructor(instanceSettings: DataSourceInstanceSettings<InstanaOptions>) {\n    super(instanceSettings);\n    this.options = instanceSettings.jsonData;\n    this.options.url = instanaUrl(instanceSettings);\n    this.availableGranularities = [];\n    this.availableRollups = [];\n    this.availableTimeIntervals = [];\n    this.dataSourceSlo = new DataSourceSlo(instanceSettings.jsonData);\n    this.dataSourceInfrastructure = new DataSourceInfrastructure(instanceSettings.jsonData);\n    this.dataSourceWebsite = new DataSourceWebsite(instanceSettings.jsonData);\n    this.dataSourceApplication = new DataSourceApplication(instanceSettings.jsonData);\n    this.dataSourceService = new DataSourceService(instanceSettings.jsonData);\n    this.dataSourceEndpoint = new DataSourceEndpoint(instanceSettings.jsonData);\n    this.resultCache = new Cache<any>();\n  }\n\n  async query(options: DataQueryRequest<InstanaQuery>): Promise<DataQueryResponse> {\n    const { range } = options;\n    this.timeFilter = readTime(range!);\n    this.availableRollups = getPossibleRollups(this.timeFilter);\n    this.availableGranularities = getPossibleGranularities(this.timeFilter.windowSize);\n\n    return Promise.all(\n      options.targets.map((target) => {\n        let targetTimeFilter = readTime(range!);\n\n        // grafana setting to disable query execution\n        if (target.hide) {\n          return { data: [], target: target };\n        }\n\n        migrate(target);\n\n        if (!target.metricCategory) {\n          target.metricCategory = MetricCategories[0];\n        }\n\n        this.setPossibleTimeIntervals(target);\n        if (!this.availableTimeIntervals.find((i) => i.key === target.timeInterval.key)) {\n          target.timeInterval = this.getDefaultTimeInterval(target);\n        }\n\n        // target migration for downwards compatibility\n        migrate(target);\n\n        if (target.timeShift) {\n          let millis = this.convertTimeShiftToMillis(target.timeShift);\n          if (millis) {\n            targetTimeFilter = this.applyTimeShiftOnTimeFilter(targetTimeFilter, millis);\n          }\n        }\n\n        target.timeFilter = targetTimeFilter;\n        target.stableHash = generateStableHash(target);\n        targetTimeFilter = this.adjustTimeFilterIfCached(targetTimeFilter, target);\n\n        if (target.metricCategory.key === SLO_INFORMATION) {\n          return this.dataSourceSlo.runQuery(target, targetTimeFilter).then((data: any) => {\n            return this.buildTargetWithAppendedDataResult(target, targetTimeFilter, data);\n          });\n        } else if (target.metricCategory.key === BUILT_IN_METRICS || target.metricCategory.key === CUSTOM_METRICS) {\n          return this.dataSourceInfrastructure.runQuery(target, targetTimeFilter).then((data: any) => {\n            return this.buildTargetWithAppendedDataResult(target, targetTimeFilter, data);\n          });\n        } else if (target.metricCategory.key === ANALYZE_WEBSITE_METRICS) {\n          return this.dataSourceWebsite.runQuery(target, targetTimeFilter).then((data: any) => {\n            return this.buildTargetWithAppendedDataResult(target, targetTimeFilter, data);\n          });\n        } else if (target.metricCategory.key === ANALYZE_APPLICATION_METRICS) {\n          return this.dataSourceApplication.runQuery(target, targetTimeFilter).then((data: any) => {\n            return this.buildTargetWithAppendedDataResult(target, targetTimeFilter, data);\n          });\n        } else if (target.metricCategory.key === APPLICATION_SERVICE_ENDPOINT_METRICS) {\n          return this.getApplicationServiceEndpointMetrics(target, targetTimeFilter).then((data: any) => {\n            return this.buildTargetWithAppendedDataResult(target, targetTimeFilter, data);\n          });\n        }\n\n        return Promise.resolve(emptyResultData(target.refId));\n      })\n    ).then((targetData) => {\n      let result: any = [];\n      _.each(targetData, (targetAndData) => {\n        // Flatten the list as Grafana expects a list of targets with corresponding datapoints.\n        let resultData = _.compact(_.flatten(targetAndData.data)); // Also remove empty data items\n        this.applyTimeShiftIfNecessary(resultData, targetAndData.target);\n        resultData = this.aggregateDataIfNecessary(resultData, targetAndData.target);\n        this.cacheResultIfNecessary(resultData, targetAndData.target);\n        result.push(resultData);\n      });\n\n      return { data: _.flatten(result) };\n    });\n  }\n\n  getApplicationServiceEndpointMetrics(target: InstanaQuery, timeFilter: TimeFilter) {\n    // do not try to execute too big queries\n    if (isInvalidQueryInterval(timeFilter.windowSize, hoursToMs(this.options.queryinterval_limit_app_metrics))) {\n      throw new Error(\n        'Limit for maximum selectable windowsize exceeded, max is: ' +\n          this.options.queryinterval_limit_app_metrics +\n          ' hours'\n      );\n    }\n\n    if (target.endpoint && target.endpoint.key) {\n      return this.dataSourceEndpoint.fetchEndpointMetrics(target, timeFilter).then((response: any) => {\n        return readItemMetrics(target, response, this.dataSourceEndpoint.buildEndpointMetricLabel);\n      });\n    } else if (target.service && target.service.key) {\n      return this.dataSourceService.fetchServiceMetrics(target, timeFilter).then((response: any) => {\n        return readItemMetrics(target, response, this.dataSourceService.buildServiceMetricLabel);\n      });\n    } else if (target.entity && target.entity.key) {\n      return this.dataSourceApplication.fetchApplicationMetrics(target, timeFilter).then((response: any) => {\n        if (response.data) {\n          target.showWarningCantShowAllResults = response.data.canLoadMore;\n        }\n        return readItemMetrics(target, response, this.dataSourceApplication.buildApplicationMetricLabel);\n      });\n    }\n\n    return Promise.resolve({ data: { items: [] } });\n  }\n\n  applyTimeShiftIfNecessary(data: any, target: InstanaQuery) {\n    data.forEach((data: any) => {\n      if (target.timeShift) {\n        this.applyTimeShiftOnData(data, this.convertTimeShiftToMillis(target.timeShift));\n      }\n    });\n  }\n\n  cacheResultIfNecessary(result: any, target: InstanaQuery) {\n    if (this.supportsDeltaRequests(target) && this.hasResult(result)) {\n      let cachedObj = {\n        timeFilter: target.timeFilter,\n        results: result,\n      };\n      this.resultCache.put(target.stableHash, cachedObj, 4000000); // set to 1,11 hour\n    }\n  }\n\n  supportsDeltaRequests(target: InstanaQuery): boolean {\n    if (target.metricCategory && target.metricCategory.key === SLO_INFORMATION) {\n      return false;\n    }\n\n    let version = this.resultCache.get('version');\n    if (!version) {\n      return getVersion(this.options).then((version: any) => {\n        this.resultCache.put('version', version, 4000000); // set to 1,11 hour\n        return version >= 171;\n      });\n    }\n\n    return version >= 171;\n  }\n\n  hasResult(result: any) {\n    return result && result.length > 0;\n  }\n\n  applyTimeShiftOnData(data: any, timeshift: any) {\n    data.datapoints.forEach((datapoint: any) => {\n      datapoint[1] = datapoint[1] + timeshift;\n    });\n  }\n\n  aggregateDataIfNecessary(data: any, target: InstanaQuery) {\n    let newData = [];\n\n    if (target.aggregateGraphs) {\n      const aggregatedData = aggregateTarget(data, target);\n      newData.push(aggregatedData);\n      if (!target.hideOriginalGraphs) {\n        _.each(data, (dt) => {\n          if (dt.target !== aggregatedData.target) {\n            newData.push(dt);\n          }\n        });\n      }\n      return newData;\n    }\n\n    return data;\n  }\n\n  buildTargetWithAppendedDataResult(target: InstanaQuery, timeFilter: TimeFilter, data: any) {\n    if (timeFilter.from !== target.timeFilter.from && data) {\n      data = this.appendResult(data, target);\n    }\n\n    return {\n      target: target,\n      data: data,\n    };\n  }\n\n  appendResult(data: any, target: InstanaQuery) {\n    let cachedResult = this.resultCache.get(target.stableHash);\n    if (cachedResult && cachedResult.results) {\n      data = appendData(data, cachedResult.results);\n    }\n    return data;\n  }\n\n  adjustTimeFilterIfCached(timeFilter: TimeFilter, target: InstanaQuery): TimeFilter {\n    let cachedResult = this.resultCache.get(target.stableHash);\n    if (cachedResult && hasIntersection(timeFilter, cachedResult.timeFilter)) {\n      let newFrom = this.getDeltaRequestTimestamp(cachedResult.results, cachedResult.timeFilter.from);\n      let newTo = Math.floor(timeFilter.to / 10000) * 10000;\n      return {\n        from: newFrom,\n        to: newTo,\n        windowSize: newTo - newFrom,\n      };\n    }\n    return timeFilter;\n  }\n\n  getDeltaRequestTimestamp(series: any, fromDefault: number): number {\n    const length = series[0].datapoints.length;\n    if (length === 0) {\n      return fromDefault;\n    }\n    const penultimate = length > 1 ? length - 2 : 1;\n    return series[0].datapoints[penultimate][1];\n  }\n\n  getSloReports(): Promise<SelectableValue[]> {\n    return this.dataSourceSlo.getConfiguredSLIs();\n  }\n\n  getEntityTypes(): Promise<SelectableValue[]> {\n    return this.dataSourceInfrastructure.getEntityTypes();\n  }\n\n  fetchApplications() {\n    return this.dataSourceApplication.getApplications(this.getTimeFilter());\n  }\n\n  fetchServices(target: InstanaQuery) {\n    return this.dataSourceService.getServicesOfApplication(target, this.getTimeFilter());\n  }\n\n  fetchEndpoints(target: InstanaQuery) {\n    return this.dataSourceEndpoint.getEndpointsOfService(target, this.getTimeFilter());\n  }\n\n  fetchTypesForTarget(query: InstanaQuery) {\n    return this.dataSourceInfrastructure.fetchTypesForTarget(query, this.getTimeFilter());\n  }\n\n  fetchWebsites(): Promise<SelectableValue[]> {\n    return this.dataSourceWebsite.getWebsites(this.getTimeFilter());\n  }\n\n  getDefaultTimeInterval(query: InstanaQuery) {\n    if (query.metricCategory.key === BUILT_IN_METRICS || query.metricCategory.key === CUSTOM_METRICS) {\n      return getDefaultMetricRollupDuration(this.getTimeFilter());\n    } else {\n      return getDefaultChartGranularity(this.getTimeFilter().windowSize);\n    }\n  }\n\n  convertTimeShiftToMillis(timeShift: string) {\n    if (!timeShift) {\n      return null;\n    }\n\n    try {\n      return this.parseTimeShift(timeShift);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  parseTimeShift(timeShift: string) {\n    let milliSeconds = 1000;\n\n    if (timeShift.endsWith('s')) {\n      return parseInt(timeShift.split('s')[0], 10) * milliSeconds;\n    } else if (timeShift.endsWith('m')) {\n      return parseInt(timeShift.split('m')[0], 10) * 60 * milliSeconds;\n    } else if (timeShift.endsWith('h')) {\n      return parseInt(timeShift.split('h')[0], 10) * 60 * 60 * milliSeconds;\n    } else if (timeShift.endsWith('d')) {\n      return parseInt(timeShift.split('d')[0], 10) * 60 * 60 * 24 * milliSeconds;\n    } else if (timeShift.endsWith('w')) {\n      return parseInt(timeShift.split('w')[0], 10) * 60 * 60 * 24 * 7 * milliSeconds;\n    }\n\n    return null;\n  }\n\n  applyTimeShiftOnTimeFilter(timeFilter: TimeFilter, timeShift: number): TimeFilter {\n    if (timeShift) {\n      return {\n        from: timeFilter.from - timeShift,\n        to: timeFilter.to - timeShift,\n        windowSize: timeFilter.windowSize,\n      };\n    } else {\n      return timeFilter;\n    }\n  }\n\n  setPossibleTimeIntervals(target: InstanaQuery) {\n    if (target.metricCategory.key === 0 || target.metricCategory.key === 1) {\n      this.availableTimeIntervals = this.availableRollups;\n    } else {\n      this.availableTimeIntervals = this.availableGranularities;\n    }\n  }\n\n  getTimeFilter(): TimeFilter {\n    if (!this.timeFilter || !this.timeFilter.from) {\n      const now = Math.floor(Date.now() / 1000) * 1000;\n      const windowSize = 6 * 60 * 60 * 1000; // 6h\n      this.timeFilter = {\n        from: now - windowSize,\n        to: now,\n        windowSize: windowSize,\n      };\n    }\n\n    return this.timeFilter;\n  }\n\n  testDatasource(): Promise<any> {\n    return getRequest(this.options, '/api/monitoringState').then(\n      () => {\n        return {\n          status: 'success',\n          message: 'Successfully connected to the Instana API.',\n          title: 'Success',\n        };\n      },\n      (error: any) => {\n        if (error.status === 401) {\n          return {\n            status: 'error',\n            message: 'Unauthorized. Please verify the API Token.',\n            title: 'Error',\n          };\n        } else {\n          console.log(error);\n          return {\n            status: 'error',\n            message: 'Error (' + error.status + ') connecting to the Instana API: ' + error.statusText,\n            title: 'Error',\n          };\n        }\n      }\n    );\n  }\n}\n","import { SelectableValue } from '@grafana/data';\nimport { InstanaOptions } from '../types/instana_options';\nimport Cache from '../cache';\nimport _ from 'lodash';\nimport TimeFilter from '../types/time_filter';\nimport { getTimeKey, getWindowSize, hoursToMs } from '../util/time_util';\nimport { getRequest, postRequest } from '../util/request_handler';\nimport { getDefaultChartGranularity } from '../util/rollup_granularity_util';\nimport { InstanaQuery } from '../types/instana_query';\nimport { createTagFilter, readItemMetrics } from '../util/analyze_util';\nimport { emptyResultData } from '../util/target_util';\nimport { ALL_APPLICATIONS, PAGINATION_LIMIT } from '../GlobalVariables';\nimport defaultApplicationMetricCatalog from '../lists/default_metric_catalog';\nimport { isInvalidQueryInterval } from '../util/queryInterval_check';\n\nexport class DataSourceApplication {\n  instanaOptions: InstanaOptions;\n  applicationsCache: Cache<Promise<SelectableValue[]>>;\n  miscCache: Cache<any>;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.applicationsCache = new Cache<Promise<SelectableValue[]>>();\n    this.miscCache = new Cache<any>();\n  }\n\n  runQuery(target: InstanaQuery, timeFilter: TimeFilter): any {\n    // do not try to execute to big queries\n    if (isInvalidQueryInterval(timeFilter.windowSize, hoursToMs(this.instanaOptions.queryinterval_limit_app_calls))) {\n      throw new Error(\n        'Limit for maximum selectable windowsize exceeded, max is: ' +\n          this.instanaOptions.queryinterval_limit_app_calls +\n          ' hours'\n      );\n    }\n\n    // avoid invalid calls\n    if (\n      !target ||\n      !target.metric ||\n      !target.metric.key ||\n      !target.group ||\n      !target.group.key ||\n      !target.entity ||\n      (!target.entity.key && !target.entity.label)\n    ) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    return this.fetchAnalyzeMetricsForApplication(target, timeFilter).then((response) => {\n      target.showWarningCantShowAllResults = response.data.canLoadMore;\n      return readItemMetrics(target, response, this.buildAnalyzeApplicationLabel);\n    });\n  }\n\n  getApplications(timeFilter: TimeFilter) {\n    const key = getTimeKey(timeFilter);\n\n    let applications = this.applicationsCache.get(key);\n    if (applications) {\n      return applications;\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    let page = 1;\n    let pageSize = 200;\n\n    applications = this.paginateApplications([], windowSize, timeFilter.to, page, pageSize, PAGINATION_LIMIT).then(\n      (response: any) => {\n        let allResults = _.flattenDeep(\n          _.map(response, (pageSet) => {\n            return pageSet.items;\n          })\n        );\n\n        return _.orderBy(\n          _.compact(allResults).map((entry) => {\n            return {\n              key: entry.id,\n              label: entry.label,\n              boundaryScope: entry.boundaryScope,\n            };\n          }),\n          [(application) => application.label.toLowerCase()],\n          ['asc']\n        );\n      }\n    );\n\n    this.applicationsCache.put(key, applications, 600000);\n    return applications;\n  }\n\n  paginateApplications(\n    results: any,\n    windowSize: number,\n    to: number,\n    page: number,\n    pageSize: number,\n    pageLimit: number\n  ) {\n    if (page > pageLimit) {\n      return results;\n    }\n\n    let queryParameters = 'windowSize=' + windowSize + '&to=' + to + '&page=' + page + '&pageSize=' + pageSize;\n\n    return getRequest(this.instanaOptions, '/api/application-monitoring/applications?' + queryParameters).then(\n      (response: any) => {\n        results.push(response.data);\n        if (page * pageSize < response.data.totalHits) {\n          page++;\n          return this.paginateApplications(results, windowSize, to, page, pageSize, pageLimit);\n        } else {\n          return results;\n        }\n      }\n    );\n  }\n\n  getApplicationTags() {\n    let applicationTags = this.miscCache.get('applicationTags');\n    if (applicationTags) {\n      return applicationTags;\n    }\n\n    applicationTags = getRequest(this.instanaOptions, '/api/application-monitoring/catalog/tags').then(\n      (tagsResponse: any) =>\n        tagsResponse.data.map((entry: any) => ({\n          key: entry.name,\n          label: entry.name,\n          type: entry.type,\n          canApplyToSource: entry.canApplyToSource,\n          canApplyToDestination: entry.canApplyToDestination,\n        }))\n    );\n    this.miscCache.put('applicationTags', applicationTags);\n\n    return applicationTags;\n  }\n\n  getApplicationMetricsCatalog() {\n    return defaultApplicationMetricCatalog;\n  }\n\n  fetchAnalyzeMetricsForApplication(target: InstanaQuery, timeFilter: TimeFilter) {\n    const windowSize = getWindowSize(timeFilter);\n    const tagFilters: any[] = [];\n\n    return Promise.resolve(this.getApplicationTags()).then((applicationTags) => {\n      if (target.entity.key) {\n        tagFilters.push({\n          name: 'application.name',\n          operator: 'EQUALS',\n          value: target.entity.label!,\n          entity: target.applicationCallToEntity ? target.applicationCallToEntity : 'DESTINATION',\n        });\n      }\n\n      _.forEach(target.filters, (filter) => {\n        if (filter.isValid) {\n          let tagFilter: any = createTagFilter(filter);\n          const tag = _.find(applicationTags, ['key', filter.tag.key]);\n          if (tag.canApplyToDestination || tag.canApplyToSource) {\n            tagFilter['entity'] = this.getTagEntity(filter.entity, tag);\n          }\n          tagFilters.push(tagFilter);\n        }\n      });\n\n      const metric: any = {\n        metric: target.metric.key,\n        aggregation: target.aggregation && target.aggregation.key ? target.aggregation.key : 'SUM',\n      };\n\n      if (!target.timeInterval) {\n        target.timeInterval = getDefaultChartGranularity(windowSize);\n      }\n      metric['granularity'] = target.timeInterval.key;\n\n      const group: any = {\n        groupbyTag: target.group.key,\n      };\n      const tag: any = _.find(applicationTags, ['key', target.group.key]);\n      if (tag.canApplyToDestination || tag.canApplyToSource) {\n        group['groupbyTagEntity'] = target.callToEntity;\n      }\n      if (target.group.type === 'KEY_VALUE_PAIR' && target.groupbyTagSecondLevelKey) {\n        group['groupbyTagSecondLevelKey'] = target.groupbyTagSecondLevelKey;\n      }\n\n      const data: any = {\n        group: group,\n        timeFrame: {\n          to: timeFilter.to,\n          windowSize: windowSize,\n        },\n        tagFilters: tagFilters,\n        metrics: [metric],\n      };\n      return postRequest(\n        this.instanaOptions,\n        '/api/application-monitoring/analyze/call-groups?fillTimeSeries=true',\n        data, false, 5\n      );\n    });\n  }\n\n  getTagEntity(selectedEntity: string, tag: any): string {\n    if (selectedEntity === 'DESTINATION' && tag.canApplyToDestination) {\n      return 'DESTINATION';\n    }\n    if (selectedEntity === 'SOURCE' && tag.canApplyToSource) {\n      return 'SOURCE';\n    }\n    return tag.canApplyToDestination ? 'DESTINATION' : 'SOURCE';\n  }\n\n  fetchApplicationMetrics(target: InstanaQuery, timeFilter: TimeFilter) {\n    // avoid invalid calls\n    if (!target || !target.metric || !target.metric.key) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    const metric: any = {\n      metric: target.metric.key,\n      aggregation: target.aggregation && target.aggregation.key ? target.aggregation.key : 'SUM',\n    };\n\n    if (!target.timeInterval) {\n      target.timeInterval = getDefaultChartGranularity(windowSize);\n    }\n    metric['granularity'] = target.timeInterval.key;\n\n    const data: any = {\n      timeFrame: {\n        to: timeFilter.to,\n        windowSize: windowSize,\n      },\n      metrics: [metric],\n    };\n\n    if (target.entity.key !== null) {\n      data['applicationId'] = target.entity.key;\n      data['applicationBoundaryScope'] = target.applicationBoundaryScope;\n    }\n\n    return postRequest(\n      this.instanaOptions,\n      '/api/application-monitoring/metrics/applications?fillTimeSeries=true',\n      data\n    );\n  }\n\n  buildAnalyzeApplicationLabel(target: InstanaQuery, item: any, key: string, index: number): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', item.name);\n      label = _.replace(label, '$application', target.entity.label!);\n      label = _.replace(label, '$metric', target.metric.label!);\n      label = _.replace(label, '$key', key);\n      label = _.replace(label, '$index', '' + index + 1);\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n\n    if (target.entity.label === ALL_APPLICATIONS) {\n      return target.timeShift ? item.name + ' - ' + key + ' - ' + target.timeShift : item.name + ' - ' + key;\n    }\n\n    return target.timeShift && target.timeShiftIsValid\n      ? item.name + ' (' + target.entity.label + ')' + ' - ' + key + ' - ' + target.timeShift\n      : item.name + ' (' + target.entity.label + ')' + ' - ' + key;\n  }\n\n  buildApplicationMetricLabel(target: InstanaQuery, item: any, key: string, index: number): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', item.application.label);\n      label = _.replace(label, '$application', target.entity.label!);\n      label = _.replace(label, '$metric', target.metric.label!);\n      label = _.replace(label, '$key', key);\n      label = _.replace(label, '$index', '' + index + 1);\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n\n    if (target.entity.label === ALL_APPLICATIONS) {\n      return target.timeShift\n        ? item.application.label + ' - ' + key + ' - ' + target.timeShift\n        : item.application.label + ' - ' + key;\n    }\n\n    return target.timeShift && target.timeShiftIsValid\n      ? item.application.label + ' (' + target.entity.label + ')' + ' - ' + key + ' - ' + target.timeShift\n      : item.application.label + ' (' + target.entity.label + ')' + ' - ' + key;\n  }\n}\n","import { SelectableValue } from '@grafana/data';\nimport { InstanaOptions } from '../types/instana_options';\nimport Cache from '../cache';\nimport _ from 'lodash';\nimport TimeFilter from '../types/time_filter';\nimport { getTimeKey, getWindowSize } from '../util/time_util';\nimport { getRequest, postRequest } from '../util/request_handler';\nimport { InstanaQuery } from '../types/instana_query';\nimport { ALL_ENDPOINTS, PAGINATION_LIMIT } from '../GlobalVariables';\nimport { emptyResultData } from '../util/target_util';\nimport { getDefaultChartGranularity } from '../util/rollup_granularity_util';\n\nexport class DataSourceEndpoint {\n  instanaOptions: InstanaOptions;\n  endpointsCache: Cache<Promise<SelectableValue[]>>;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.endpointsCache = new Cache<Promise<SelectableValue[]>>();\n  }\n\n  getEndpointsOfService(target: InstanaQuery, timeFilter: TimeFilter) {\n    let applicationId = '';\n    if (target.entity && target.entity.key) {\n      applicationId = target.entity.key;\n    }\n\n    let serviceId = '';\n    if (target.service) {\n      serviceId = target.service.key;\n    }\n\n    const key = getTimeKey(timeFilter) + applicationId + serviceId + target.applicationBoundaryScope;\n    let endpoints = this.endpointsCache.get(key);\n    if (endpoints) {\n      return endpoints;\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    let page = 1;\n    let pageSize = 200;\n\n    endpoints = this.paginateEndpoints(\n      [],\n      applicationId,\n      serviceId,\n      windowSize,\n      target.applicationBoundaryScope,\n      timeFilter.to,\n      page,\n      pageSize,\n      PAGINATION_LIMIT\n    ).then((response: any) => {\n      let allResults = _.flattenDeep(\n        _.map(response, (pageSet) => {\n          return pageSet.items;\n        })\n      );\n\n      return _.orderBy(\n        _.compact(allResults).map((entry) => {\n          return {\n            key: entry.id,\n            label: entry.label,\n          };\n        }),\n        [(endpoint) => endpoint.label.toLowerCase()],\n        ['asc']\n      );\n    });\n\n    this.endpointsCache.put(key, endpoints, 600000);\n    return endpoints;\n  }\n\n  paginateEndpoints(\n    results: any,\n    applicationId: string,\n    serviceId: string,\n    windowSize: number,\n    applicationBoundaryScope: string,\n    to: number,\n    page: number,\n    pageSize: number,\n    pageLimit: number\n  ) {\n    if (page > pageLimit) {\n      return results;\n    }\n\n    let queryParameters = 'windowSize=' + windowSize + '&to=' + to + '&page=' + page + '&pageSize=' + pageSize;\n    if (applicationBoundaryScope === 'ALL' || applicationBoundaryScope === 'INBOUND') {\n      queryParameters += '&applicationBoundaryScope=' + applicationBoundaryScope;\n    }\n\n    let url =\n      '/api/application-monitoring/applications;id=' +\n      (applicationId ? applicationId : '') +\n      '/services;id=' +\n      (serviceId ? serviceId : '') +\n      '/endpoints?' +\n      queryParameters;\n\n    return getRequest(this.instanaOptions, url).then((response: any) => {\n      results.push(response.data);\n      if (page * pageSize < response.data.totalHits) {\n        page++;\n        return this.paginateEndpoints(\n          results,\n          applicationId,\n          serviceId,\n          windowSize,\n          applicationBoundaryScope,\n          to,\n          page,\n          pageSize,\n          pageLimit\n        );\n      } else {\n        return results;\n      }\n    });\n  }\n\n  fetchEndpointMetrics(target: InstanaQuery, timeFilter: TimeFilter) {\n    // avoid invalid calls\n    if (!target || !target.metric || !target.metric.key) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    const metric: any = {\n      metric: target.metric.key,\n      aggregation: target.aggregation && target.aggregation.key ? target.aggregation.key : 'SUM',\n    };\n\n    if (!target.timeInterval) {\n      target.timeInterval = getDefaultChartGranularity(windowSize);\n    }\n    metric['granularity'] = target.timeInterval.key;\n\n    const data: any = {\n      endpointId: target.endpoint.key,\n      timeFrame: {\n        to: timeFilter.to,\n        windowSize: windowSize,\n      },\n      metrics: [metric],\n    };\n\n    if (target.entity && target.entity.key) {\n      data['applicationId'] = target.entity.key;\n      // only set applicationBoundaryScope when an application is selected\n      data['applicationBoundaryScope'] = target.applicationBoundaryScope;\n    }\n\n    if (target.service && target.service.key) {\n      data['serviceId'] = target.service.key;\n    }\n\n    return postRequest(this.instanaOptions, '/api/application-monitoring/metrics/endpoints?fillTimeSeries=true', data);\n  }\n\n  buildEndpointMetricLabel(target: InstanaQuery, item: any, key: string, index: number): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', item.endpoint.label);\n      label = _.replace(label, '$endpoint', target.endpoint.label!);\n      label = _.replace(label, '$service', target.service.label!);\n      label = _.replace(label, '$application', target.entity.label!);\n      label = _.replace(label, '$metric', target.metric.label!);\n      label = _.replace(label, '$key', key);\n      label = _.replace(label, '$index', '' + index + 1);\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n\n    if (target.endpoint.label === ALL_ENDPOINTS) {\n      return target.timeShift\n        ? item.endpoint.label + ' - ' + key + ' - ' + target.timeShift\n        : item.endpoint.label + ' - ' + key;\n    }\n\n    return target.timeShift && target.timeShiftIsValid\n      ? item.endpoint.label + ' (' + target.endpoint.label + ')' + ' - ' + key + ' - ' + target.timeShift\n      : item.endpoint.label + ' (' + target.endpoint.label + ')' + ' - ' + key;\n  }\n}\n","import { SelectableValue } from '@grafana/data';\nimport { InstanaOptions } from '../types/instana_options';\nimport Cache from '../cache';\nimport _ from 'lodash';\nimport TimeFilter from '../types/time_filter';\nimport { getTimeKey, getWindowSize } from '../util/time_util';\nimport { getRequest, postRequest } from '../util/request_handler';\nimport { getDefaultChartGranularity } from '../util/rollup_granularity_util';\nimport { InstanaQuery } from '../types/instana_query';\nimport { PAGINATION_LIMIT } from '../GlobalVariables';\nimport { emptyResultData } from '../util/target_util';\n\nexport class DataSourceService {\n  instanaOptions: InstanaOptions;\n  servicesCache: Cache<Promise<SelectableValue[]>>;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.servicesCache = new Cache<Promise<SelectableValue[]>>();\n  }\n\n  getServicesOfApplication(target: InstanaQuery, timeFilter: TimeFilter) {\n    let applicationId = '';\n    if (target.entity && target.entity.key) {\n      applicationId = target.entity.key;\n    }\n\n    const key = getTimeKey(timeFilter) + applicationId + target.applicationBoundaryScope;\n    let services = this.servicesCache.get(key);\n    if (services) {\n      return services;\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    let page = 1;\n    let pageSize = 200;\n\n    services = this.paginateServices(\n      [],\n      applicationId,\n      windowSize,\n      timeFilter.to,\n      target.applicationBoundaryScope,\n      page,\n      pageSize,\n      PAGINATION_LIMIT\n    ).then((response: any) => {\n      let allResults = _.flattenDeep(\n        _.map(response, (pageSet) => {\n          return pageSet.items;\n        })\n      );\n\n      return _.orderBy(\n        _.compact(allResults).map((entry) => {\n          return {\n            key: entry.id,\n            label: entry.label,\n          };\n        }),\n        [(service) => service.label.toLowerCase()],\n        ['asc']\n      );\n    });\n\n    this.servicesCache.put(key, services, 600000);\n    return services;\n  }\n\n  paginateServices(\n    results: any,\n    applicationId: string,\n    windowSize: number,\n    to: number,\n    applicationBoundaryScope: string,\n    page: number,\n    pageSize: number,\n    pageLimit: number\n  ) {\n    if (page > pageLimit) {\n      return results;\n    }\n\n    let queryParameters = 'windowSize=' + windowSize + '&to=' + to + '&page=' + page + '&pageSize=' + pageSize;\n    if (applicationBoundaryScope === 'ALL' || applicationBoundaryScope === 'INBOUND') {\n      queryParameters += '&applicationBoundaryScope=' + applicationBoundaryScope;\n    }\n\n    let url =\n      '/api/application-monitoring/applications;id=' +\n      (applicationId ? applicationId : '') +\n      '/services?' +\n      queryParameters;\n\n    return getRequest(this.instanaOptions, url).then((response: any) => {\n      results.push(response.data);\n      if (page * pageSize < response.data.totalHits) {\n        page++;\n        return this.paginateServices(\n          results,\n          applicationId,\n          windowSize,\n          to,\n          applicationBoundaryScope,\n          page,\n          pageSize,\n          pageLimit\n        );\n      } else {\n        return results;\n      }\n    });\n  }\n\n  fetchServiceMetrics(target: InstanaQuery, timeFilter: TimeFilter) {\n    // avoid invalid calls\n    if (!target || !target.metric || !target.metric.key) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n\n    if (!target.timeInterval) {\n      target.timeInterval = getDefaultChartGranularity(windowSize);\n    }\n\n    const metric = {\n      metric: target.metric.key,\n      aggregation: target.aggregation && target.aggregation.key ? target.aggregation.key : 'SUM',\n      granularity: target.timeInterval.key,\n    };\n\n    const data: any = {\n      timeFrame: {\n        to: timeFilter.to,\n        windowSize: windowSize,\n      },\n      metrics: [metric],\n    };\n\n    if (target.entity && target.entity.key) {\n      data['applicationId'] = target.entity.key;\n      // only set applicationBoundaryScope when an application is selected\n      data['applicationBoundaryScope'] = target.applicationBoundaryScope;\n    }\n\n    if (target.service && target.service.key) {\n      data['serviceId'] = target.service.key;\n    }\n\n    return postRequest(this.instanaOptions, '/api/application-monitoring/metrics/services?fillTimeSeries=true', data);\n  }\n\n  buildServiceMetricLabel(target: InstanaQuery, item: any, key: string, index: number): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', item.service.label);\n      label = _.replace(label, '$service', target.service.label!);\n      label = _.replace(label, '$application', target.entity.label!);\n      label = _.replace(label, '$metric', target.metric.label!);\n      label = _.replace(label, '$key', key);\n      label = _.replace(label, '$index', index + 1 + '');\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n\n    if (target.service.key === null) {\n      return target.timeShift\n        ? item.service.label + ' - ' + key + ' - ' + target.timeShift\n        : item.service.label + ' - ' + key;\n    }\n\n    return target.timeShift && target.timeShiftIsValid\n      ? item.service.label + ' (' + target.service.label + ')' + ' - ' + key + ' - ' + target.timeShift\n      : item.service.label + ' (' + target.service.label + ')' + ' - ' + key;\n  }\n}\n","import { SelectableValue, TimeSeries, TimeSeriesPoints } from '@grafana/data';\nimport { buildTimeSeries, emptyResultData } from '../util/target_util';\nimport { InstanaOptions } from '../types/instana_options';\nimport { InstanaQuery } from '../types/instana_query';\nimport { getRequest } from '../util/request_handler';\nimport { getWindowSize } from '../util/time_util';\nimport TimeFilter from '../types/time_filter';\nimport Cache from '../cache';\nimport _ from 'lodash';\n\nexport class DataSourceSlo {\n  sliReportsCache: Cache<Promise<SelectableValue[]>>;\n  instanaOptions: InstanaOptions;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.sliReportsCache = new Cache<Promise<SelectableValue[]>>();\n  }\n\n  getConfiguredSLIs(): Promise<SelectableValue[]> {\n    let sliReports = this.sliReportsCache.get('sliReports');\n    if (sliReports) {\n      return sliReports;\n    }\n\n    sliReports = getRequest(this.instanaOptions, '/api/settings/sli').then((response: any) =>\n      _.map(response.data, (r) => {\n        return {\n          key: r.id,\n          label: r.sliName,\n        };\n      })\n    );\n\n    this.sliReportsCache.put('sliReports', sliReports);\n    return sliReports;\n  }\n\n  runQuery(target: InstanaQuery, timeFilter: TimeFilter) {\n    //avoid involid calls\n    if (\n      !target ||\n      !target.sloReport ||\n      !target.sloReport.key ||\n      !target.sloSpecific ||\n      !target.sloSpecific.key ||\n      !target.sloValue\n    ) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    let endpoint =\n      '/api/sli/report/' +\n      target.sloReport.key +\n      '?from=' +\n      timeFilter.from +\n      '&to=' +\n      timeFilter.to +\n      '&slo=' +\n      target.sloValue;\n    return getRequest(this.instanaOptions, endpoint).then((response: any) => {\n      return this.extractSpecificValueFromSLI(target, response.data, timeFilter);\n    });\n  }\n\n  extractSpecificValueFromSLI(target: InstanaQuery, sliResult: any, timeFilter: TimeFilter) {\n    if (target.sloSpecific.key === 'SLI') {\n      return [\n        buildTimeSeries(target.sloSpecific.label!, target.refId, this.buildResultArray(sliResult.sli, timeFilter.to)),\n      ];\n    } else if (target.sloSpecific.key === 'Remaining Error Budget') {\n      return [\n        buildTimeSeries(\n          target.sloSpecific.label!,\n          target.refId,\n          this.buildResultArray(sliResult.errorBudgetRemaining, timeFilter.to)\n        ),\n      ];\n    } else if (target.sloSpecific.key === 'Timeseries') {\n      return this.buildViolationDistributionTimeSeries(target, sliResult.violationDistribution, timeFilter);\n    }\n\n    return [emptyResultData(target.refId)];\n  }\n\n  buildResultArray(result: number, timestamp: number): TimeSeriesPoints {\n    return [[result, timestamp]];\n  }\n\n  buildViolationDistributionTimeSeries(target: InstanaQuery, series: any, timeFilter: TimeFilter): TimeSeries[] {\n    const greens: any[] = [];\n    const reds: any[] = [];\n    const greys: any[] = [];\n\n    let granularity = getWindowSize(timeFilter) / Object.keys(series).length;\n    _.forEach(series, (value: number, index: number) => {\n      if (value === 1) {\n        greens.push([1, timeFilter.from + index * granularity]);\n      } else if (value === 0) {\n        greys.push([1, timeFilter.from + index * granularity]);\n      } else if (value === -1) {\n        reds.push([1, timeFilter.from + index * granularity]);\n      }\n    });\n\n    const result: TimeSeries[] = [];\n    result.push(buildTimeSeries('No violation', target.refId, greens));\n    result.push(buildTimeSeries('Violation', target.refId, reds));\n    result.push(buildTimeSeries('No data', target.refId, greys));\n\n    return result;\n  }\n}\n","import { SelectableValue } from '@grafana/data';\nimport { InstanaOptions } from '../types/instana_options';\nimport Cache from '../cache';\nimport _ from 'lodash';\nimport TimeFilter from '../types/time_filter';\nimport { getTimeKey, getWindowSize, hoursToMs } from '../util/time_util';\nimport BeaconGroupBody from '../types/beacon_group_body';\nimport { getRequest, postRequest } from '../util/request_handler';\nimport { getDefaultChartGranularity } from '../util/rollup_granularity_util';\nimport { InstanaQuery } from '../types/instana_query';\nimport { createTagFilter, readItemMetrics } from '../util/analyze_util';\nimport { emptyResultData } from '../util/target_util';\nimport { isInvalidQueryInterval } from '../util/queryInterval_check';\n\nexport class DataSourceWebsite {\n  instanaOptions: InstanaOptions;\n  websitesCache: Cache<Promise<SelectableValue[]>>;\n  miscCache: Cache<any>;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.websitesCache = new Cache<Promise<SelectableValue[]>>();\n    this.miscCache = new Cache<any>();\n  }\n\n  runQuery(target: InstanaQuery, timeFilter: TimeFilter) {\n    if (\n      isInvalidQueryInterval(timeFilter.windowSize, hoursToMs(this.instanaOptions.queryinterval_limit_website_metrics))\n    ) {\n      throw new Error(\n        'Limit for maximum selectable windowsize exceeded, max is: ' +\n          this.instanaOptions.queryinterval_limit_website_metrics +\n          ' hours'\n      );\n    }\n\n    // avoid invalid calls\n    if (\n      !target ||\n      !target.metric ||\n      !target.metric.key ||\n      !target.group ||\n      !target.group.key ||\n      !target.entity ||\n      !target.entity.key\n    ) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    return this.fetchAnalyzeMetricsForWebsite(target, timeFilter).then((response: any) => {\n      return readItemMetrics(target, response, this.buildAnalyzeWebsiteLabel);\n    });\n  }\n\n  getWebsites(timeFilter: TimeFilter) {\n    const key = getTimeKey(timeFilter);\n\n    let websites = this.websitesCache.get(key);\n    if (websites) {\n      return websites;\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    const data: BeaconGroupBody = {\n      group: {\n        groupbyTag: 'beacon.website.name',\n      },\n      timeFrame: {\n        to: timeFilter.to,\n        windowSize: windowSize,\n      },\n      type: 'PAGELOAD',\n      metrics: [\n        {\n          metric: 'pageLoads',\n          aggregation: 'SUM',\n        },\n      ],\n      order: {\n        by: 'pageLoads',\n        direction: 'desc',\n      },\n      pagination: {\n        ingestionTime: 0,\n        offset: 0,\n        retrievalSize: 200,\n      },\n    };\n    websites = postRequest(this.instanaOptions, '/api/website-monitoring/analyze/beacon-groups', data).then(\n      (websitesResponse: any) =>\n        websitesResponse.data.items.map((entry: any) => ({\n          key: entry.name,\n          label: entry.name,\n        }))\n    );\n    this.websitesCache.put(key, websites, 600000);\n\n    return websites;\n  }\n\n  getWebsiteTags() {\n    let websiteTags = this.miscCache.get('websiteTags');\n    if (websiteTags) {\n      return websiteTags;\n    }\n\n    websiteTags = getRequest(this.instanaOptions, '/api/website-monitoring/catalog/tags').then((tagsResponse: any) =>\n      tagsResponse.data.map((entry: any) => ({\n        key: entry.name,\n        label: entry.name,\n        type: entry.type,\n      }))\n    );\n    this.miscCache.put('websiteTags', websiteTags);\n\n    return websiteTags;\n  }\n\n  getWebsiteMetricsCatalog() {\n    let websiteCatalog = this.miscCache.get('websiteCatalog');\n    if (websiteCatalog) {\n      return websiteCatalog;\n    }\n\n    websiteCatalog = getRequest(this.instanaOptions, '/api/website-monitoring/catalog/metrics').then(\n      (catalogResponse: any) =>\n        catalogResponse.data.map((entry: any) => {\n          return {\n            key: entry.metricId,\n            label: entry.label,\n            aggregations: entry.aggregations ? this.transformAggregations(entry.aggregations.sort()) : [],\n            beaconTypes: entry.beaconTypes\n              ? this.transformBeaconTypes(entry.beaconTypes)\n              : ['pageLoad', 'resourceLoad', 'httpRequest', 'error', 'custom', 'pageChange'],\n          };\n        })\n    );\n    this.miscCache.put('websiteCatalog', websiteCatalog);\n\n    return websiteCatalog;\n  }\n\n  transformBeaconTypes(beaconTypes: string[]) {\n    if (beaconTypes.includes('pageChange')) {\n      let result = _.remove(beaconTypes, (type) => type !== 'pageChange');\n      result.push('page_change');\n      return result;\n    }\n\n    return beaconTypes;\n  }\n\n  transformAggregations(aggregations: string[]) {\n    return _.map(aggregations, (a) => {\n      return {\n        key: a,\n        label: a,\n      };\n    });\n  }\n\n  private fetchAnalyzeMetricsForWebsite(target: InstanaQuery, timeFilter: TimeFilter) {\n    const windowSize = getWindowSize(timeFilter);\n    const tagFilters = [\n      {\n        name: 'beacon.website.name',\n        operator: 'EQUALS',\n        value: target.entity.key,\n      },\n    ];\n\n    _.forEach(target.filters, (filter) => {\n      if (filter.isValid) {\n        tagFilters.push(createTagFilter(filter));\n      }\n    });\n    const metric: any = {\n      metric: target.metric.key,\n      aggregation: target.aggregation.key ? target.aggregation.key : 'SUM',\n    };\n\n    if (!target.timeInterval) {\n      target.timeInterval = getDefaultChartGranularity(windowSize);\n    }\n    metric['granularity'] = target.timeInterval.key;\n\n    const group: any = {\n      groupbyTag: target.group.key,\n    };\n    if (target.group.type === 'KEY_VALUE_PAIR' && target.groupbyTagSecondLevelKey) {\n      group['groupbyTagSecondLevelKey'] = target.groupbyTagSecondLevelKey;\n    }\n\n    const data: BeaconGroupBody = {\n      group: group,\n      timeFrame: {\n        to: timeFilter.to,\n        windowSize: windowSize,\n      },\n      tagFilters: tagFilters,\n      type: target.entityType.key,\n      metrics: [metric],\n    };\n    return postRequest(this.instanaOptions, '/api/website-monitoring/analyze/beacon-groups?fillTimeSeries=true', data, false, 5);\n  }\n\n  buildAnalyzeWebsiteLabel(target: InstanaQuery, item: any, key: string, index: number): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', item.name);\n      label = _.replace(label, '$website', target.entity.label!);\n      label = _.replace(label, '$type', target.entityType.label!);\n      label = _.replace(label, '$metric', target.metric.label!);\n      label = _.replace(label, '$key', key);\n      label = _.replace(label, '$index', '' + index + 1);\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n    return target.timeShift && target.timeShiftIsValid\n      ? item.name + ' (' + target.entity.label + ')' + ' - ' + key + ' - ' + target.timeShift\n      : item.name + ' (' + target.entity.label + ')' + ' - ' + key;\n  }\n}\n","import { SelectableValue } from '@grafana/data';\nimport { InstanaOptions } from '../types/instana_options';\nimport { InstanaQuery } from '../types/instana_query';\nimport { getRequest } from '../util/request_handler';\nimport TimeFilter from '../types/time_filter';\nimport Cache from '../cache';\nimport { CUSTOM_METRICS, SEPARATOR } from '../GlobalVariables';\nimport _ from 'lodash';\nimport { getTimeKey, hoursToMs } from '../util/time_util';\nimport { isInvalidQueryInterval } from '../util/queryInterval_check';\nimport { emptyResultData } from '../util/target_util';\nimport { getDefaultMetricRollupDuration } from '../util/rollup_granularity_util';\nimport max_metrics from '../lists/max_metrics';\n\nexport class DataSourceInfrastructure {\n  instanaOptions: InstanaOptions;\n  snapshotCache: Cache<Promise<SelectableValue[]>>;\n  snapshotInfoCache: Cache<Promise<SelectableValue[]>>;\n  catalogCache: Cache<Promise<SelectableValue[]>>;\n  typeCache: Cache<Promise<SelectableValue[]>>;\n  timeToLiveSnapshotInfoCache = 4000000; // set to 1,11 hour\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.snapshotCache = new Cache<Promise<SelectableValue[]>>();\n    this.snapshotInfoCache = new Cache<Promise<SelectableValue[]>>();\n    this.catalogCache = new Cache<Promise<SelectableValue[]>>();\n    this.typeCache = new Cache<Promise<SelectableValue[]>>();\n  }\n\n  runQuery(target: InstanaQuery, timeFilter: TimeFilter) {\n    // do not try to execute to big queries\n    if (isInvalidQueryInterval(timeFilter.windowSize, hoursToMs(this.instanaOptions.queryinterval_limit_infra))) {\n      throw new Error(\n        'Limit for maximum selectable windowsize exceeded, max is: ' +\n          this.instanaOptions.queryinterval_limit_infra +\n          ' hours'\n      );\n    }\n\n    // do not try to retrieve data without selected metric\n    if ((!target.metric || !target.metric.key) && !target.showAllMetrics && !target.freeTextMetrics) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    // for every target, fetch snapshots in the selected timeframe that satisfy the lucene query.\n    return this.fetchSnapshotsForTarget(target, timeFilter).then((snapshots) => {\n      if (target.showAllMetrics) {\n        // only available for custom metrics\n        return this.fetchMultipleMetricsForSnapshots(target, snapshots, timeFilter, target.allMetrics);\n      } else if (target.freeTextMetrics) {\n        // only available for custom metrics\n        const metrics = this.extractMetricsFromText(target.freeTextMetrics);\n        return this.fetchMultipleMetricsForSnapshots(target, snapshots, timeFilter, metrics);\n      } else {\n        return this.fetchMetricsForSnapshots(target, snapshots, timeFilter, target.metric);\n      }\n    });\n  }\n\n  extractMetricsFromText(freeText: string): string[] {\n    const metricsString = freeText.replace(/\\s/g, '').split(',');\n    let metrics: string[] = [];\n    _.each(metricsString, (metricString) => metrics.push(JSON.parse('{ \"key\": \"' + metricString + '\"}')));\n\n    if (metrics.length > 4) {\n      metrics = metrics.slice(0, 4); // API supports up to 4 metrics at once\n    }\n\n    return metrics;\n  }\n\n  fetchMultipleMetricsForSnapshots(target: InstanaQuery, snapshots: any, timeFilter: TimeFilter, metrics: any) {\n    const resultPromises: any = [];\n    _.forEach(metrics, (metric) => {\n      resultPromises.push(this.fetchMetricsForSnapshots(target, snapshots, timeFilter, metric));\n    });\n\n    return Promise.all(resultPromises).then((allResults) => {\n      const allMetrics: any = [];\n      allResults.forEach((result: any) => result.forEach((s: any) => allMetrics.push(s)));\n      return allMetrics;\n    });\n  }\n\n  fetchMetricsForSnapshots(target: InstanaQuery, snapshots: any, timeFilter: TimeFilter, metric: any) {\n    let maxValues: any = [];\n    let res = _.map(snapshots, (snapshot, index) => {\n      // ...fetch the metric data for every snapshot in the results.\n      return this.fetchMetricsForSnapshot(snapshot.snapshotId, timeFilter, target.timeInterval.key, metric).then(\n        (response: any) => {\n          let timeseries = this.readTimeSeries(response.data.values, target.aggregation, timeFilter);\n          let result = {\n            target: this.buildLabel(snapshot.response, snapshot.host, target, index, metric),\n            datapoints: _.map(timeseries, (value) => [value.value, value.timestamp]),\n            refId: target.refId,\n            key: target.stableHash,\n          };\n\n          if (target.displayMaxMetricValue) {\n            const maxValue = this.getMaxMetricValue(target.metric, snapshot);\n            maxValues.push(this.buildMaxMetricTarget(target, timeseries, maxValue, result.target));\n            result.datapoints = this.convertRelativeToAbsolute(result.datapoints, maxValue);\n          }\n\n          return result;\n        }\n      );\n    });\n\n    return Promise.all(res).then((allResults) => {\n      if (target.displayMaxMetricValue) {\n        allResults = _.concat(res, maxValues);\n      }\n      return Promise.all(allResults);\n    });\n  }\n\n  getMaxMetricValue(metric: any, snapshot: any): number {\n    const maxMetrics: any = max_metrics;\n    return snapshot.response.data.data[_.find(maxMetrics, (m: any) => m.key === metric.key).value];\n  }\n\n  buildMaxMetricTarget(target: any, timeseries: any, maxValue: any, resultLabel: any) {\n    let datapoints = _.map(timeseries, (series) => {\n      return [maxValue, series.timestamp];\n    });\n\n    let maxLabel = this.convertMetricNameToMaxLabel(target.metric);\n\n    return {\n      target: resultLabel + ' ' + maxLabel,\n      datapoints: datapoints,\n      refId: target.refId,\n      key: target.stableHash + maxLabel,\n    };\n  }\n\n  convertMetricNameToMaxLabel(metric: any): string {\n    const maxMetrics: any = max_metrics;\n    return _.find(maxMetrics, (m) => m.key === metric.key).label;\n  }\n\n  convertRelativeToAbsolute(datapoints: any, maxValue: any) {\n    return _.map(datapoints, (datapoint) => {\n      if (datapoint[0]) {\n        return [datapoint[0] * maxValue, datapoint[1]];\n      }\n      return [null, datapoint[1]];\n    });\n  }\n\n  getEntityTypes(): Promise<SelectableValue[]> {\n    let entityTypes = this.typeCache.get('entityTypes');\n    if (entityTypes) {\n      return entityTypes;\n    }\n\n    entityTypes = getRequest(this.instanaOptions, '/api/infrastructure-monitoring/catalog/plugins').then(\n      (typesResponse: any) => {\n        const result = typesResponse.data.map((entry: any) => ({\n          key: entry.plugin,\n          label: entry.label,\n        }));\n\n        result.push({\n          key: 'regionEntity',\n          label: 'Region',\n        });\n\n        return _.sortBy(result, 'label');\n      }\n    );\n\n    this.typeCache.put('entityTypes', entityTypes);\n\n    return entityTypes;\n  }\n\n  fetchTypesForTarget(query: InstanaQuery, timeFilter: TimeFilter): any {\n    const fetchSnapshotTypesUrl =\n      `/api/snapshots/types` +\n      `?q=${encodeURIComponent(query.entityQuery)}` +\n      `&from=${timeFilter.from}` +\n      `&to=${timeFilter.to}` +\n      (this.instanaOptions.showOffline ? `` : `&time=${timeFilter.to}`);\n    return getRequest(this.instanaOptions, fetchSnapshotTypesUrl);\n  }\n\n  getMetricsCatalog(plugin: SelectableValue, metricCategory: number): Promise<SelectableValue[]> {\n    const key = plugin.key + '|' + metricCategory;\n\n    let metrics = this.catalogCache.get(key);\n    if (metrics) {\n      return metrics;\n    }\n\n    const filter = metricCategory === CUSTOM_METRICS ? 'custom' : 'builtin';\n    metrics = getRequest(\n      this.instanaOptions,\n      `/api/infrastructure-monitoring/catalog/metrics/${plugin.key}?filter=${filter}`\n    ).then((catalogResponse: any) =>\n      catalogResponse.data.map((entry: any) => ({\n        key: entry.metricId,\n        label: entry.label,\n        description: entry.metricId,\n        aggregations: [\n          { key: 'MEAN', label: 'MEAN' },\n          { key: 'SUM', label: 'SUM' },\n        ],\n        entityType: entry.pluginId,\n      }))\n    );\n\n    this.catalogCache.put(key, metrics);\n\n    return metrics;\n  }\n\n  fetchSnapshotsForTarget(target: InstanaQuery, timeFilter: TimeFilter) {\n    const query = this.buildQuery(target);\n    const key = this.buildSnapshotCacheKey(query, timeFilter);\n\n    let snapshots = this.snapshotCache.get(key);\n    if (snapshots) {\n      return snapshots;\n    }\n\n    const fetchSnapshotContextsUrl =\n      `/api/snapshots/context` +\n      `?q=${query}` +\n      `&from=${timeFilter.from}` +\n      `&to=${timeFilter.to}` +\n      (this.instanaOptions.showOffline ? `` : `&time=${timeFilter.to}&size=100`);\n\n    snapshots = getRequest(this.instanaOptions, fetchSnapshotContextsUrl)\n      .then((contextsResponse: any) => {\n        return Promise.all(\n          contextsResponse.data.map(({ snapshotId, host }: any) => {\n            let snapshotInfo = this.snapshotInfoCache.get(snapshotId);\n            if (snapshotInfo) {\n              return snapshotInfo;\n            }\n\n            const fetchSnapshotUrl =\n              `/api/snapshots/${snapshotId}` +\n              (this.instanaOptions.showOffline\n                ? `?from=${timeFilter.from}&to=${timeFilter.to}`\n                : `?time=${timeFilter.to}`); // @see SnapshotApiResource#getSnapshot\n\n            snapshotInfo = getRequest(this.instanaOptions, fetchSnapshotUrl, true).then((snapshotResponse: any) => {\n              // check for undefined because the fetchSnapshotContexts is buggy\n              if (snapshotResponse !== undefined) {\n                return {\n                  snapshotId,\n                  host,\n                  response: this.reduceSnapshot(snapshotResponse),\n                };\n              }\n\n              return null;\n            });\n\n            this.snapshotInfoCache.put(snapshotId, snapshotInfo, this.timeToLiveSnapshotInfoCache);\n            return snapshotInfo;\n          })\n        );\n      })\n      .then((response: any) => {\n        // undefined items need to be removed, because the fetchSnapshotContexts is buggy in the backend, maybe can be removed in the future\n        return _.compact(response);\n      });\n\n    this.snapshotCache.put(key, snapshots);\n    return snapshots;\n  }\n\n  buildQuery(target: InstanaQuery): string {\n    // check for entity.pluginId or entity.selfType, because otherwise the backend has a problem with `AND entity.pluginId`\n    if (`${target.entityQuery}`.includes('entity.pluginId:') || `${target.entityQuery}`.includes('entity.selfType:')) {\n      return encodeURIComponent(`${target.entityQuery}`);\n    } else {\n      return encodeURIComponent(`${target.entityQuery} AND entity.pluginId:${target.entityType.key}`);\n    }\n  }\n\n  buildSnapshotCacheKey(query: string, timeFilter: TimeFilter): string {\n    return query + SEPARATOR + getTimeKey(timeFilter);\n  }\n\n  reduceSnapshot(snapshotResponse: any) {\n    // reduce data to used label formatting values\n    snapshotResponse.data = _.pick(snapshotResponse.data, ['id', 'label', 'plugin', 'data']);\n    return snapshotResponse;\n  }\n\n  readTimeSeries(values: any, aggregation: SelectableValue, timeFilter: TimeFilter) {\n    if (aggregation && aggregation.key === 'SUM') {\n      return this.correctMeanToSum(values, timeFilter);\n    }\n    return values;\n  }\n\n  correctMeanToSum(values: any, timeFilter: TimeFilter) {\n    const secondMultiplier = parseInt(getDefaultMetricRollupDuration(timeFilter).key, 10) / 1000;\n    return _.map(values, (value) => {\n      return {\n        value: value.value ? value.value * secondMultiplier : null,\n        timestamp: value.timestamp,\n      };\n    });\n  }\n\n  fetchMetricsForSnapshot(snapshotId: string, timeFilter: TimeFilter, rollup: number, metric: any) {\n    let url =\n      `/api/metrics?metric=${metric.key}` +\n      `&from=${timeFilter.from}` +\n      `&to=${timeFilter.to}` +\n      `&rollup=${rollup}` +\n      `&fillTimeSeries=true` +\n      `&snapshotId=${snapshotId}`;\n    return getRequest(this.instanaOptions, url);\n  }\n\n  getHostSuffix(host: string): string {\n    if (host) {\n      return ' (on host \"' + host + '\")';\n    }\n    return '';\n  }\n\n  buildLabel(snapshotResponse: any, host: any, target: InstanaQuery, index: any, metric: any): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', snapshotResponse.data.label);\n      label = _.replace(label, '$plugin', snapshotResponse.data.plugin); // not documented\n      label = _.replace(label, '$snapshot', snapshotResponse.data.id); // not documented\n      label = _.replace(label, '$host', host ? host : 'unknown');\n      label = _.replace(label, '$pid', _.get(snapshotResponse.data, ['data', 'pid'], ''));\n      label = _.replace(label, '$type', _.get(snapshotResponse.data, ['data', 'type'], ''));\n      label = _.replace(label, '$name', _.get(snapshotResponse.data, ['data', 'name'], ''));\n      label = _.replace(label, '$service', _.get(snapshotResponse.data, ['data', 'service_name'], ''));\n      if (target.freeTextMetrics) {\n        label = _.replace(label, '$metric', metric.key);\n      } else {\n        label = _.replace(label, '$metric', _.get(target, ['metric', 'key'], 'n/a'));\n      }\n      label = _.replace(label, '$index', index + 1);\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n    return target.timeShift && target.timeShiftIsValid\n      ? snapshotResponse.data.label + this.getHostSuffix(host) + ' - ' + target.timeShift\n      : snapshotResponse.data.label + this.getHostSuffix(host);\n  }\n}\n","\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--8-1!../node_modules/postcss-loader/src/index.js??ref--8-2!../node_modules/sass-loader/lib/loader.js!./instana-grafana.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/dist/cjs.js??ref--8-1!../node_modules/postcss-loader/src/index.js??ref--8-2!../node_modules/sass-loader/lib/loader.js!./instana-grafana.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--8-1!../node_modules/postcss-loader/src/index.js??ref--8-2!../node_modules/sass-loader/lib/loader.js!./instana-grafana.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","export default [\n  {\n    label: 'SUM',\n  },\n  {\n    label: 'MEAN',\n  },\n  {\n    label: 'MIN',\n  },\n  {\n    label: 'MAX',\n  },\n];\n","export default ['DESTINATION', 'SOURCE'];\n","export default [\n  { key: 'pageLoad', label: 'Page Loads' },\n  { key: 'page_change', label: 'Page Transitions' },\n  { key: 'resourceLoad', label: 'Resources' },\n  { key: 'httpRequest', label: 'HTTP Requests' },\n  { key: 'error', label: 'Errors' },\n  { key: 'custom', label: 'Custom Events' },\n];\n","export default [\n  { key: 'calls', label: 'Call count', description: 'calls', aggregations: [{ key: 'SUM', label: 'SUM' }] },\n  {\n    key: 'latency',\n    label: 'Call latency',\n    description: 'latency',\n    aggregations: [\n      { key: 'MAX', label: 'MAX' },\n      { key: 'MEAN', label: 'MEAN' },\n      { key: 'MIN', label: 'MIN' },\n      { key: 'P25', label: 'P25' },\n      { key: 'P50', label: 'P50' },\n      { key: 'P75', label: 'P75' },\n      { key: 'P90', label: 'P90' },\n      { key: 'P95', label: 'P95' },\n      { key: 'P98', label: 'P98' },\n      { key: 'P99', label: 'P99' },\n    ],\n  },\n  { key: 'errors', label: 'Error rate', description: 'errors', aggregations: [{ key: 'MEAN', label: 'MEAN' }] },\n  {\n    key: 'services',\n    label: 'Service Count',\n    description: 'services',\n    aggregations: [{ key: 'DISTINCT_COUNT', label: 'DISTINCT_COUNT' }],\n  },\n];\n","export default [\n  {\n    value: 1, // 1s\n    label: '1s',\n  },\n  {\n    value: 5, // 5s\n    label: '5s',\n  },\n  {\n    value: 10, // 10s\n    label: '10s',\n  },\n  {\n    value: 60, // 1m\n    label: '1min',\n  },\n  {\n    value: 60 * 5, // 5m\n    label: '5min',\n  },\n  {\n    value: 60 * 10, // 10m\n    label: '10min',\n  },\n  {\n    value: 60 * 60, // 1h\n    label: '1h',\n  },\n  {\n    value: 60 * 60 * 5, // 5h\n    label: '5h',\n  },\n  {\n    value: 60 * 60 * 10, // 10h\n    label: '10h',\n  },\n  {\n    value: 60 * 60 * 24, // 1d\n    label: '1d',\n  },\n  {\n    value: 60 * 60 * 24 * 5, // 5d\n    label: '5d',\n  },\n  {\n    value: 60 * 60 * 24 * 10, // 10d\n    label: '10d',\n  },\n];\n","export default [\n  {\n    key: 'cpu.used', // metric.key\n    value: 'cpu.count', // value of the metric found in GET /snapshots/{snapshotId}\n    label: 'cpu.max', // label that shall be shown as target in graph\n  },\n  {\n    key: 'memory.used',\n    value: 'memory.total',\n    label: 'memory.max',\n  },\n  {\n    key: 'openFiles.used',\n    value: 'openFiles.max',\n    label: 'openFiles.max',\n  },\n];\n","/**\n * Do not remove the commented stuff.\n */\nexport default [\n  {\n    label: 'Infrastructure built-in metrics',\n    key: 0,\n  },\n  {\n    label: 'Infrastructure custom metrics',\n    key: 1,\n  },\n  {\n    // replaces Application metrics(4) & Service metrics(5) & Endpoint metrics(6)\n    label: 'Application/service/endpoint metrics',\n    key: 4,\n  },\n  {\n    label: 'Analyze application calls',\n    key: 2,\n  },\n  {\n    label: 'Analyze website',\n    key: 3,\n  },\n  {\n    label: 'SLO information',\n    key: 7,\n  },\n];\n","export default [\n  { key: 'EQUALS', label: 'equals', type: 'STRING' },\n  { key: 'NOT_EQUAL', label: 'does not equal', type: 'STRING' },\n  { key: 'CONTAINS', label: 'contains', type: 'STRING' },\n  { key: 'NOT_CONTAIN', label: 'does not contain', type: 'STRING' },\n  { key: 'NOT_EMPTY', label: 'is present', type: 'STRING' },\n  { key: 'IS_EMPTY', label: 'is not present', type: 'STRING' },\n\n  { key: 'EQUALS', label: '=', type: 'NUMBER' },\n  { key: 'NOT_EQUAL', label: '!=', type: 'NUMBER' },\n  { key: 'LESS_THAN', label: '<', type: 'NUMBER' },\n  { key: 'GREATER_THAN', label: '>', type: 'NUMBER' },\n  { key: 'IS_EMPTY', label: 'is empty', type: 'NUMBER' },\n\n  { key: 'EQUALS', label: 'is', type: 'BOOLEAN' },\n\n  { key: 'EQUALS', label: 'equals', type: 'KEY_VALUE_PAIR' },\n  { key: 'NOT_EQUAL', label: 'does not equal', type: 'KEY_VALUE_PAIR' },\n  { key: 'CONTAINS', label: 'contains', type: 'KEY_VALUE_PAIR' },\n  { key: 'NOT_CONTAIN', label: 'does not contain', type: 'KEY_VALUE_PAIR' },\n  { key: 'NOT_EMPTY', label: 'is present', type: 'KEY_VALUE_PAIR' },\n  { key: 'IS_EMPTY', label: 'is not present', type: 'KEY_VALUE_PAIR' },\n];\n","export default [\n  {\n    availableFor: 1000 * 60 * 60 * 24, // 1d\n    rollup: 1000, // 1s\n    label: '1s',\n  },\n  {\n    availableFor: 1000 * 60 * 60 * 24, // 1d\n    rollup: 1000 * 5, // 5s\n    label: '5s',\n  },\n  {\n    availableFor: 1000 * 60 * 60 * 24 * 31, // 1 month\n    rollup: 1000 * 60, // 1m\n    label: '1min',\n  },\n  {\n    availableFor: 1000 * 60 * 60 * 24 * 31 * 3, // 3 months\n    rollup: 1000 * 60 * 5, // 5m\n    label: '5min',\n  },\n  {\n    availableFor: 1000 * 60 * 60 * 24 * 31 * 12, // 1 year aka forever\n    rollup: 1000 * 60 * 60, // 1h\n    label: '1h',\n  },\n];\n","export default [\n  {\n    key: 'SLI',\n    label: 'SLI',\n  },\n  {\n    key: 'Remaining Error Budget',\n    label: 'Remaining Error Budget',\n  },\n  {\n    key: 'Timeseries',\n    label: 'Timeseries',\n  },\n];\n","// can be removed once mixpanel shows no old plugins around\nimport _ from 'lodash';\nimport metric_categories from './lists/metric_categories';\n\nexport default function (target: any) {\n  // 1.3.1 towards 2.0.0\n  if (target.entityType && typeof target.entityType === 'string') {\n    target.entityType = { key: target.entityType, label: target.entityType };\n  }\n\n  // 2.3.1 towards 2.4.0\n  if (target.filter && target.filter !== '') {\n    if (!target.customFilters) {\n      target.customFilters = [];\n      target.customFilters.push({ value: target.filter });\n    }\n  }\n\n  // 2.4.2 towards 2.4.3\n  if (target.timeInterval) {\n    if (target.timeInterval.value) {\n      target.timeInterval = { key: target.timeInterval.value, label: target.timeInterval.label };\n    } else if (target.timeInterval.rollup) {\n      target.timeInterval = { key: target.timeInterval.rollup, label: target.timeInterval.label };\n    }\n  }\n\n  //2.4.4 towards 2.5.0\n  if (target.metricCategory === '5') {\n    //old service metric view\n    target.metricCategory = '4';\n    target.service = {}; //because target.service does not exist yet.\n    target.service.key = target.entity.key;\n    target.service.label = target.entity.label;\n    if (target.selectedApplication && target.selectedApplication.key) {\n      target.entity.key = target.selectedApplication.key;\n      target.entity.label = target.selectedApplication.label;\n    } else {\n      target.entity.key = null;\n      target.entity.label = 'Test';\n    }\n  }\n\n  //2.4.4 towards 2.5.0\n  if (target.metricCategory === '6') {\n    //old endpoint metric view\n    target.metricCategory = '4';\n    target.endpoint = {}; //because target.endpoint does not exist yet.\n    target.endpoint.key = target.entity.key;\n    if (target.selectedApplication && target.selectedApplication.key) {\n      target.entity.key = target.selectedApplication.key;\n      target.entity.label = target.selectedApplication.label;\n    } else {\n      target.entity.key = null;\n      target.entity.label = 'Test';\n    }\n  }\n\n  //2.7.3 towards 3.0 (Angular to React Migration)\n  if (target.aggregation && typeof target.aggregation === 'string') {\n    target.aggregation\n      ? (target.aggregation = { key: target.aggregation, label: target.aggregation })\n      : (target.aggregation = {});\n    target.aggregationFunction\n      ? (target.aggregationFunction = {\n          key: target.aggregationFunction.label,\n          label: target.aggregationFunction.label,\n        })\n      : (target.aggregationFunction = {});\n  }\n  if (target.customFilters && target.customFilters.length > 0 && target.customFilters[0].value) {\n    target.customFilters = _.map(target.customFilters, (cf) => cf.value);\n  }\n  if (target.filters && target.filters.length > 0 && !target.filters[0].tag.key && !target.filters[0].tag.label) {\n    _.forEach(target.filters, (filter) => {\n      filter.tag.label = filter.tag.key;\n    });\n  }\n  if (target.group && target.group.key && !target.group.label) {\n    target.group.label = target.group.key;\n  }\n  if (target.metricCategory && typeof target.metricCategory === 'string') {\n    target.metricCategory = _.find(\n      metric_categories,\n      (category) => category.key === parseInt(target.metricCategory, 10)\n    );\n  }\n\n  //3.0.1 towards 3.1.0\n  if (target.callToEntity && target.callToEntity.key) {\n    target.callToEntity = target.callToEntity.key;\n  }\n  if (target.applicationCallToEntity && target.applicationCallToEntity.key) {\n    target.applicationCallToEntity = target.applicationCallToEntity.key;\n  }\n  if (target.filters && target.filters.length > 0) {\n    target.filters.forEach((filter: any) => {\n      if (filter.entity && filter.entity.key) {\n        filter.entity = filter.entity.key;\n      }\n    });\n  }\n}\n","import { InstanaOptions } from './types/instana_options';\nimport { DataSourcePlugin } from '@grafana/data';\nimport { DataSource } from './datasources/DataSource';\nimport { ConfigEditor } from './components/ConfigEditor';\nimport { QueryEditor } from './components/QueryEditor';\nimport { InstanaQuery } from './types/instana_query';\n\nexport const plugin = new DataSourcePlugin<DataSource, InstanaQuery, InstanaOptions>(DataSource)\n  .setConfigEditor(ConfigEditor)\n  .setQueryEditor(QueryEditor);\n","import _ from 'lodash';\nimport { InstanaQuery } from '../types/instana_query';\n\nexport function aggregateTarget(data: any, target: InstanaQuery) {\n  const targetLabel = buildAggregationLabel(target);\n  data = _.filter(data, (d) => d.target !== targetLabel); // filter out any previously calculated aggregations\n  let concatedTargetData = concatTargetData(data);\n\n  let dataGroupedByTimestamp = _.groupBy(concatedTargetData, function (d) {\n    return d[1];\n  });\n\n  let aggregatedData = aggregateDataOfTimestamp(dataGroupedByTimestamp, target.aggregationFunction.label!);\n  aggregatedData = _.sortBy(aggregatedData, [\n    function (datapoint) {\n      return datapoint[1];\n    },\n  ]);\n\n  return buildResult(aggregatedData, target.refId, targetLabel);\n}\n\nfunction concatTargetData(data: any) {\n  let result: any = [];\n  _.each(data, (entry) => {\n    result = _.concat(result, entry.datapoints);\n  });\n  return result;\n}\n\nfunction aggregateDataOfTimestamp(dataGroupedByTimestamp: any, aggregationLabel: string) {\n  let result: any = [];\n  _.each(dataGroupedByTimestamp, (timestampData, timestamp) => {\n    let valuesOfTimestamp = _.map(timestampData, (datapoint) => {\n      return datapoint[0];\n    });\n    let aggregatedValue = aggregate(aggregationLabel, valuesOfTimestamp);\n    result.push([aggregatedValue, parseInt(timestamp, 10)]);\n  });\n  return result;\n}\n\nfunction aggregate(aggregation: string, data: any) {\n  if (aggregation.toLowerCase() === 'sum') {\n    return _.sum(data);\n  } else if (aggregation.toLowerCase() === 'mean') {\n    return _.mean(data);\n  } else if (aggregation.toLowerCase() === 'min') {\n    return _.min(data);\n  } else if (aggregation.toLowerCase() === 'max') {\n    return _.max(data);\n  } else {\n    //apply not aggregation\n    return data;\n  }\n}\n\nfunction buildResult(aggregatedData: any, refId: string, target: string) {\n  return {\n    datapoints: aggregatedData,\n    refId: refId,\n    target: target,\n  };\n}\n\nfunction buildAggregationLabel(target: InstanaQuery): string {\n  if (target.showAllMetrics) {\n    if (target.allMetrics.length > 1) {\n      if (target.customFilters && target.customFilters.length > 0) {\n        let label = '';\n        _.each(target.customFilters, (filter, index) => {\n          label += filter;\n          if (index !== target.customFilters.length - 1) {\n            label += '.';\n          }\n        });\n        label = label + ' (' + target.aggregationFunction.label + ')';\n        return label;\n      } else {\n        return target.aggregationFunction.label!;\n      }\n    } else {\n      return target.allMetrics[0].key + ' (' + target.aggregationFunction.label + ')';\n    }\n  } else {\n    return target.metric.key + ' (' + target.aggregationFunction.label + ')';\n  }\n}\n","import TagFilter from '../types/tag_filter';\nimport _ from 'lodash';\nimport { InstanaQuery } from '../types/instana_query';\n\nexport function createTagFilter(filter: TagFilter) {\n  let tagFilter = {\n    name: filter.tag.key,\n    operator: filter.operator.key,\n    value: filter.stringValue,\n  };\n\n  if ('NUMBER' === filter.tag.type) {\n    if (filter.numberValue !== null) {\n      tagFilter.value = filter.numberValue.toString();\n    }\n  } else if ('BOOLEAN' === filter.tag.type) {\n    tagFilter.value = filter.booleanValue.toString();\n  }\n\n  return tagFilter;\n}\n\nexport function readItemMetrics(target: InstanaQuery, response: any, getLabel: any) {\n  if (!response.data) {\n    return response;\n  }\n\n  // as we map two times we need to flatten the result\n  return _.flatten(\n    response.data.items.map((item: any, index: number) => {\n      return _.map(item.metrics, (value, key) => {\n        return {\n          target: getLabel(target, item, key, index),\n          datapoints: _.map(value, (metric) => [metric[1], metric[0]]),\n          refId: target.refId,\n          key: target.stableHash,\n        };\n      });\n    })\n  );\n}\n","import _ from 'lodash';\n\nimport TimeFilter from '../types/time_filter';\n\nconst omitLabels = [\n  'refId',\n  'pluginId',\n  'showWarningCantShowAllResults',\n  'timeShiftIsValid',\n  'useFreeTextMetrics',\n  'showGroupBySecondLevel',\n  'canShowAllMetrics',\n  'timeFilter',\n  'stableHash',\n];\n\nexport function generateStableHash(obj: any): string {\n  let pseudoHash = _.omit(obj, omitLabels);\n  pseudoHash = _.mapValues(pseudoHash, (value: any) => {\n    // to reduce overhead of interface Selectable\n    if (value != null && typeof value === 'object' && 'key' in value) {\n      value = value.key;\n    }\n\n    return value;\n  });\n  return JSON.stringify(pseudoHash);\n}\n\n/*\n  Check if two time filters are overlapping.\n  Return true when:\n  from |-------------------| to (t2)\n              from |--------------------| to (t1)\n  Returns false when:\n     from |-------------------| to (t2)\nfrom |----------------------------------------| to (t1)\n  from |-------------------| to (t2)\n                        from |-------------------| to (t1)\n*/\nexport function hasIntersection(t1: TimeFilter, t2: TimeFilter): boolean {\n  return t1.from < t2.to && t1.from >= t2.from; // t1.windowSize === t2.windowSize\n}\n\n/*\n  Appends new found items to already existing data in cache.\n  Also removes old data accordingly (e.g. if 4 new datapoints were added,\n  the corresponding oldest four datapoints are removed).\n*/\nexport function appendData(newDeltaData: any, cachedData: any): any {\n  _.each(newDeltaData, (deltaData) => {\n    let matchingCachedData = _.find(cachedData, (o) => o.key === deltaData.key && o.target === deltaData.target);\n    if (matchingCachedData && deltaData.datapoints) {\n      const size = matchingCachedData.datapoints.length;\n      let datapoints = deltaData.datapoints.concat(matchingCachedData.datapoints);\n      datapoints = _.sortedUniqBy(\n        datapoints.sort((a: any, b: any) => a[1] - b[1]),\n        (a: any) => a[1]\n      );\n      matchingCachedData.datapoints = _.takeRight(datapoints, size);\n      matchingCachedData.target = deltaData.target;\n    } else {\n      cachedData.push(deltaData);\n    }\n  });\n  return cachedData;\n}\n","import Cache from '../cache';\nimport { getRequest } from './request_handler';\nimport { InstanaOptions } from '../types/instana_options';\n\nconst versionCache: Cache<number> = new Cache<number>();\n\n/*\n  Get version of current Instana backend and cache it for 10 minutes.\n  This should be the ONLY way to retrieve any information about the Instana backend version.\n */\nexport default function getVersion(options: InstanaOptions) {\n  let cachedVersion = versionCache.get('version');\n  if (cachedVersion) {\n    return Promise.resolve(cachedVersion);\n  }\n\n  return getRequest(options, '/api/instana/version').then(\n    (result: any) => {\n      if (result.data && result.data.imageTag) {\n        const majorVersion = parseInt(result.data.imageTag.split('.', 2)[1], 10) || null;\n        if (majorVersion) {\n          versionCache.put(options.url, majorVersion, 600000);\n        }\n        return majorVersion;\n      }\n      return null;\n    },\n    (error: any) => {\n      return null;\n    }\n  );\n}\n","import _ from 'lodash';\n\n// check grafana version (5.3+)\nexport default () => {\n  const version = _.get(window, ['grafanaBootData', 'settings', 'buildInfo', 'version'], '3.0.0');\n  const versions = _.split(version, '.', 2).map((v) => {\n    return parseInt(v, 10);\n  });\n  return version[0] >= 6 || (versions[0] >= 5 && versions[1] >= 3);\n};\n","/**\n * Util method to validate query intervals which are too big.\n *\n * @param windowSize in ms\n * @param queryIntervalLimit in ms\n */\nexport function isInvalidQueryInterval(windowSize: number, queryIntervalLimit?: number): boolean {\n  if (queryIntervalLimit) {\n    if (queryIntervalLimit > 0) {\n      return Math.floor(windowSize / 1000) * 1000 > queryIntervalLimit;\n    }\n    return false;\n  }\n\n  return false;\n}\n","import { getBackendSrv } from '@grafana/runtime';\nimport { BackendSrvRequest } from '@grafana/runtime/services/backendSrv';\nimport { InstanaOptions } from '../types/instana_options';\nimport { DataSourceInstanceSettings } from '@grafana/data';\n\nexport function getRequest(\n  options: InstanaOptions,\n  endpoint: string,\n  swallowError = false,\n  maxRetries = 1\n): any {\n  const request = {\n    method: 'GET',\n    url: options.url + endpoint,\n  };\n\n  return doRequest(options, request, swallowError, maxRetries);\n}\n\nexport function postRequest(\n  options: InstanaOptions,\n  endpoint: string,\n  data: {},\n  swallowError = false,\n  maxRetries = 0\n): any {\n  const request = {\n    method: 'POST',\n    url: options.url + endpoint,\n    data: data,\n  };\n\n  return doRequest(options, request, swallowError, maxRetries);\n}\n\nfunction doRequest(\n  options: InstanaOptions,\n  request: BackendSrvRequest,\n  swallowError: boolean,\n  maxRetries: number\n): any {\n  if (!options.useProxy) {\n    request['headers'] = {\n      Authorization: 'apiToken ' + options.apiToken,\n    };\n  }\n  return getBackendSrv()\n    .datasourceRequest(request)\n    .catch((error) => {\n      if (error.status === 429) {\n        // if the error was caused by a concurrent execution limit, we will retry\n        if (maxRetries > 0 && error.data?.errors && error.data.errors[0] && error.data.errors[0].includes(\"concurrent\")) {\n          const backoff = maxRetries >= 4 ? 10000 : (4 - maxRetries) * 20000; // something between 10 and 60 seconds\n          return new Promise(resolve => setTimeout(resolve, backoff)).then(() => {\n            return doRequest(options, request, swallowError, maxRetries - 1);\n          });\n        }\n        throw new Error('API limit is reached.');\n        return;\n      }\n\n      if (swallowError && (error.status >= 400 || error.status < 500)) {\n        console.log(error);\n        return;\n      }\n      if (maxRetries > 0) {\n        return doRequest(options, request, swallowError, maxRetries - 1);\n      }\n      throw error;\n    });\n}\n\nexport function instanaUrl(instanceSettings: DataSourceInstanceSettings<InstanaOptions>): string {\n  if (instanceSettings.jsonData.useProxy) {\n    return instanceSettings.url + '/instana'; // to match proxy route in plugin.json\n  } else {\n    return instanceSettings.jsonData.url;\n  }\n}\n","import granularities from '../lists/granularities';\nimport TimeFilter from '../types/time_filter';\nimport rollups from '../lists/rollups';\nimport Selectable from '../types/selectable';\n\nconst MAX_DATAPOINTS_ANALYZE = 600;\nconst MAX_DATAPOINTS_INFRASTRUCTURE = 800;\nconst UI_DATAPOINTS_ANALYZE = 80;\n\nfunction currentTime() {\n  return Date.now();\n}\n\nfunction getWindowSize(timeFilter: TimeFilter): number {\n  return timeFilter.from ? timeFilter.to - timeFilter.from : timeFilter.windowSize;\n}\n\nexport function getDefaultChartGranularity(windowSize: number): Selectable {\n  return getPossibleGranularities(windowSize, UI_DATAPOINTS_ANALYZE)[0];\n}\n\nexport function getPossibleGranularities(windowSize: number, maxValues = MAX_DATAPOINTS_ANALYZE): Selectable[] {\n  let possibleGranularities = granularities.filter(\n    (granularity) => windowSize / 1000 / granularity.value <= maxValues && granularity.value * 1000 <= windowSize\n  );\n\n  // window sizes of this length and up have a granularity of at least 1h\n  if (windowSize > 48000001) {\n    possibleGranularities = possibleGranularities.filter((granularity) => granularity.value >= 3600);\n  }\n\n  if (windowSize >= 1800000) {\n    possibleGranularities = possibleGranularities.filter((granularity) => granularity.value >= 60);\n  }\n\n  if (possibleGranularities.length > 0) {\n    return possibleGranularities.map((granularity) => ({\n      key: granularity.value.toString(),\n      label: granularity.label,\n    }));\n  }\n\n  return [\n    {\n      key: granularities[granularities.length - 1].value.toString(),\n      label: granularities[granularities.length - 1].label,\n    },\n  ];\n}\n\nexport function getDefaultMetricRollupDuration(timeFilter: TimeFilter): Selectable {\n  return getPossibleRollups(timeFilter)[0];\n}\n\nexport function getPossibleRollups(timeFilter: TimeFilter): Selectable[] {\n  // Ignoring time differences for now since small time differences\n  // can be accepted. This time is only used to calculate the rollup.\n  const now = currentTime();\n  const windowSize = getWindowSize(timeFilter);\n\n  let possibleRollups = rollups\n    .filter((rollupDefinition) => timeFilter.from >= now - rollupDefinition.availableFor)\n    .filter((rollUp) => windowSize >= rollUp.rollup && windowSize / rollUp.rollup <= MAX_DATAPOINTS_INFRASTRUCTURE);\n\n  if (possibleRollups.length > 0) {\n    return possibleRollups.map((rollup) => ({\n      key: rollup.rollup.toString(),\n      label: rollup.label,\n    }));\n  }\n\n  return [\n    {\n      key: rollups[rollups.length - 1].rollup.toString(),\n      label: rollups[rollups.length - 1].label,\n    },\n  ];\n}\n","import { TimeSeries, TimeSeriesPoints } from '@grafana/data';\n\nexport function emptyResultData(refId: string): TimeSeries {\n  return {\n    target: refId,\n    datapoints: [],\n  };\n}\n\nexport function buildTimeSeries(label: string, refId: string, datapoints: TimeSeriesPoints): TimeSeries {\n  return {\n    target: label,\n    refId: refId,\n    datapoints: datapoints,\n  };\n}\n","import { TimeRange } from '@grafana/data/types/time';\nimport TimeFilter from '../types/time_filter';\nimport { SEPARATOR } from '../GlobalVariables';\n\nexport function readTime(time: TimeRange): TimeFilter {\n  const from = Math.floor(new Date(time!.from.valueOf()).getTime() / 1000) * 1000;\n  const to = Math.floor(new Date(time!.to.valueOf()).getTime() / 1000) * 1000;\n  return {\n    from: from,\n    to: to,\n    windowSize: to - from,\n  };\n}\n\nexport function getWindowSize(timeFilter: TimeFilter): number {\n  return timeFilter.from ? timeFilter.to - timeFilter.from : timeFilter.windowSize;\n}\n\nexport function getTimeKey(timeFilter: TimeFilter): string {\n  // time might be part of a cache key as this can cause different results\n  return msToMin(timeFilter.from) + SEPARATOR + msToMin(timeFilter.to);\n}\n\nfunction msToMin(time: number): number {\n  return Math.floor(time / 60000);\n}\n\nexport function hoursToMs(hours: any): number {\n  if (hours > 0) {\n    return hours * 60 * 60 * 1000;\n  }\n  return 0;\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__grafana_data__;","module.exports = __WEBPACK_EXTERNAL_MODULE__grafana_runtime__;","module.exports = __WEBPACK_EXTERNAL_MODULE__grafana_ui__;","module.exports = __WEBPACK_EXTERNAL_MODULE_lodash__;","module.exports = __WEBPACK_EXTERNAL_MODULE_react__;"],"sourceRoot":""}