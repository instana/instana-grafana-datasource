{
  "port": 8010,
  "protocol": "http",
  "name": "UI backend",
  "mode": "text",
  "stubs": [
    {
      "predicates": [{
        "equals": {
          "method": "OPTIONS"
        }
      }],
      "responses": [{
        "is": {
          "headers": {
            "Access-Control-Allow-Origin": "*",
            "Access-Control-Allow-Methods": "GET, POST, PUT",
            "Access-Control-Allow-Headers": "*"
          }
        },
        "_behaviors": {
          "copy": [
            {
              "from": { "headers": "Access-Control-Allow-Origin" },
              "into": "${ALLOW-ORIGIN}",
              "using": { "method": "regex", "selector": ".+" }
            },
            {
              "from": { "headers": "Access-Control-Allow-Headers" },
              "into": "${ALLOW-HEADERS}"
            }
          ]
        }
      }]
    },
    {
      "predicates": [{
        "equals": {
          "method": "GET",
          "path": "/api/snapshots/non-existing-snapshot-id",
          "headers": {
            "Authorization": "apiToken valid-api-token"
          }
        }
      }],
      "responses": [{
        "is": {
          "statusCode": 404,
          "headers": {
            "Content-Type": "application/json;charset=utf-8",
            "Access-Control-Allow-Origin": "*",
            "Access-Control-Allow-Methods": "GET, POST, PUT, PATCH, DELETE"
          },
          "body": "{\n    \"error\": \"There is no snapshot for the given id or it can't be found.\"\n}"
        }
      }]
    },
    {
      "predicates": [{
        "equals": {
          "method": "GET",
          "path": "/api/snapshots/non-existing-snapshot-id"
        }
      }],
      "responses": [{
        "is": {
          "statusCode": 401,
          "headers": {
            "Content-Type": "application/json;charset=utf-8",
            "Access-Control-Allow-Origin": "*",
            "Access-Control-Allow-Methods": "GET, POST, PUT, PATCH, DELETE"
          },
          "body": "{\n    \"errors\": [\n        \"Unauthorized request\"\n    ]\n}"
        }
      }]
    },
    {
      "predicates": [{
        "equals": {
          "method": "GET",
          "path": "/api/snapshots/types",
          "query": {
            "q": "filler"
          }
        }
      }],
      "responses": [{
        "is": {
          "statusCode": 200,
          "headers": {
            "Content-Type": "application/json;charset=utf-8",
            "Access-Control-Allow-Origin": "*",
            "Access-Control-Allow-Methods": "GET, POST, PUT, PATCH, DELETE"
          },
          "body": "[\"host\", \"awsEc\", \"hadoopYARN\", \"process\", \"dropwizardApplicationContainer\"]"
        }
      }]
    },
    {
      "predicates": [{
        "equals": {
          "method": "GET",
          "path": "/api/snapshots/types"
        }
      }],
      "responses": [{
        "is": {
          "statusCode": 200,
          "headers": {
            "Content-Type": "application/json;charset=utf-8",
            "Access-Control-Allow-Origin": "*",
            "Access-Control-Allow-Methods": "GET, POST, PUT, PATCH, DELETE"
          },
          "body": "[]"
        }
      }]
    },
    {
      "predicates": [{
        "equals": {
          "method": "GET",
          "path": "/api/infrastructure-monitoring/catalog/plugins"
        }
      }],
      "responses": [{
        "is": {
          "statusCode": 200,
          "headers": {
            "Content-Type": "application/json;charset=utf-8",
            "Access-Control-Allow-Origin": "*",
            "Access-Control-Allow-Methods": "GET, POST, PUT, PATCH, DELETE"
          },
          "body": "[{\"plugin\": \"host\", \"label\": \"Host\"}, {\"plugin\": \"process\", \"label\": \"Process\"}, {\"plugin\": \"awsEc\", \"label\": \"AWS ElastiCache instance\"}, {\"plugin\": \"hadoopYARN\", \"label\": \"Hadoop YARN\"}, {\"plugin\": \"dropwizardApplicationContainer\", \"label\": \"Dropwizard\"}]"
        }
      }]
    },
    {
      "predicates": [{
        "equals": {
          "method": "GET",
          "path": "/api/infrastructure-monitoring/catalog/metrics/process",
          "query": {
            "filter": "builtin"
          }
        }
      }],
      "responses": [{
        "is": {
          "statusCode": 200,
          "headers": {
            "Content-Type": "application/json;charset=utf-8",
            "Access-Control-Allow-Origin": "*",
            "Access-Control-Allow-Methods": "GET, POST, PUT, PATCH, DELETE"
          },
          "body": "[{\"formatter\": \"NUMBER\",\"label\": \"Virtual\",\"description\": \"Virtual\",\"metricId\": \"mem.virtual\",\"pluginId\": \"process\"}, {\"formatter\": \"NUMBER\",\"label\": \"CPU\",\"description\": \"CPU\",\"metricId\": \"cpu.user\",\"pluginId\": \"process\"}, {\"formatter\": \"NUMBER\",\"label\": \"CPU\",\"description\": \"CPU\",\"metricId\": \"cpu.sys\",\"pluginId\": \"process\"}]"
        }
      }]
    },
    {
      "predicates": [{
        "equals": {
          "method": "GET",
          "path": "/api/infrastructure-monitoring/catalog/metrics/dropwizardApplicationContainer",
          "query": {
            "filter": "custom"
          }
        }
      }],
      "responses": [{
        "is": {
          "statusCode": 200,
          "headers": {
            "Content-Type": "application/json;charset=utf-8",
            "Access-Control-Allow-Origin": "*",
            "Access-Control-Allow-Methods": "GET, POST, PUT, PATCH, DELETE"
          },
          "body": "[{\"formatter\": \"NUMBER\",\"label\": \"Dropwizard meter service.errors\",\"description\": \"Dropwizard meter\",\"metricId\": \"service.errors\",\"pluginId\": \"dropwizardApplicationContainer\"},{\"formatter\": \"NUMBER\",\"label\": \"Dropwizard meter KPI.errors\",\"description\": \"Dropwizard meter\",\"metricId\": \"KPI.errors\",\"pluginId\": \"dropwizardApplicationContainer\"},{\"formatter\": \"MILLIS\",\"label\": \"Dropwizard timer (99th)\",\"description\":\"Dropwizard timer, 99th percentile\",\"metricId\": \"KPI.time.99th\",\"pluginId\": \"dropwizardApplicationContainer\"}]"
        }
      }]
    },
    {
      "predicates": [{
        "equals": {
          "method": "GET",
          "path": "/api/snapshots",
          "query": {
            "q": "filler AND entity.pluginId:process"
          }
        }
      }],
      "responses": [{
        "is": {
          "statusCode": 200,
          "headers": {
            "Content-Type": "application/json;charset=utf-8",
            "Access-Control-Allow-Origin": "*",
            "Access-Control-Allow-Methods": "GET, POST, PUT, PATCH, DELETE"
          },
          "body": "[\"kBfqGyrfEXvUcwix_fL97vYegx0\",\"kBfqGyrfEXvUcwix_fL97vYegx1\"]"
        }
      }]
    },
    {
      "predicates": [{
        "equals": {
          "method": "GET",
          "path": "/api/snapshots",
          "query": {
            "q": "filler AND entity.pluginId:dropwizardApplicationContainer"
          }
        }
      }],
      "responses": [{
        "is": {
          "statusCode": 200,
          "headers": {
            "Content-Type": "application/json;charset=utf-8",
            "Access-Control-Allow-Origin": "*",
            "Access-Control-Allow-Methods": "GET, POST, PUT, PATCH, DELETE"
          },
          "body": "[\"0DtgUvTuwiV_OGCK0_GGuC3fBaw\"]"
        }
      }]
    },
    {
      "predicates": [{
        "equals": {
          "method": "GET",
          "path": "/api/snapshots/context",
          "query": {
            "q": "filler AND entity.pluginId:process"
          }
        }
      }],
      "responses": [{
        "is": {
          "statusCode": 200,
          "headers": {
            "Content-Type": "application/json;charset=utf-8",
            "Access-Control-Allow-Origin": "*",
            "Access-Control-Allow-Methods": "GET, POST, PUT, PATCH, DELETE"
          },
          "body": "[{\"snapshotId\":\"kBfqGyrfEXvUcwix_fL97vYegx0\",\"host\":\"host-1\"},{\"snapshotId\":\"kBfqGyrfEXvUcwix_fL97vYegx1\",\"host\":\"host-2\"}]"
        }
      }]
    },
    {
      "predicates": [{
        "equals": {
          "method": "GET",
          "path": "/api/snapshots/context",
          "query": {
            "q": "filler AND entity.pluginId:dropwizardApplicationContainer"
          }
        }
      }],
      "responses": [{
        "is": {
          "statusCode": 200,
          "headers": {
            "Content-Type": "application/json;charset=utf-8",
            "Access-Control-Allow-Origin": "*",
            "Access-Control-Allow-Methods": "GET, POST, PUT, PATCH, DELETE"
          },
          "body": "[{\"snapshotId\":\"0DtgUvTuwiV_OGCK0_GGuC3fBaw\",\"host\":\"host-3\"}]"
        }
      }]
    },
    {
      "predicates": [{
        "equals": {
          "method": "GET",
          "path": "/api/snapshots/kBfqGyrfEXvUcwix_fL97vYegx0"
        }
      }],
      "responses": [{
        "is": {
          "statusCode": 200,
          "headers": {
            "Content-Type": "application/json;charset=utf-8",
            "Access-Control-Allow-Origin": "*",
            "Access-Control-Allow-Methods": "GET, POST, PUT, PATCH, DELETE"
          },
          "body": "{\"id\": \"kBfqGyrfEXvUcwix_fL97vYegx1\",\"plugin\": \"process\",\"from\": 1516294054000,\"to\": 1516610096000,\"tags\": [],\"label\": \"node\",\"entityId\": {\"host\": \"0e:36:2c:ff:fe:a1:77:25\",\"pluginId\": \"com.instana.forge.infrastructure.os.process.Process\",\"steadyId\": \"30978\"}}"
        }
      }]
    },
    {
      "predicates": [{
        "equals": {
          "method": "GET",
          "path": "/api/snapshots/kBfqGyrfEXvUcwix_fL97vYegx1"
        }
      }],
      "responses": [{
        "is": {
          "statusCode": 200,
          "headers": {
            "Content-Type": "application/json;charset=utf-8",
            "Access-Control-Allow-Origin": "*",
            "Access-Control-Allow-Methods": "GET, POST, PUT, PATCH, DELETE"
          },
          "body": "{\"id\": \"kBfqGyrfEXvUcwix_fL97vYegx1\",\"plugin\": \"process\",\"from\": 1516294054000,\"to\": 1516610096000,\"tags\": [],\"label\": \"node\",\"entityId\": {\"host\": \"0e:36:2c:ff:fe:a1:77:25\",\"pluginId\": \"com.instana.forge.infrastructure.os.process.Process\",\"steadyId\": \"30978\"}}"
        }
      }]
    },
    {
      "predicates": [{
        "equals": {
          "method": "GET",
          "path": "/api/snapshots/0DtgUvTuwiV_OGCK0_GGuC3fBaw"
        }
      }],
      "responses": [{
        "is": {
          "statusCode": 200,
          "headers": {
            "Content-Type": "application/json;charset=utf-8",
            "Access-Control-Allow-Origin": "*",
            "Access-Control-Allow-Methods": "GET, POST, PUT, PATCH, DELETE"
          },
          "body": "{\"id\": \"0DtgUvTuwiV_OGCK0_GGuC3fBaw\",\"plugin\": \"dropwizardApplicationContainer\",\"from\": 1516294054000,\"to\": 1516610096000,\"tags\": [],\"label\": \"node\",\"entityId\": {\"host\": \"0e:36:2c:ff:fe:a1:77:25\",\"pluginId\": \"dropwizardApplicationContainer\",\"steadyId\": \"30978\"}}"
        }
      }]
    },
    {
      "predicates": [{
        "equals": {
          "method": "GET",
          "path": "/api/metrics",
          "query": {
            "metric": "mem.virtual",
            "snapshotId": "kBfqGyrfEXvUcwix_fL97vYegx0"
          }
        }
      }],
      "responses": [{
        "inject": "<%- stringify(filename, 'metrics_factory_1.ejs') %>"
      }]
    },
    {
      "predicates": [{
        "equals": {
          "method": "GET",
          "path": "/api/metrics",
          "query": {
            "metric": "mem.virtual",
            "snapshotId": "kBfqGyrfEXvUcwix_fL97vYegx1"
          }
        }
      }],
      "responses": [{
        "inject": "<%- stringify(filename, 'metrics_factory_2.ejs') %>"
      }]
    },
    {
      "predicates": [{
        "equals": {
          "method": "GET",
          "path": "/api/metrics",
          "query": {
            "metric": "KPI.errors",
            "snapshotId": "0DtgUvTuwiV_OGCK0_GGuC3fBaw"
          }
        }
      }],
      "responses": [{
        "inject": "<%- stringify(filename, 'metrics_factory_3.ejs') %>"
      }]
    },
    {
      "predicates": [{
        "equals": {
          "headers": {
            "Authorization": "apiToken valid-api-token"
          }
        }
      }],
      "responses": [{
        "is": {
          "statusCode": 404,
          "headers": {
            "Content-Type": "application/json;charset=utf-8",
            "Access-Control-Allow-Origin": "*",
            "Access-Control-Allow-Methods": "GET, POST, PUT, PATCH, DELETE"
          },
          "body": "{\n    \"error\": \"The requested resource is not specified in imposters.ejs, so the catch-all stub responded.\"\n}"
        }
      }]
    },
    {
      "predicates": [],
      "responses": [{
        "is": {
          "statusCode": 401,
          "headers": {
            "Content-Type": "application/json;charset=utf-8",
            "Access-Control-Allow-Origin": "*",
            "Access-Control-Allow-Methods": "GET, POST, PUT, PATCH, DELETE"
          },
          "body": "{\n    \"errors\": [\n        \"Unauthorized request\"\n    ]\n}"
        }
      }]
    }
  ]
}
